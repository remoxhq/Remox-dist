{"version":3,"sources":["../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","utils/CSV.tsx","subpages/pay/payinput.tsx","pages/pay/index.tsx"],"names":["EOL","EOF","objectConverter","columns","Function","map","name","i","JSON","stringify","join","inferColumns","rows","columnSet","Object","create","forEach","row","column","push","pad","value","width","s","length","Array","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","f","t","N","I","n","eof","eol","token","c","j","slice","replace","preformatBody","formatValue","formatRow","Date","test","parse","convert","object","customConverter","format","concat","formatBody","formatRows","csv","dsv","csvParse","tsv","tsvParse","responseText","response","ok","Error","status","statusText","input","init","fetch","then","dsvParse","arguments","undefined","CSV","file","Promise","resolve","reject","a","url","URL","createObjectURL","res","toLowerCase","includes","result","index","data","values","split","Input","address","selectedWallet","setWallet","setIndex","overallIndex","amount","uniqueArr","isBasedOnDollar","setAmount","amountState","useState","anotherToken","setAnotherToken","useEffect","v","Coins","w","type","coinUrl","className","placeholder","defaultValue","onChange","e","target","required","arr","Number","step","min","onSelect","val","wallet","nameActivation","selected","list","onClick","splice","filter","Pay","storage","useSelector","selectStorage","selectedAccount","SelectSelectedAccount","isError","selectError","dispatch","useAppDispatch","router","useNavigate","balance","SelectBalances","usePay","BatchPay","submitTransaction","useMultisig","isPaying","setIsPaying","isSuccess","setSuccess","selectedType","setSelectedType","setAmountState","uniqueRef","useRef","generate","nameRef","addressRef","wallets","setWallets","amountRef","csvImport","setCsvImport","fileInput","setSelectedWallet","setList","current","wllt","amm","coin","amount2","coin2","parseFloat","files","DataTransfer","CELO","coins","toFixed","toString","Submit","preventDefault","addressList","amountList","tokenPrice","toAddress","tokenName","accountAddress","recipient","console","error","changeError","activate","message","onSubmit","checked","ref","Import","catch","fill","version","click","reduce","id","cols","isLoading","onClose","onAction"],"mappings":"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","file":"static/js/19.e8442d53.chunk.js","sourcesContent":["var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import { csv } from 'd3-fetch'\n\nclass CSV {\n    static async Import(file: File): Promise<string[][]> {\n        return new Promise(async (resolve, reject) => {\n\n            const url = URL.createObjectURL(file)\n\n            const res = await csv(url)\n            if (res) {\n                if (res.columns[0].toLowerCase().includes(\"name;address;amount;coin;amount2;coin2\")) {\n                    const result: string[][] = []\n                    for (let index = 0; index < res.length; index++) {\n                        const data = Object.values(res[index])[0]?.split(';')\n                        if (data && data.length > 0) {\n                            result.push(data)\n                        }else{\n                            reject(new Error(`Row is null`))\n                        }\n                    }\n                    resolve(result)\n                } else {\n                    reject(new Error(\"Columns are invalid. Please, set the column order like that: Name Address Amount Coin\"))\n                }\n            } else {\n                reject(new Error(`Cannot import an empty file`))\n            }\n        })\n    }\n}\n\nexport default CSV;","import { Dispatch, useEffect, useState } from \"react\";\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport { ClipLoader } from \"react-spinners\";\nimport { Coins } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport Dropdown from \"components/general/dropdown\";\n\n\nconst Input = ({ index, name, address, selectedWallet, setWallet, setIndex, overallIndex, amount, uniqueArr, isBasedOnDollar, setAmount, amountState }: { index: number, name: Array<string>, address: Array<string>, selectedWallet: DropDownItem[], setWallet: Dispatch<DropDownItem[]>, setIndex: Dispatch<number>, overallIndex: number, amount: Array<string>, uniqueArr: string[], isBasedOnDollar: boolean, setAmount: Dispatch<number[]>, amountState: number[] }) => {\n\n    const [anotherToken, setAnotherToken] = useState(false)\n\n    useEffect(() => {\n        if (!selectedWallet[index] && !selectedWallet[index + 1]) {\n            const v = Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0];\n            setWallet([...selectedWallet, v, v])\n        }\n\n    }, [])\n\n    return <>\n        <input className=\"col-span-2 sm:col-span-1 border text-black px-3 py-1 rounded-md\" placeholder=\"Name\" defaultValue={name[index]} type=\"text\" name={`name__${index}`} onChange={(e) => { name[index] = e.target.value; name[index + 1] = e.target.value }} /> {/* onBlur={(e) => setRefreshPage(generate())}*/}\n        <input className=\"col-span-2 sm:col-span-1 border text-black px-3 py-1 rounded-md\" placeholder=\"Address\" defaultValue={address[index]} type=\"text\" name={`address__${index}`} onChange={(e) => { address[index] = e.target.value; address[index + 1] = e.target.value }} required /> {/* onBlur={(e) => setRefreshPage(generate())}*/}\n        <div className={`col-span-3 sm:col-span-1 border text-black py-1 rounded-md grid ${isBasedOnDollar ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={amount[index]} type=\"number\" name={`amount__${index}`} onChange={(e) => {\n                amount[index] = e.target.value; \n                const arr = [...amountState]\n                arr[index] = Number(e.target.value)\n                setAmount(arr)\n            }} required step={'any'} min={0} />\n            {isBasedOnDollar && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={val => {\n                const wallet = [...selectedWallet];\n                wallet[index] = val;\n                setWallet(wallet)\n            }} nameActivation={true} selected={selectedWallet[index] ?? Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0]} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n\n        </div>\n        <div className=\"flex items-center\">\n            {overallIndex > 1 && <BsFillTrashFill className=\"text-red-500 cursor-pointer\" onClick={() => {\n                name.splice(index, 2);\n                address.splice(index, 2);\n                amount.splice(index, 2);\n                uniqueArr.splice(index, 2);\n                setWallet([...selectedWallet.filter((s, t) => t !== index && t !== index + 1)]);\n                setIndex(overallIndex - 1)\n                //setRefreshPage(generate())\n            }} />}\n        </div>\n        <div></div>\n        <div></div>\n        {anotherToken ? <div className={`col-span-3 sm:col-span-1 border text-black py-1 rounded-md grid ${isBasedOnDollar ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={amount[index + 1]} type=\"number\" name={`amount__${index + 1}`} onChange={(e) => {\n                amount[index + 1] = e.target.value\n                const arr = [...amountState]\n                arr[index + 1] = Number(e.target.value)\n                setAmount(arr)\n\n            }} step={'any'} min={0} />\n            {isBasedOnDollar && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={val => {\n                const wallet = [...selectedWallet];\n                wallet[index + 1] = val;\n                setWallet(wallet)\n            }} nameActivation={true} selected={selectedWallet[index + 1] ?? Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0]} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n\n        </div>\n            :\n            <div className=\"text-primary text-sm cursor-pointer\" onClick={() => setAnotherToken(true)}>\n                + Add another token\n            </div>\n        }\n        <div></div>\n\n        <div></div>\n        <div></div>\n        <div></div>\n        <div className=\"mt-5\"></div>\n    </>\n}\nexport default Input;","import { useState, useRef, useEffect, SyntheticEvent } from \"react\";\nimport { generate } from 'shortid'\nimport { useNavigate } from 'react-router-dom'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Success from \"components/general/success\";\nimport Error from \"components/general/error\";\nimport { DropDownItem } from \"types/dropdown\";\nimport { MultipleTransactionData } from \"types/sdk\";\nimport CSV from 'utils/CSV'\nimport { useSelector } from \"react-redux\";\nimport { selectStorage } from \"redux/reducers/storage\";\nimport Input from \"subpages/pay/payinput\";\nimport { Coins, TransactionFeeTokenName } from \"types/coins\";\nimport { useAppDispatch } from \"redux/hooks\";\nimport { changeError, selectError } from \"redux/reducers/notificationSlice\";\nimport { SelectSelectedAccount } from \"redux/reducers/selectedAccount\";\nimport { IBalanceItem, SelectBalances } from \"redux/reducers/currencies\";\nimport Button from \"components/button\";\nimport usePay, { PaymentInput } from \"API/usePay\";\nimport useMultisig from 'API/useMultisig'\n\n\nconst Pay = () => {\n\n    const storage = useSelector(selectStorage)\n    const selectedAccount = useSelector(SelectSelectedAccount)\n    const isError = useSelector(selectError)\n    const dispatch = useAppDispatch()\n    const router = useNavigate();\n\n    const balance = useSelector(SelectBalances)\n\n    const { BatchPay, Pay } = usePay()\n    const { submitTransaction } = useMultisig()\n\n    const [index, setIndex] = useState(1)\n    const [isPaying, setIsPaying] = useState(false)\n    const [isSuccess, setSuccess] = useState(false)\n\n    const [selectedType, setSelectedType] = useState(false)\n\n    const [amountState, setAmountState] = useState<number[]>([])\n    const uniqueRef = useRef<string[]>([generate(), generate()])\n    const nameRef = useRef<Array<string>>([])\n    const addressRef = useRef<Array<string>>([])\n    const [wallets, setWallets] = useState<DropDownItem[]>([])\n    const amountRef = useRef<Array<string>>([])\n\n    const [csvImport, setCsvImport] = useState<string[][]>([]);\n\n    const fileInput = useRef<HTMLInputElement>(null);\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>();\n    const [list, setList] = useState<Array<DropDownItem>>([]);\n\n    const reset = () => {\n        nameRef.current = []\n        addressRef.current = []\n        amountRef.current = []\n        uniqueRef.current = []\n        //setAmountState([])\n        //setWallets([]);\n    }\n\n\n    useEffect(() => {\n        if (csvImport.length > 0) {\n            const list = csvImport.filter(w => w[1] && w[2] && w[3] && w[4] && w[5])\n            reset()\n            let ind = 0;\n            const wllt: any[] = []\n            const amm: number[] = []\n            for (let index = 0; index < list.length; index++) {\n                const [name, address, amount, coin, amount2, coin2] = list[index].slice(0, 6)\n\n                uniqueRef.current.push(generate())\n                uniqueRef.current.push(generate())\n                nameRef.current.push((name || \"\"));\n                addressRef.current.push((address || \"\"));\n                amountRef.current.push((amount || \"\"));\n                amm.push(parseFloat(amount || \"0\"))\n                nameRef.current.push((name || \"\"));\n                addressRef.current.push((address || \"\"));\n                amountRef.current.push((amount2 || \"\"));\n                amm.push(parseFloat(amount2 || \"0\"))\n\n                const a = { ...Coins[coin as TransactionFeeTokenName], type: Coins[coin as TransactionFeeTokenName].value };\n                const b = { ...Coins[coin2 as TransactionFeeTokenName], type: Coins[coin2 as TransactionFeeTokenName].value };\n                const wallet = [a, b];\n                wllt.push(...wallet)\n                setAmountState(amm)\n\n            }\n            setIndex((index === 1 ? 0 : index) + list.length)\n            setWallets(wllt)\n            // setRefreshPage(generate())\n            fileInput.current!.files = new DataTransfer().files;\n        }\n    }, [csvImport])\n\n\n    useEffect(() => {\n        if (balance && balance.CELO) {\n            const coins = Object.values(balance).map((coin: IBalanceItem) => ({\n                name: `${coin.amount.toFixed(3)} ${coin.coins.name}`,\n                type: coin.coins.value.toString(),\n                amount: coin.amount.toString(),\n                coinUrl: coin.coins.coinUrl,\n            }))\n            const v = { name: coins[0].name.split(' ')[1], coinUrl: coins[0].coinUrl, type: coins[0].type }\n            setWallets([{ ...v }, { ...v }])\n            setSelectedWallet(coins[0])\n            setList(coins)\n        }\n    }, [balance])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        setIsPaying(true)\n\n        try {\n            const result: Array<MultipleTransactionData> = []\n\n            const [nameList, addressList, amountList] = [nameRef.current, addressRef.current, amountRef.current]\n\n\n            for (let index = 0; index < addressList.length; index++) {\n                if (addressList[index] && amountList[index] && wallets[index].type) {\n                    let amount = amountList[index];\n                    if (selectedType) {\n                        let value = (balance[wallets[index].name as keyof typeof balance]?.tokenPrice ?? 1)\n                        amount = (parseFloat(amount) / value).toFixed(4)\n                    }\n                    result.push({\n                        toAddress: addressList[index],\n                        amount: amount,\n                        tokenName: wallets[index].name,\n                    })\n                }\n            }\n\n            if (storage!.accountAddress.toLowerCase() === selectedAccount.toLowerCase()) {\n                if (result.length === 1 && selectedWallet && selectedWallet.name) {\n                    await Pay({ coin: Coins[result[0].tokenName as keyof Coins], recipient: result[0].toAddress, amount: result[0].amount })\n                }\n                else if (result.length > 1) {\n                    const arr: Array<PaymentInput> = result.map(w => ({\n                        coin: Coins[w.tokenName as keyof Coins],\n                        recipient: w.toAddress,\n                        amount: w.amount\n                    }))\n\n                    await BatchPay(arr)\n                }\n            } else {\n                if (result.length === 1 && selectedWallet && selectedWallet.name) {\n                    await submitTransaction(selectedAccount, result[0].toAddress, result[0].amount, Coins[result[0].tokenName as keyof Coins])\n                }\n                else if (result.length > 1) {\n                    const arr: Array<PaymentInput> = result.map(w => ({\n                        coin: Coins[w.tokenName as keyof Coins],\n                        recipient: w.toAddress,\n                        amount: w.amount\n                    }))\n\n                    for (let i = 0; i < arr.length; i++) {\n                        await submitTransaction(selectedAccount, result[i].toAddress, result[i].amount, Coins[result[i].tokenName as keyof Coins])\n                    }\n                }\n            }\n            setSuccess(true);\n            //refetch()\n           \n        } catch (error: any) {\n            console.error(error)\n            dispatch(changeError({ activate: true, text: error?.data?.message.slice(0, 80) }));\n        }\n\n        setIsPaying(false);\n    }\n\n    return <div className=\"sm:px-32\">\n        <form onSubmit={Submit}>\n            <div className=\"sm:flex flex-col items-center justify-center min-h-screen\">\n                <div className=\"sm:min-w-[85vw] min-h-[75vh] h-auto \">\n                    <div className=\"pl-14 py-2 text-left w-full\">\n                        <div className=\"text-xl font-semibold\">Pay Someone</div>\n                    </div>\n                    <div className=\"shadow-xl border sm:flex flex-col gap-3 gap-y-10 sm:gap-10 py-10\">\n                        <div className=\"sm:flex flex-col pl-3 sm:pl-12 sm:pr-[20%] gap-3 gap-y-10  sm:gap-10\">\n                            <div className=\"flex flex-col space-y-5\">\n                                <span className=\"text-left text-sm font-semibold\">Payment Type</span>\n                                <div className=\"flex space-x-24\">\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"token\" onChange={(e) => setSelectedType(false)} checked={!selectedType} />\n                                        <label className=\"font-semibold text-sm\">\n                                            Pay with Token Amounts\n                                        </label>\n                                    </div>\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"fiat\" onChange={(e) => setSelectedType(true)} checked={selectedType} />\n                                        <label className=\"font-semibold text-sm\">\n                                            Pay with USD-based Amounts\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <div className=\"flex space-x-5 sm:space-x-0 sm:justify-between py-4 items-center\">\n                                    <span className=\"text-left font-semibold text-sm\">Paying To</span>\n\n                                    <input ref={fileInput} type=\"file\" className=\"hidden\" onChange={(e) => e.target.files!.length > 0 ? CSV.Import(e.target.files![0]).then(e => setCsvImport(e)).catch(e => console.error(e)) : null} />\n                                </div>\n                                <div className=\"grid grid-cols-4 sm:grid-cols-[25%,35%,35%,5%] gap-5\">\n                                    {wallets.length > 0 && index ? Array(index).fill(\" \").map((e, i) => {\n                                        if (!uniqueRef.current[i * 2]) {\n                                            uniqueRef.current[i * 2] = generate()\n                                            uniqueRef.current[i * 2 + 1] = generate()\n                                        }\n\n                                        return <Input key={uniqueRef.current[i * 2]} amountState={amountState} setAmount={setAmountState} setIndex={setIndex} overallIndex={index} uniqueArr={uniqueRef.current} index={i * 2} name={nameRef.current} address={addressRef.current} amount={amountRef.current} selectedWallet={wallets} setWallet={setWallets} isBasedOnDollar={selectedType} />\n                                    }) : <div><ClipLoader /></div>}\n                                </div>\n                            </div>\n                            <div className=\"py-5 sm:py-0 grid grid-cols-[65%,35%] gap-16\">\n                                <div className=\"grid grid-cols-2 gap-x-5 sm:grid-cols-3\">\n                                    <Button version=\"second\" className=\"min-w-[200px]\" onClick={() => {\n                                        setIndex(index + 1)\n                                    }}>\n                                        + Add More\n                                    </Button>\n                                    <Button version=\"second\" onClick={() => {\n                                        fileInput.current?.click()\n                                    }} className=\"min-w-[200px]\">\n                                        Import CSV\n                                    </Button>\n                                </div>\n                                <span className=\"self-center text-lg opacity-60\">Total: ${amountState.reduce((a, e, i) => {\n                                    if (!wallets[i]?.type) return a;\n                                    if (selectedType) return a + e;\n                                    return a + e * (balance[wallets[i].name as keyof typeof balance]?.tokenPrice ?? 1);\n                                }, 0).toFixed(2)}</span>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <span className=\"text-left\">Description (Optional)</span>\n                                <div className=\"grid grid-cols-1\">\n                                    <textarea className=\"border-2 rounded-xl p-1 outline-none\" name=\"description\" id=\"\" cols={30} rows={5}></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex justify-center pt-5 sm:pt-0\">\n                            <div className=\"flex flex-col-reverse sm:grid grid-cols-2 w-[200px] sm:w-[400px] justify-center gap-5\">\n                                <Button version=\"second\" onClick={() => router(-1)}>Close</Button>\n                                <Button type=\"submit\" className=\"bg-primary px-3 py-2 text-white flex items-center justify-center rounded-lg\" isLoading={isPaying}>Pay</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n        {isSuccess && <Success onClose={setSuccess} onAction={() => { router(-1) }} />}\n        {isError && <Error onClose={(val) => dispatch(changeError({ activate: val, text: '' }))} />}\n    </div>\n}\n\n\n\nexport default Pay;"],"sourceRoot":""}