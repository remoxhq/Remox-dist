{"version":3,"sources":["redux/reducers/currencies.ts","redux/reducers/transactions.ts","redux/reducers/multisig.ts","redux/reducers/unlock.ts","components/input.tsx","pages/create-account.tsx","components/phraseBar.tsx","pages/unlock.tsx","pages/home.tsx","subpages/dashboard/payroll/teamItem.tsx","subpages/dashboard/payroll/teamContainer.tsx","pages/dashboard/payroll/index.tsx","pages/dashboard/layout.tsx","subpages/pay/teaminput.tsx","pages/masspay/masspay.tsx","App.tsx","redux/store.ts","index.tsx","redux/reducers/contributors.ts","hooks/useAuth.tsx","API/useBalance.tsx","API/useCurrency.tsx","hooks/useRefetchData.tsx","components/general/dropdown.tsx","API/useContributors.tsx","components/general/success.tsx","components/general/error.tsx","hooks/useModalSideExit.tsx","API/useMultisig.tsx","types/sdk/Transaction/GetBalance.ts","types/coins.ts","hooks/useSignInOrUp.tsx","hooks/useMultisig.tsx","hooks/useTransactionProcess.tsx","components/avatar.tsx","redux/reducers/toggles.ts","types/dashboard/transaction.ts","utils/const.ts","redux/api/account.ts","redux/api/customer.ts","redux/api/team.ts","redux/api/transaction.ts","redux/api/teamMember.ts","redux/api/blockscout.ts","redux/api/swap.ts","redux/api/multisig.ts","redux/hooks.ts","redux/reducers/storage.ts","components/copied.tsx","API/usePay.tsx","firebase/firebase.ts","components/button.tsx","API/useFirebase.tsx","redux/reducers/notificationSlice.ts","redux/reducers/selectedAccount.ts","utils/hashing.ts"],"names":["State","celoCoins","CELO","undefined","cUSD","cEUR","UBE","MOO","MOBI","POOF","cREAL","balances","CurrencySlice","createSlice","name","initialState","reducers","updateAllCurrencies","state","action","payload","console","log","celo","find","c","cusd","ceur","ube","moo","mobi","poof","creal","percent_24","price","updateBalance","current_balance","deleteBalance","updateUserBalance","amount","per_24","percent","coins","tokenPrice","actions","SelectCurrencies","currencyandbalance","SelectBalances","TransactionAPI","transactions","setTransactions","removeTransactions","SelectTransactions","transactionsStore","multisigSlice","length","setInternalSign","internalSign","setSign","sign","selectMultisigTransactions","multisig","selectMultisig","unlockSlide","unlock","setUnlock","selectUnlock","Input","title","type","validation","limit","required","className","useState","password","setPassword","repeatPassword","setRepeatPassword","useEffect","autoComplete","minLength","onChange","e","target","value","CreateAccount","address","useContractKit","useSignInOrUp","executeSign","isLoading","user","useAuth","navigate","useNavigate","list","useMemo","to","create","a","preventDefault","inputData","surname","companyName","id","timestamp","Date","getTime","error","src","alt","onSubmit","map","w","i","version","onClick","PhraseBar","mnemonic","scanIcon","data","setData","see","setSee","tooltip","setTooltip","divRef","setDivRef","split","reduce","replace","startsWith","slice","style","inlineSize","window","outerWidth","toUpperCase","width","height","ref","navigator","clipboard","writeText","trim","setTimeout","triggerRef","Unlock","useAppSelector","selectStorage","dispatch","useAppDispatch","inputRef","useRef","router","incorrrect","setIncorrect","Submit","current","localStorage","removeItem","onKeyDown","event","key","autoFocus","Home","connect","useFirestoreSearchField","search","connectEvent","then","TeamItem","props","checked","memberState","some","s","member","members","push","filter","m","usdBase","Coins","currency","coinUrl","secondaryCurrency","secondaryAmount","secondaryUsdBase","interval","DateInterval","monthly","weakly","paymantDate","dateFormat","getUTCDay","TeamContainer","num","setNum","forEach","x","teamName","generate","Payroll","history","contributors","selectContributors","balance","isSuccess","selectSuccess","isError","selectError","teams","setTeams","totalPrice","team","first","Object","entries","_","groupBy","totalAmount","acc","curr","getMonth","parseFloat","second","res","item","toFixed","pathname","memberList","onClose","val","changeSuccess","activate","changeError","Layout","kit","useRefetchData","refetch","selectedAccount","SelectSelectedAccount","contracts","getStableToken","methodIds","TeamInput","selectedWallet","setSelectedWallet","selectedWallet2","setSelectedWallet2","updateValue","wallet","is2","customWallet","newArr","newItem","setMembers","selectedId","tick","setSelectedId","index","placeholder","defaultValue","step","min","onSelect","nameActivation","selected","values","CoinsName","MassPay","useLocation","storage","usePay","BatchPay","Pay","submitTransaction","useMultisig","isPaying","setIsPaying","setSuccess","selectedTeam","setSelectedTeam","resMember","setResMember","setList","coin","toString","toLowerCase","result","mems","includes","toAddress","tokenName","secAmount","secCurrency","accountAddress","recipient","arr","text","message","disableAddressDisplay","generalWallet","setGeneralWallet","cols","rows","onAction","lazy","SettingLayout","OwnerSetting","SpendingSetting","ProfileSetting","Dashboard","Main","Transactions","Assets","Contributors","Details","Swap","LockIfUserIn","children","ProtectUser","App","useSelector","fallback","path","element","store","configureStore","reducer","Currency","notification","Notification","Storage","toggle","Toggle","Transaction","SelectedAcount","Multisig","accountAPI","reducerPath","customerAPI","swapAPI","teamAPI","teamMemberAPI","transactionAPI","BlockScoutApi","multisigAPI","middleware","getDefaultMiddleware","serializableCheck","concat","render","dapp","icon","description","url","networks","Mainnet","document","getElementById","contributorSlice","isFetched","addContributor","setContributors","secretKey","contributor","decryptMessage","removeContributor","setUser","tokenAdresses","useBalance","fetchedBalance","setFetchedBalance","setLoading","fetchBalance","defaultAccount","getErc20","ethers","balanceOf","bnBalance","web3","utils","toBN","altcoinBalance","fromWei","assign","StableToken","stabletokenEUR","balanceEUR","bnEUR","stabletokenREAL","balanceREAL","bnREAL","getGoldToken","goldtoken","balanceGoldtoken","bnGold","stabletokenUSD","balanceUSD","bnUSD","Error","useCurrency","useFirestoreReadMultiple","useDispatch","transactionStore","fetchedCurrencies","useContributors","balanceLoading","useLazyGetTransactionsQuery","transactionTrigger","transactionData","transactionFetching","isFetching","hash","encryptedMessageToken","pCelo","pCusd","pCeur","pUbe","pMoo","pMobi","pPoof","pReal","celoPrice","cusdPrice","ceurPrice","ubePrice","mooPrice","mobiPrice","poofPrice","cRealPrice","total","updatedBalance","fetching","execution","unwrap","catch","timer","setInterval","clearInterval","variants","close","transition","staggerChildren","duration","open","Li","forwardRef","Viewer","displayName","Dropdown","loader","parentClass","childClass","isOpen","setOpen","liRef","liHeight","setLiHeight","customRef","useModalSideExit","offsetHeight","transform","div","initial","animate","obj","uid","Success","selectSuccessText","selectErrorText","isSetting","setSetting","settingRef","click","useCallback","contains","addEventListener","removeEventListener","MethodIds","useFirestoreRead","auth","currentUser","isMultisig","FetchTransactions","multisigAddress","skip","take","transactionArray","getMultiSig","kitMultiSig","getTransactionCount","getTransaction","tx","destination","executed","confirmations","requiredCount","owner","newOwner","valueOfTransfer","methodId","method","hex","parseInt","importMultisigAccount","contractAddress","multiSig","isowner","addresses","toLocaleLowerCase","FirestoreWrite","updateDoc","createDoc","getSignAndInternal","getRequired","executinTransactions","getInternalRequired","changingMultiSigProperties","internalSigns","removeOwner","ownerAddress","_web3Contracts","web3MultiSig","isAddress","toTransactionObject","connection","methods","submitOrConfirmTransaction","txo","ss","sendAndWaitForReceipt","gasPrice","toWei","changeSigns","isSign","isInternal","getOwners","countOwners","changeRequirement","txInteral","changeInternalRequirement","ssInternal","addOwner","replaceOwner","oldOwner","golden","celoObj","transfer","txs","stringToSolidityBytes","encodeABI","from","revokeTransaction","transactionId","revokeConfirmation","confirmTransaction","executeTransaction","txResult","GetBalanceResponseEnum","CoinsURL","CoinsNameVisual","TransactionFeeTokenName","StableTokens","AltcoinsList","CoinsNameLower","CoinsResponse","feeName","lowerName","responseName","setError","dataForSignUp","hashing","token","createUserWithEmailAndPassword","userCredential","signInWithEmailAndPassword","BatchAbi","eth","Contract","abi","deploy","bytecode","contract","encryptMessage","setStorage","changeAccount","FirestoreRead","incomingData","errorCode","code","errorMessage","multiSlice","owners","setOwners","signAndInternal","setSignAndInternal","useFetchMultisig","fetchTxs","disabledTransactionDispatch","ERC20MethodIds","transferFrom","transferWithComment","approve","batchRequest","swap","InputReader","input","len","substring","hexToNumberString","amountIn","amountOutMin","coinIn","coinOutMin","splitted","indexable","coinAddress","payments","useTransactionProcess","FormattedTransaction","groupedHash","best","maxBy","o","transaction","formatted","rawData","Avatar","toggleSlice","mobileMenu","setMenu","selectToggle","TransactionType","TransactionDirection","TransactionStatus","BaseUrl","location","hostname","createApi","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","set","endpoints","builder","signIn","mutation","query","body","accountCreate","createPassword","accountExist","putAccountInfo","setTime","getDetails","useSetTimeMutation","useLazyGetTimeQuery","useGetDetailsQuery","useLazyGetDetailsQuery","useSignInMutation","useAccountCreateMutation","useCreatePasswordMutation","useAccountExistMutation","useUnlockMutation","usePutAccountInfoMutation","customerCreate","getCustomer","params","deleteCustomer","useCustomerCreateMutation","useGetCustomerQuery","useDeleteCustomerMutation","createTeam","getTeams","getTeamsWithMembers","deleteTeam","updateTeam","useCreateTeamMutation","useLazyGetTeamsQuery","useLazyGetTeamsWithMembersQuery","useGetTeamsWithMembersQuery","useDeleteTeamMutation","useUpdateTeamMutation","keepUnusedDataFor","getBalance","getCurrencies","sendCelo","sendStableToken","sendAltToken","sendMultipleTransactions","useGetBalanceQuery","useLazyGetBalanceQuery","useLazyGetCurrenciesQuery","useGetCurrenciesQuery","useSendCeloMutation","useSendStableTokenMutation","useSendAltTokenMutation","useSendMultipleTransactionsMutation","addMember","getMembers","getMember","deleteMember","updateMember","useAddMemberMutation","useLazyGetMemberQuery","useGetMembersQuery","useLazyGetMembersQuery","useDeleteMemberMutation","useUpdateMemberMutation","getTransactions","getTransactionBuHash","useGetTransactionsQuery","useLazyGetTransactionBuHashQuery","useGetTransactionBuHashQuery","getConvertableTokenAmount","swapCoins","useGetConvertableTokenAmountMutation","useSwapCoinsMutation","mode","getMultisigBalance","importAddress","createAddress","getMultisigAddresses","removeMultisigAddress","getRequiredSignatures","changeRequiredSignatures","chnageInternalRequiredSignatures","submitTransactions","revokeTransactions","confirmTransactions","executeTransactions","getMultisigTransaction","getNotExecutedTransactions","getTransactionsByPagination","getAllTransactions","transformResponse","response","useCreateAddressMutation","useGetTransactionsByPaginationQuery","useLazyGetTransactionsByPaginationQuery","useGetAllTransactionsQuery","useLazyGetAllTransactionsQuery","useGetMultisigAddressesQuery","useGetMultisigTransactionQuery","useLazyGetMultisigTransactionQuery","useGetMultisigBalanceQuery","useLazyGetMultisigBalanceQuery","useImportAddressMutation","useAddOwnerMutation","useChangeRequiredSignaturesMutation","useChnageInternalRequiredSignaturesMutation","useConfirmTransactionsMutation","useExecuteTransactionsMutation","useGetNotExecutedTransactionsQuery","useGetOwnersQuery","useGetRequiredSignaturesQuery","useLazyGetMultisigAddressesQuery","useLazyGetNotExecutedTransactionsQuery","useLazyGetOwnersQuery","useLazyGetRequiredSignaturesQuery","useRemoveMultisigAddressMutation","useRemoveOwnerMutation","useReplaceOwnerMutation","useRevokeTransactionsMutation","useSubmitTransactionsMutation","storageSlice","getItem","JSON","parse","setItem","stringify","removeStorage","Copied","usePopperTooltip","getArrowProps","getTooltipProps","setTooltipRef","setTriggerRef","visible","Ether","nomAbi","performActions","inputArr","approveArr","gas","GenerateTx","toTransactionBatch","destinations","callData","callDataLengths","send","sender","transactionHash","comment","nomContract","bytes","formatBytes32String","resolve","call","celotx","txSend","waitReceipt","celoReceipt","amountWei","currentBalance","celoBalance","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","getAuth","getAnalytics","Button","disabled","size","collection","docRef","doc","getDoc","docSnap","exists","setDoc","mergeDoc","merge","deleteDocument","deleteDoc","runTransaction","get","update","unsub","onSnapshot","readDoc","collectionName","firstQuery","condition","secondQuery","q","where","querySnapshot","read","field","searching","getDocs","docs","notificationSlice","onSuccess","onSuccessText","onError","onErrorText","notificationSeen","changeNotificationSeen","SelectedAccountSlice","init","Hash","require","rest","of","cur","messageToencrypt","secretkey","encryptedMessage","AES","encrypt","decryptedBytes","decrypt","decryptedMessage","enc","Latin1"],"mappings":"0XA+CMA,EAAmB,CACxBC,UAAW,CACVC,UAAMC,EACNC,UAAMD,EACNE,UAAMF,EACNG,SAAKH,EACLI,SAAKJ,EACLK,UAAML,EACNM,UAAMN,EACNO,WAAOP,GAERQ,SAAU,CACTT,UAAMC,EACNC,UAAMD,EACNE,UAAMF,EACNG,SAAKH,EACLI,SAAKJ,EACLK,UAAML,EACNM,UAAMN,EACNO,WAAOP,IAIIS,EAAgBC,YAAY,CACxCC,KAAM,gBACNC,aAAcf,EACdgB,SAAU,CACTC,oBAAqB,SAACC,EAAkBC,GACvC,GAAKA,EAAOC,QAAZ,CACAC,QAAQC,IAAI,sBAAuBH,EAAOC,SAC1C,IAAMG,EAAOJ,EAAOC,QAAQI,MAAK,SAACC,GAAD,MAAkB,SAAXA,EAAEX,QACpCY,EAAOP,EAAOC,QAAQI,MAAK,SAACC,GAAD,MAAkB,SAAXA,EAAEX,QACpCa,EAAOR,EAAOC,QAAQI,MAAK,SAACC,GAAD,MAAkB,SAAXA,EAAEX,QACpCc,EAAMT,EAAOC,QAAQI,MAAK,SAACC,GAAD,MAAkB,QAAXA,EAAEX,QACnCe,EAAMV,EAAOC,QAAQI,MAAK,SAACC,GAAD,MAAkB,QAAXA,EAAEX,QACnCgB,EAAOX,EAAOC,QAAQI,MAAK,SAACC,GAAD,MAAkB,SAAXA,EAAEX,QACpCiB,EAAOZ,EAAOC,QAAQI,MAAK,SAACC,GAAD,MAAkB,SAAXA,EAAEX,QACpCkB,EAAQb,EAAOC,QAAQI,MAAK,SAACC,GAAD,MAAkB,UAAXA,EAAEX,QAC3CI,EAAMjB,UAAY,CACjBC,KAAM,CAAE+B,WAAYV,EAAKU,WAAYC,MAAOX,EAAKW,OACjD9B,KAAM,CAAE6B,WAAYP,EAAKO,WAAYC,MAAOR,EAAKQ,OACjD7B,KAAM,CAAE4B,WAAYN,EAAKM,WAAYC,MAAOP,EAAKO,OACjD5B,IAAK,CAAE2B,WAAYL,EAAIK,WAAYC,MAAON,EAAIM,OAC9C3B,IAAK,CAAE0B,WAAYJ,EAAII,WAAYC,MAAOL,EAAIK,OAC9C1B,KAAM,CAAEyB,WAAYH,EAAKG,WAAYC,MAAOJ,EAAKI,OACjDzB,KAAM,CAAEwB,WAAYF,EAAKE,WAAYC,MAAOH,EAAKG,OACjDxB,MAAO,CAAEuB,WAAYD,EAAMC,WAAYC,MAAOF,EAAME,UAGtDC,cAAe,SAACjB,EAAkBC,GACjC,GAAKA,EAAOC,QAAZ,CACA,kBAA+ED,EAAOC,QAAtF,GAAQG,EAAR,KAAcG,EAAd,KAAoBC,EAApB,KAA0BC,EAA1B,KAA+BC,EAA/B,KAAoCC,EAApC,KAA0CC,EAA1C,KAAgDC,EAAhD,KACAd,EAAMjB,UAAY,CACjBC,KAAK,2BAAMgB,EAAMjB,UAAUC,MAAvB,IAA6BkC,gBAAiBb,EAAKa,kBACvDhC,KAAK,2BAAMc,EAAMjB,UAAUG,MAAvB,IAA6BgC,gBAAiBV,EAAKU,kBACvD/B,KAAK,2BAAMa,EAAMjB,UAAUI,MAAvB,IAA6B+B,gBAAiBT,EAAKS,kBACvD9B,IAAI,2BAAMY,EAAMjB,UAAUK,KAAvB,IAA4B8B,gBAAiBR,EAAIQ,kBACpD7B,IAAI,2BAAMW,EAAMjB,UAAUM,KAAvB,IAA4B6B,gBAAiBP,EAAIO,kBACpD5B,KAAK,2BAAMU,EAAMjB,UAAUO,MAAvB,IAA6B4B,gBAAiBN,EAAKM,kBACvD3B,KAAK,2BAAMS,EAAMjB,UAAUQ,MAAvB,IAA6B2B,gBAAiBL,EAAKK,kBACvD1B,MAAM,2BAAMQ,EAAMjB,UAAUS,OAAvB,IAA8B0B,gBAAiBJ,EAAMI,qBAG5DC,cAAe,SAACnB,GACfA,EAAMjB,UAAY,CACjBC,UAAMC,EACNC,UAAMD,EACNE,UAAMF,EACNG,SAAKH,EACLI,SAAKJ,EACLK,UAAML,EACNM,UAAMN,EACNO,WAAOP,GAERe,EAAMP,SAAW,CAChBT,UAAMC,EACNC,UAAMD,EACNE,UAAMF,EACNG,SAAKH,EACLI,SAAKJ,EACLK,UAAML,EACNM,UAAMN,EACNO,WAAOP,IAGTmC,kBAAmB,SAACpB,EAAkBC,GACrC,GAAKA,EAAOC,QAAZ,CACA,kBAA0ED,EAAOC,QAAjF,GAAQG,EAAR,KAAcG,EAAd,KAAoBC,EAApB,KAA0BC,EAA1B,KAA+BC,EAA/B,KAAoCC,EAApC,KAA0CC,EAA1C,KAAgDC,EAAhD,KACAd,EAAMP,SAAW,CAChBT,KAAM,CACLqC,OAAQhB,EAAKgB,OACbC,OAAQjB,EAAKiB,OACbC,QAASlB,EAAKkB,QACdC,MAAOnB,EAAKmB,MACZC,WAAYpB,EAAKoB,YAElBvC,KAAM,CACLmC,OAAQb,EAAKa,OACbC,OAAQd,EAAKc,OACbC,QAASf,EAAKe,QACdC,MAAOhB,EAAKgB,MACZC,WAAYjB,EAAKiB,YAElBtC,KAAM,CACLkC,OAAQZ,EAAKY,OACbC,OAAQb,EAAKa,OACbC,QAASd,EAAKc,QACdC,MAAOf,EAAKe,MACZC,WAAYhB,EAAKgB,YAElBrC,IAAK,CACJiC,OAAQX,EAAIW,OACZC,OAAQZ,EAAIY,OACZC,QAASb,EAAIa,QACbC,MAAOd,EAAIc,MACXC,WAAYf,EAAIe,YAEjBpC,IAAK,CACJgC,OAAQV,EAAIU,OACZC,OAAQX,EAAIW,OACZC,QAASZ,EAAIY,QACbC,MAAOb,EAAIa,MACXC,WAAYd,EAAIc,YAEjBnC,KAAM,CACL+B,OAAQT,EAAKS,OACbC,OAAQV,EAAKU,OACbC,QAASX,EAAKW,QACdC,MAAOZ,EAAKY,MACZC,WAAYb,EAAKa,YAElBlC,KAAM,CACL8B,OAAQR,EAAKQ,OACbC,OAAQT,EAAKS,OACbC,QAASV,EAAKU,QACdC,MAAOX,EAAKW,MACZC,WAAYZ,EAAKY,YAElBjC,MAAO,CACN6B,OAAQP,EAAMO,OACdC,OAAQR,EAAMQ,OACdC,QAAST,EAAMS,QACfC,MAAOV,EAAMU,MACbC,WAAYX,EAAMW,kBAOhB,EAAkE/B,EAAcgC,QAAxE3B,EAAR,EAAQA,oBAAqBqB,EAA7B,EAA6BA,kBAAmBD,EAAhD,EAAgDA,cAE1CQ,EAAmB,SAAC3B,GAAD,OAAoCA,EAAM4B,mBAAmB7C,WAChF8C,EAAiB,SAAC7B,GAAD,OAAuCA,EAAM4B,mBAAmBnC,UAK/EC,MAAf,S,iCC7MA,kHAYaoC,EAAiBnC,YAAY,CACzCC,KAAM,eACNC,aANwC,CACxCkC,aAAc,MAMdjC,SAAU,CACTkC,gBAAiB,SAAChC,EAAOC,GACxBD,EAAM+B,aAAe9B,EAAOC,SAE7B+B,mBAAoB,SAACjC,GACpBA,EAAM+B,aAAe,SAKjB,EAAgDD,EAAeJ,QAAvDM,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBACnBC,EAAqB,SAAClC,GAAD,OAAsBA,EAAMmC,kBAAkBJ,cACjED,MAAf,S,+NCbaM,EAAgBzC,YAAY,CACrCC,KAAM,WACNC,aANwB,CACxBkC,aAAc,IAMdjC,SAAU,CACNkC,gBAAiB,SAAChC,EAAOC,GAAY,IAAD,OACVhB,IAAnBgB,EAAOC,SAAoD,KAA3B,UAAAD,EAAOC,eAAP,eAAgBmC,QAC5CrC,EAAM+B,aAAc/B,EAAM+B,aAAN,sBAAyB/B,EAAM+B,cAA/B,YAAgD9B,EAAOC,UACzEF,EAAM+B,aAAN,YAAyB9B,EAAOC,SACnCF,EAAM+B,aAAe9B,EAAOC,SAEtCoC,gBAAiB,SAACtC,EAAOC,GACrBD,EAAMuC,aAAetC,EAAOC,SAEhCsC,QAAS,SAACxC,EAAOC,GACbD,EAAMyC,KAAOxC,EAAOC,YAKzB,EAAsDkC,EAAcV,QAA5DM,EAAR,EAAQA,gBAAiBM,EAAzB,EAAyBA,gBAAiBE,EAA1C,EAA0CA,QAEpCE,EAA6B,SAAC1C,GAAD,OAAsBA,EAAM2C,SAASZ,cAClEa,EAAiB,SAAC5C,GAAD,OAAsBA,EAAM2C,UAE3CP,MAAf,S,wJC1BaS,EAAclD,YAAY,CACnCC,KAAM,SACNC,aAP0B,CAC1BiD,QAAQ,GAORhD,SAAU,CACNiD,UAAW,SAAC/C,EAAOC,GACfD,EAAM8C,OAAU7C,EAAOC,YAKpB6C,EAAcF,EAAYnB,QAA1BqB,UAEFC,EAAe,SAAChD,GAAD,OAAsBA,EAAM8C,OAAOA,QAEhDD,IAAf,Q,iFCceI,EApCD,SAAC,GAAmO,IAAjOC,EAAgO,EAAhOA,MAAOtD,EAAyN,EAAzNA,KAAyN,IAAnNuD,YAAmN,MAA5M,OAA4M,EAApMC,EAAoM,EAApMA,WAAoM,IAAxLC,aAAwL,MAAhL,EAAgL,MAA7KC,gBAA6K,aAA3JC,iBAA2J,MAA/I,GAA+I,EAC7O,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CF,qBAA5C,mBAAOG,EAAP,KAAuBC,EAAvB,KAWA,OATAC,qBAAU,WACFT,GAEIA,KADAO,IAAkBF,GAAYE,IAAmBF,MAM1D,CAACE,EAAgBF,IACb,qCACH,sBAAKF,UAAU,gBAAf,UACI,qBAAKA,UAAU,0BAAf,SAA0CL,IAC1C,qBAAKK,UAAS,UAAKA,EAAL,sCAAd,SACI,uBAAOJ,KAAMA,EAAMvD,KAAMA,EAAMkE,aAAa,eAAeC,UAAWV,EAAOE,UAAU,qDAAqDS,SAAU,SAACC,GACnJP,EAAYO,EAAEC,OAAOC,QACtBb,SAAUA,SAGX,aAATH,EAAsB,sBAAKI,UAAU,gBAAf,UACnB,qBAAKA,UAAU,0BAAf,SAA0C,oBAC1C,sBAAKA,UAAS,UAAKA,EAAL,sCAAd,UACI,uBAAOJ,KAAMA,EAAMvD,KAAM,iBAAkBkE,aAAa,eAAeP,UAAU,qDAAqDS,SAAU,SAACC,GAC7IL,EAAkBK,EAAEC,OAAOC,QAC5Bb,UAAQ,IACVK,GAAkBF,GAAY,8BAC1BE,IAAmBF,EAAW,cAAC,IAAD,CAAQF,UAAU,mBAAsB,cAAC,IAAD,CAAUA,UAAU,yBAG9F,S,kBC5BF,SAASa,IAEpB,IAAQC,EAAYC,2BAAZD,QACR,EAAmCE,cAA3BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,UACbC,EAASC,YAAQN,GAAjBK,KACFE,EAAWC,cAEXC,EAAOC,mBAA+D,iBAAM,CAC9E,CAAE7B,MAAO,aAActD,KAAM,YAAc,CAAEsD,MAAO,YAAatD,KAAM,WACvE,CAAEsD,MAAO,oBAAqBtD,KAAM,eAAiB,CAAEsD,MAAO,WAAYtD,KAAM,WAAYuD,KAAM,WAAYE,MAAO,MACtH,IAEH,GAAIqB,IAASL,EAAS,OAAO,cAAC,IAAD,CAAUW,GAAI,MAG3C,IAAMC,EAAM,uCAAG,WAAOhB,GAAP,iBAAAiB,EAAA,yDACXjB,EAAEkB,kBACIjB,EAASD,EAAEC,QAEP,SAAaC,QAAUD,EAAM,eAAmBC,MAJ/C,wDAMLiB,EAAY,CACdxF,KAAMsE,EAAM,SAAaC,MACzBkB,QAASnB,EAAM,QAAYC,MAC3BmB,YAAapB,EAAM,YAAgBC,MACnCV,SAAUS,EAAM,SAAaC,OAVtB,kBAcYK,EAAYH,EAASe,EAAU3B,SAAU,CACxDY,QAASA,EACTkB,GAAI,cACJD,YAAaF,EAAUE,YACvB1F,KAAMwF,EAAUxF,KAChByF,QAASD,EAAUC,QACnBG,WAAW,IAAIC,MAAOC,YApBnB,cAuBPd,EAAS,cAvBF,kDAyBPzE,QAAQwF,MAAR,MAzBO,0DAAH,sDA6BZ,OAAO,sBAAKpC,UAAU,kBAAf,UACH,wBAAQA,UAAU,4FAAlB,SACI,8BACI,qBAAKqC,IAAI,YAAYC,IAAI,GAAGtC,UAAU,kBAG9C,sBAAMuC,SAAUb,EAAQ1B,UAAU,+BAAlC,SACI,0BAASA,UAAU,2DAAnB,UACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,+CAAf,iCACA,qBAAKA,UAAU,6DAAf,qEAEJ,qBAAKA,UAAU,4CAAf,SACKuB,EAAKiB,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAAC,EAAD,eAAmBD,GAAPC,QAEpC,sBAAK1C,UAAU,4EAAf,UACI,cAAC,IAAD,CAAQ2C,QAAQ,SAAS3C,UAAU,qBAAqB4C,QAAS,kBAAMvB,EAAS,MAAhF,kBACA,cAAC,IAAD,CAAQzB,KAAK,SAASI,UAAU,0BAA0BkB,UAAWA,EAArE,oC,aCfL2B,EAnDG,SAAC,GAAiH,IAA/G/B,EAA8G,EAA9GA,QAA8G,IAArGgC,gBAAqG,aAAnFC,gBAAmF,SAC/H,EAAwB9C,mBAAS,IAAjC,mBAAO+C,EAAP,KAAaC,EAAb,KACA,EAAsBhD,oBAAS,GAA/B,mBAAOiD,EAAP,KAAYC,EAAZ,KACA,EAA8BlD,oBAAS,GAAvC,mBAAOmD,EAAP,KAAgBC,EAAhB,KACA,EAA4BpD,mBAAgC,MAA5D,mBAAOqD,EAAP,KAAeC,EAAf,KAkBA,OAhBAjD,qBAAU,WACN,GAAIwC,IAAaI,EAAK,CAClB,IAAMtC,EAAQE,EAAQ0C,MAAM,KAAKC,QAAO,SAAC9B,EAAG3E,GACxC,OAAO2E,EAAC,WAAQ3E,EAAE0G,QAAQ,UAAW,SAEzC,OAAOT,EAAQrC,GACZ,GAAIkC,EAAU,OAAOG,EAAQnC,GAEpC,IAAIF,EAAQE,EAAQ6C,WAAW,MAAQ7C,EAAQ8C,MAAM,GAAK9C,EAAQ4C,QAAQ,IAAK,IAK/E,OAJA9C,EAAQA,EAAM4C,MAAM,IAAIC,QAAO,SAAC9B,EAAG3E,EAAG0F,GAElC,OADIA,EAAI,GAAKA,EAAI,IAAM,IAAGf,GAAK,KACxBA,EAAI3E,IACZ,IACIiG,EAAQrC,KAChB,CAACsC,IAEG,8BACH,sBAAKlD,UAAU,4EAA4E6D,MAAQf,EAA8E,CAAEgB,WAAW,GAAD,OAAKC,OAAOC,WAAa,IAAM,QAAU,UAAxH,CAAEF,WAAW,GAAD,OAAKC,OAAOC,WAAa,IAAM,QAAU,UAAnK,UACI,qBAAKhE,UAAU,aAAf,SAA6B8C,EAAWE,EAAOA,EAAKiB,gBACpD,sBAAKjE,UAAU,iEAAf,UACK8C,EACG,qBAAK9C,UAAU,2CAA2C4C,QAAS,kBAAMO,GAAQD,IAAjF,SACI,qBAAKb,IAAK,iBAAkB6B,MAAM,KAAKC,OAAQ,GAAI7B,IAAI,UAG3DS,EAAW,qBAAK/C,UAAU,2CAAf,SACP,qBAAKqC,IAAK,sBAAuBC,IAAI,eAChC,KAEb,qBAAK8B,IAAKb,EAAWvD,UAAU,2CAA2C4C,QAAS,WAC/EyB,UAAUC,UAAUC,UAAUzD,EAAQ0D,QACtCnB,GAAW,GACXoB,YAAW,WACPpB,GAAW,KACZ,MALP,SAOI,qBAAKhB,IAAK,kBAAmBC,IAAI,WAErC,cAAC,IAAD,CAAQc,QAASA,EAASsB,WAAYpB,a,iBCuBvCqB,EA5DA,WACX,IAAQ7D,EAAYC,2BAAZD,QAER,GADgB8D,YAAeC,KACI7D,eAA3BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,UAEf4D,EAAWC,cACXC,EAAWC,iBAAyB,MAEpCC,EAAS5D,cACf,EAAmCrB,oBAAS,GAA5C,mBAAOkF,EAAP,KAAmBC,EAAnB,KAEMC,EAAM,uCAAG,sBAAA1D,EAAA,0DACPqD,EAASM,UAAWxE,EADb,wBAEPsE,GAAa,GAFN,kBAKGnE,EAAYH,EAASkE,EAASM,QAAQ1E,OALzC,OAOHkE,EAAStF,GAAU,IACnB0F,EAAO,cARJ,gDAUHE,GAAa,GACbxI,QAAQwF,MAAR,MACc,qBAAV,OACAmD,aAAaC,WAAW,aACxBN,EAAO,MAdR,yDAAH,qDAoBZ,OAAO,qCACH,wBAAQlF,UAAU,4FAAlB,SACI,8BACI,qBAAKqC,IAAI,YAAYC,IAAI,GAAGtC,UAAU,kBAG9C,0BAASA,UAAU,2DAAnB,UACI,oBAAIA,UAAU,wBAAd,gCACA,sBAAKA,UAAU,sBAAf,UACI,iDACCc,GAAW,cAAC,EAAD,CAAWA,QAASA,EAASiC,UAAU,OAEvD,sBAAK/C,UAAU,sBAAf,UACI,4EACA,qBAAKA,UAAU,sBAAf,SAAqC,uBAAOyF,UAAW,SAACC,GAClC,UAAdA,EAAMC,KACNN,KAELjB,IAAKY,EAAUpF,KAAK,WAAWW,aAAa,eAAeqF,WAAS,EAAC5F,UAAU,kEACjFmF,GAAc,qBAAKnF,UAAU,2BAAf,mCACf,qBAAKA,UAAU,sBAAf,SACI,cAAC,IAAD,CAAQ4C,QAASyC,EAAQrF,UAAU,YAAYkB,UAAWA,EAA1D,gC,QCVL2E,EA3CF,WACT,MAA6B9E,2BAArB+E,EAAR,EAAQA,QAAShF,EAAjB,EAAiBA,QACjB,EAA8BiF,cAAtBC,EAAR,EAAQA,OAAQ9E,EAAhB,EAAgBA,UAEVG,EAAWC,cAEX2E,EAAY,uCAAG,sBAAAtE,EAAA,kEAERb,EAFQ,gCAGHgF,IAHG,OAKThF,GACAkF,EAAO,QAAS,UAAWlF,GACtBoF,MAAK,SAAA/E,GAEEE,EADAF,EACS,UAEA,sBAXZ,gDAiBbvE,QAAQC,IAAR,MAjBa,yDAAH,qDAqBlB,OAAO,mCACH,yBAASmD,UAAU,mDAAnB,SACI,sBAAKA,UAAU,kGAAf,UACI,sBAAKA,UAAU,0EAAf,UACI,qBAAKqC,IAAI,YAAYC,IAAI,GAAGtC,UAAU,WACtC,sBAAMA,UAAU,uCAAhB,+DAEJ,qBAAKA,UAAU,sBAAf,SACK,cAAC,IAAD,CAAQ4C,QAASqD,EAAc/E,UAAWA,EAA1C,SAAsDJ,EAAU,YAAc,kC,oDC2BpFqF,EAlEE,SAACC,GAEd,OAAO,qCACH,qBAAKpG,UAAU,uBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,uBAAOJ,KAAK,WAAWyG,QAASD,EAAME,YAAY,GAAGC,MAAK,SAAAC,GAAC,OAAIA,EAAExE,KAAOoE,EAAMK,OAAOzE,MAAKhC,UAAU,uKAAuKS,SAAU,SAACC,GAClR,IAAMgG,EAAO,YAAON,EAAME,YAAY,IAClC5F,EAAEC,OAAO0F,QACJK,EAAQH,MAAK,SAAAC,GAAC,OAAIA,EAAExE,KAAOoE,EAAMK,OAAOzE,QACzC0E,EAAQC,KAAKP,EAAMK,QACnBL,EAAME,YAAY,GAAGI,IAGzBN,EAAME,YAAY,GAAGI,EAAQE,QAAO,SAAAC,GAAC,OAAIT,EAAMK,OAAOzE,KAAO6E,EAAE7E,UAIvE,sBAAKhC,UAAU,mDAAf,UACI,cAAC,IAAD,CAAQ3D,KAAM+J,EAAMK,OAAOpK,OAC3B,8BACK+J,EAAMK,OAAOpK,eAK9B,sBAAK2D,UAAU,0BAAf,UACI,sBAAKA,UAAU,kDAAf,UACI,8BAAMoG,EAAMK,OAAO3I,SAClBsI,EAAMK,OAAOK,QAAU,0CAAaC,IAAMX,EAAMK,OAAOO,UAAU3K,QAC9D,8BACK0K,IAAMX,EAAMK,OAAOO,UAAU3K,OAEtC,8BACI,qBAAKgG,IAAK0E,IAAMX,EAAMK,OAAOO,UAAUC,QAAS/C,MAAM,KAAKC,OAAO,KAAK7B,IAAI,GAAGtC,UAAU,sBAG/FoG,EAAMK,OAAOS,mBAAqB,sBAAKlH,UAAU,iDAAf,UAC/B,8BAAMoG,EAAMK,OAAOU,kBAClBf,EAAMK,OAAOW,iBAAmB,0CAAaL,IAAMX,EAAMK,OAAOS,mBAAmB7K,QAChF,8BACK0K,IAAMX,EAAMK,OAAOS,mBAAmB7K,OAE/C,8BACI,qBAAKgG,IAAK0E,IAAMX,EAAMK,OAAOS,mBAAmBD,QAAS/C,MAAM,KAAKC,OAAO,KAAK7B,IAAI,GAAGtC,UAAU,yBAI7G,sBAAKA,UAAU,sCAAf,UACMoG,EAAMK,OAAOY,WAAaC,IAAaC,SAAW,UAClDnB,EAAMK,OAAOY,WAAaC,IAAaE,QAAU,YAEvD,qBAAKxH,UAAU,iBAAf,SACKoG,EAAMK,OAAOgB,aAAe,qCACzB,qBAAKzH,UAAU,0DAAf,SAEK0H,YAAW,IAAIxF,KAAKkE,EAAMK,OAAOgB,aAAvB,aAA2CC,YAAW,IAAIxF,KAAQ,OAAlE,aAEd,IAAIA,MAAOyF,YAAc,IAAIzF,KAAKkE,EAAMK,OAAOgB,aAAaE,aAAe,qBAAKhI,MAAM,eAAX,SACxE,qBAAK0C,IAAI,yBAAyBrC,UAAU,4BAA4BsC,IAAI,gBCpBjFsF,EArCO,SAACxB,GAEnB,MAAsBnG,mBAAS,GAA/B,mBAAO4H,EAAP,KAAYC,EAAZ,KAEA,OAAO,qCACH,sBAAK9H,UAAU,mFAAf,UACI,8BACI,uBAAOJ,KAAK,WAAWI,UAAU,+JAA+JS,SAAU,SAACC,GACvM,IACsB,EADhBgG,EAAO,YAAON,EAAME,YAAY,IAClC5F,EAAEC,OAAO0F,SACT,UAAAD,EAAMM,eAAN,SAAeqB,SAAQ,SAAAlB,GACdH,EAAQH,MAAK,SAAAyB,GAAC,OAAIA,EAAEhG,KAAO6E,EAAE7E,OAC9B0E,EAAQC,KAAKE,MAGrBT,EAAME,YAAY,GAAGI,IAErBN,EAAME,YAAY,GAAGI,EAAQE,QAAO,SAAAC,GAAC,cAAI,UAACT,EAAMM,eAAP,OAAC,EAAeH,MAAK,SAAAyB,GAAC,OAAIA,EAAEhG,KAAO6E,EAAE7E,gBAI1F,qBAAKhC,UAAU,gEAAf,SACI,8BAAMoG,EAAM/J,YAGnB+J,EAAMM,SAAWN,EAAMM,QAAQ9C,MAAM,EAAGiE,GAAKrF,KAAI,SAAAC,GAAC,OAC/C,qBAAsBzC,UAAU,0HAAhC,SACI,cAAC,EAAD,CAAUiI,SAAU7B,EAAM/J,KAAMoK,OAAQhE,EAAG6D,YAAaF,EAAME,eADxD4B,yBAIb9B,EAAMM,SAAWN,EAAMM,QAAQ5H,OAAS,GAAa,MAAR+I,EAAc,wBAAQ7H,UAAU,wCAAwC4C,QAAS,kBAAMkF,EAAO,MAAhF,uBAEhD,KACV1B,EAAMM,aAA0FhL,EAAhF,qBAAKsE,UAAU,sCAAf,oC,sECwIXmI,EA/JC,WACZ,IAAMC,EAAU9G,cAEV+G,EAAezD,YAAe0D,KAAoBD,aAElDE,EAAU3D,YAAetG,KAEzBkK,EAAY5D,YAAe6D,KAC3BC,EAAU9D,YAAe+D,KACzB7D,EAAWC,cAEjB,EAA0B9E,mBAA4B,IAAtD,mBAAO2I,EAAP,KAAcC,EAAd,KAEMvC,EAAcrG,mBAAmB,IAGvCK,qBAAU,WACF+H,GACAQ,EAASR,KAEd,CAACA,IAEJ,IAAMS,EAAyCtH,mBAAQ,WACnD,GAAI6G,GAAgBE,EAAQ9M,KAAM,CAC9B,IAAM8F,EAAiB,GACvB8G,EAAaN,SAAQ,SAAAgB,GAAS,IAAD,EACzB,UAAAA,EAAKrC,eAAL,SAAcqB,SAAQ,SAAAtB,GAClBlF,EAAKoF,KAAKF,SAGlB,IAAMuC,EAAQC,OAAOC,QAAQC,IAAE5H,GAAM6H,QAAQ,YAAYxI,SAAS4B,KAAI,YAA0B,IAAD,mBAa3F,MAAO,CACHwE,SAduF,KAevFqC,YAfuF,KACjE5F,QAAO,SAAC6F,EAAKC,GACnC,GAAI,IAAIrH,KAAKqH,EAAK9B,aAAa+B,cAAe,IAAItH,MAAOsH,WACrD,OAAOF,EAEX,IACkB,IADdxL,EAAS2L,WAAWF,EAAKzL,QACzByL,EAAKzC,UACLhJ,GAAM,oBAAKyK,EAAQxB,IAAMwC,EAAKvC,UAAyB3K,aAAjD,aAAK,EAA2E6B,kBAAhF,QAA8F,GAGxG,OAAOoL,EAAMxL,IACd,OAQD4L,EAAST,OAAOC,QAAQC,IAAE5H,GAAM6H,QAAQ,qBAAqBxI,SAASgG,QAAO,SAAAJ,GAAC,MAAa,cAATA,EAAE,MAAoBhE,KAAI,YAA0B,IAAD,mBAcvI,MAAO,CACHwE,SAfmI,KAgBnIqC,YAhBmI,KAC7G5F,QAAO,SAAC6F,EAAKC,GACnC,GAAI,IAAIrH,KAAKqH,EAAK9B,aAAa+B,cAAe,IAAItH,MAAOsH,WACrD,OAAOF,EAEX,IAC2B,IADvBxL,EAAU2L,WAAWF,EAAMpC,iBAC3BoC,EAAKnC,mBACLtJ,GAAM,oBAAKyK,EAAQxB,IAAMwC,EAAKrC,mBAAmC7K,aAA3D,aAAK,EAAqF6B,kBAA1F,QAAwG,GAGlH,OAAOoL,EAAMxL,IAEd,OAQH6L,EAAW,GAmBf,OAjBAX,EAAMjB,SAAQ,SAAC6B,GACXhN,QAAQC,IAAI+M,GACPD,EAAIC,EAAK5C,UAGV2C,EAAIC,EAAK5C,WAAa4C,EAAKP,YAF3BM,EAAIC,EAAK5C,UAAY4C,EAAKP,eAMlCK,EAAO3B,SAAQ,SAAC6B,GACPD,EAAIC,EAAK5C,UAGV2C,EAAIC,EAAK5C,WAAa4C,EAAKP,YAF3BM,EAAIC,EAAK5C,UAAY4C,EAAKP,eAM3BM,KAEZ,CAACtB,EAAcE,IAGlB,OAAO,sBAAKvI,UAAU,0BAAf,UACH,qBAAKA,UAAU,2BAAf,qBAGA,qBAAKA,UAAU,4CAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,2BAAf,qCACC8I,EAAa,sBAAK9I,UAAU,gBAAf,UACTiJ,OAAOC,QAAQJ,GAAYlC,QAAO,SAAAJ,GAAC,OAAIA,EAAE,MAAI/C,QAAO,SAAC9B,EAAD,GAA4B,IAAD,uBAAtBqF,EAAsB,KAE5E,OADArF,GAD4E,MACjE,oBAAI4G,EAAQxB,IAAMC,GAAgC3K,aAAlD,aAAI,EAA6E6B,kBAAjF,QAA+F,KAE3G,GAAG2L,QAAQ,GAJJ,UAKL,8BAAK,cAAC,aAAD,SAElB,sBAAK7J,UAAU,uBAAf,UACI,qBAAKA,UAAU,0BAAf,SACK8I,EACGG,OAAOC,QAAQJ,GAAYlC,QAAO,SAAAJ,GAAC,OAAIA,EAAE,MAAIhE,KAAI,YAAyB,IAAD,uBAAtBwE,EAAsB,KAAZlJ,EAAY,KACrE,OAAO,sBAAoBkC,UAAU,gCAA9B,UACH,qBAAKA,UAAU,wBAAf,SAAwClC,EAAO+L,QAAQ,KACvD,qBAAK7J,UAAU,wBAAf,SAAwC+G,IAAMC,GAAgC3K,OAC9E,8BACI,qBAAKgG,IAAK0E,IAAMC,GAAgCC,QAASjH,UAAU,iCAAiCsC,IAAI,OAE5G,sBAAKtC,UAAU,yEAAf,WACMlC,GAAM,oBAAIyK,EAAQxB,IAAMC,GAAgC3K,aAAlD,aAAI,EAA6E6B,kBAAjF,QAA+F,IAAI2L,QAAQ,GADvH,YANa7C,MAUhB,qBAAKhH,UAAU,2BAAf,SAA0C,cAAC,aAAD,QAGvD,8BACI,cAAC,IAAD,CAAQ4C,QAAS,WACbwF,EACI,CACI0B,SAAU,eAEd,CACIrN,MAAO,CACHsN,WAAYzD,EAAY,OAPxC,mCAiBhB,sBAAKtG,UAAU,iDAAf,UACI,sBAAKgC,GAAG,SAAShC,UAAU,2GAA3B,UACI,qBAAKA,UAAU,cAAf,kBACA,qBAAKA,UAAU,8BAAf,oBACA,qBAAKA,UAAU,cAAf,uBACA,qBAAKA,UAAU,cAAf,6BAEJ,8BACK4I,EAAMpG,KAAI,SAAAC,GAAC,OAAIA,GAAKA,EAAEiE,SAAWjE,EAAEiE,QAAQ5H,OAAS,EAAI,cAAC,WAAD,UAAqB,cAAC,EAAD,2BAAmB2D,GAAnB,IAAsB6D,YAAaA,MAAzC7D,EAAET,SAAoEtG,UAGrJ8M,GAAa,cAAC,IAAD,CAASwB,QAAS,SAACC,GAAD,OAAkBnF,EAASoF,YAAc,CAAEC,SAAUF,QACpFvB,GAAW,cAAC,IAAD,CAAOsB,QAAS,SAACC,GAAD,OAAkBnF,EAASsF,YAAY,CAAED,SAAUF,Y,iBClKxE,SAASI,KACpB,IAAQC,EAAQvJ,2BAARuJ,IAER,EAAkBC,cAAXC,EAAP,oBACM1F,EAAWC,cACX0F,EAAkB7F,YAAe8F,KAcvC,OAZApK,qBAAU,WACN,sBAAC,sBAAAqB,EAAA,kEACG/E,QADH,SACsB0N,EAAIK,UAAUC,iBADpC,mBACsDC,UADtD,KACWhO,IADX,0DAAD,KAGD,IAEHyD,qBAAU,WACNwE,EAASpG,eACToG,EAASlH,eACT4M,MACD,CAACC,IAEG,mCACH,cAAC,IAAD,M,mCCgFOK,GApGG,SAAC1E,GAEf,MAA4CnG,mBAAuB,CAAE5D,KAAM0K,IAAMX,EAAMY,UAAU3K,KAAMuD,KAAMmH,IAAMX,EAAMY,UAAUpG,MAAOA,MAAOmG,IAAMX,EAAMY,UAAUpG,MAAOqG,QAASF,IAAMX,EAAMY,UAAUC,UAA7M,mBAAO8D,EAAP,KAAuBC,EAAvB,KACA,EAA8C/K,qBAA9C,mBAAOgL,EAAP,KAAwBC,EAAxB,KAEA5K,qBAAU,WACF8F,EAAMc,mBACNgE,EAAmB,CAAE7O,KAAM0K,IAAMX,EAAMc,mBAAmB7K,KAAMuD,KAAMmH,IAAMX,EAAMc,mBAAmBtG,MAAOA,MAAOmG,IAAMX,EAAMc,mBAAmBtG,MAAOqG,QAASF,IAAMX,EAAMc,mBAAmBD,YAEtM,IAEH3G,qBAAU,WACFyK,GAAkBA,EAAenK,OACjCuK,EAAY,CAAElB,IAAK,GAAImB,QAAQ,MAEpC,CAACL,IAEJzK,qBAAU,WACF2K,GAAmBA,EAAgBrK,OACnCuK,EAAY,CAAElB,IAAK,GAAImB,QAAQ,EAAMC,KAAK,MAE/C,CAACJ,IAEJ,IAAME,EAAc,SAAC,GAAoI,IAAlIlB,EAAiI,EAAjIA,IAAiI,IAA5HmB,cAA4H,aAA5GC,WAA4G,SAA/FC,EAA+F,EAA/FA,aAE/CC,EADG,YAAOnF,EAAMM,SACHjD,QAA8C,SAAC9B,EAAGjB,GAG7D,IAAI8K,EAFJ9K,EAAEsB,KAAOoE,EAAMpE,GAAIL,EAAEgF,KAAKjG,IAKlB8K,EAFJJ,GAAUC,EACNC,EACO,2BAAQ5K,GAAR,IAAWwG,kBAAmBoE,IAE9B,2BAAQ5K,GAAR,IAAWwG,kBAAmB+D,EAAiBrK,SAGpDwK,GAAUC,EACT,2BAAQ3K,GAAR,IAAWyG,gBAAiB8C,IAE9BmB,EACDE,EACO,2BAAQ5K,GAAR,IAAWsG,SAAUsE,IAErB,2BAAQ5K,GAAR,IAAWsG,SAAU+D,EAAenK,QAGxC,2BAAQF,GAAR,IAAW5C,OAAQmM,IAE9BtI,EAAEgF,KAAK6E,IAEX,OAAO7J,IACR,IACHyE,EAAMqF,WAAWF,IAWrB,OAAO,qCACH,sBAAKvL,UAAU,oBAAf,UACI,uBAAOqG,QAASD,EAAMsF,WAAWnF,MAAK,SAAA9D,GAAC,OAAIA,IAAM2D,EAAMpE,MAAKhC,UAAU,+JAA+JJ,KAAK,WAAWa,SAAU,SAACC,IACjP,CAAEiL,KAAMjL,EAAEC,OAAO0F,UAXlBsF,KAIdvF,EAAMwF,cAAN,sBAAwBxF,EAAMsF,YAA9B,CAA0CtF,EAAMpE,MAFhDoE,EAAMwF,cAAcxF,EAAMsF,WAAW9E,QAAO,SAAAnE,GAAC,OAAIA,IAAM2D,EAAMpE,UAW7D,oBAAIhC,UAAS,qCAAgCoG,EAAMyF,MAAtC,YAAb,SAAqEzF,EAAM/J,UAE/E,qBAAK2D,UAAU,oBAAf,SACI,oBAAIA,UAAS,8CAAyCoG,EAAMyF,MAA/C,qBAAb,SAAuFzF,EAAMtF,YAMjG,sBAAKd,UAAS,0EAAqEoG,EAAMU,QAAU,0BAA4B,uBAA/H,UACI,uBAAO9G,UAAU,mCAAmC8L,YAAY,SAASC,aAAc3F,EAAMtI,OAAQ8B,KAAK,SAASvD,KAAI,kBAAa+J,EAAMyF,OAASpL,SAAU,SAACC,GAC1JyK,EAAY,CAAElB,IAAKvJ,EAAEC,OAAOC,SAC7Bb,UAAQ,EAACiM,KAAM,MAAOC,IAAK,IAC7B7F,EAAMU,SAAW,sBAAM9G,UAAU,iCAAhB,oBAChB+K,EAAkC,cAAC,KAAD,CAAU/K,UAAU,6BAA6BkM,SAAUlB,EAAmBmB,gBAAgB,EAAMC,SAAUrB,EAAgBxJ,KAAM0H,OAAOoD,OAAOtF,KAAOvE,KAAI,SAAAC,GAAC,MAAK,CAAEpG,KAAMoG,EAAEpG,KAAMuD,KAAM6C,EAAE7B,MAAOqG,QAASxE,EAAEwE,QAASrG,MAAO6B,EAAE7B,YAAhP,cAAC,aAAD,OAEvB,qBAAKZ,UAAU,oBACf,wBACA,wBACCoG,EAAMc,mBAAqB+D,EAAkB,sBAAKjL,UAAS,0EAAqEoG,EAAMU,QAAU,0BAA4B,uBAA/H,UAC1C,uBAAO9G,UAAU,mCAAmC8L,YAAY,SAASC,aAAY,OAAE3F,QAAF,IAAEA,OAAF,EAAEA,EAAOe,gBAAiBvH,KAAK,SAASvD,KAAI,kBAAa+J,EAAMyF,OAASpL,SAAU,SAACC,GACpKyK,EAAY,CAAElB,IAAKvJ,EAAEC,OAAOC,MAAOwK,QAAQ,EAAOC,KAAK,KACxDW,KAAM,MAAOC,IAAK,IACpB7F,EAAMU,SAAW,sBAAM9G,UAAU,iCAAhB,oBAChB+K,EAAkC,cAAC,KAAD,CAAU/K,UAAU,6BAA6BkM,SAAUhB,EAAoBiB,gBAAgB,EAAMC,SAAUnB,EAAiB1J,KAAM0H,OAAOoD,OAAOtF,KAAOvE,KAAI,SAAAC,GAAC,MAAK,CAAEpG,KAAMoG,EAAEpG,KAAMuD,KAAM6C,EAAE7B,MAAOqG,QAASxE,EAAEwE,QAASrG,MAAO6B,EAAE7B,YAAlP,cAAC,aAAD,OACd,qBAAKZ,UAAU,sCAAsC4C,QAAS,WACnEsI,EAAmB,CAAE7O,KAAM0K,IAAMuF,IAAU7Q,MAAMY,KAAMuD,KAAMmH,IAAMuF,IAAU7Q,MAAMmF,MAAOA,MAAOmG,IAAMuF,IAAU7Q,MAAMmF,MAAOqG,QAASF,IAAMuF,IAAU7Q,MAAMwL,UAC7JkE,EAAY,CAAElB,IAAK,GAAImB,QAAQ,EAAMC,KAAK,EAAMC,aAAcgB,IAAU7Q,QAFnE,iCAIT,4B,oBCsIO8Q,GAzNC,WAEZ,IAAQ9P,EAAU+P,cAAV/P,MACFsN,EAAU,OAAGtN,QAAH,IAAGA,OAAH,EAAGA,EAAOsN,WAEpB0C,EAAU7H,YAAeC,KACzB4F,EAAkB7F,YAAe8F,KACjChC,EAAU9D,YAAe+D,KACzBJ,EAAU3D,YAAetG,KACzB4G,EAAS5D,cACTwD,EAAWC,cAEjB,EAAkBwF,aAAe,GAA1BC,EAAP,oBAEA,EAA0BkC,eAAlBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,IACVC,EAAsBC,eAAtBD,kBAGFxE,EAAezD,YAAe0D,KAAoBD,aAGxD,EAAgCpI,oBAAS,GAAzC,mBAAO8M,EAAP,KAAiBC,EAAjB,KACA,EAAgC/M,oBAAS,GAAzC,mBAAOuI,EAAP,KAAkByE,EAAlB,KAGA,EAA4ChN,qBAA5C,mBAAO8K,EAAP,KAAuBC,EAAvB,KACA,EAAwC/K,mBAAmC8J,EAAa,CAAE1N,KAAM,SAAUyE,QAAS,UAAQpF,GAA3H,mBAAOwR,EAAP,KAAqBC,EAArB,KAEA,EAAkClN,mBAAiD8J,EAAaA,EAAWvH,KAAI,SAAAC,GAAC,kCAAUA,GAAV,IAAa2J,UAAU,OAAY,IAAnJ,mBAAOgB,EAAP,KAAkBC,EAAlB,KACA,EAA8BpN,mBAAgC8J,GAA9D,oBAAOrD,GAAP,MAAgB+E,GAAhB,MACA,GAAoCxL,mBAAmB8J,EAAaA,EAAWvH,KAAI,SAAAC,GAAC,OAAIA,EAAET,MAAM,IAAhG,qBAAO0J,GAAP,MAAmBE,GAAnB,MAEA,GAAwB3L,mBAA8B,IAAtD,qBAAaqN,IAAb,aAGAhN,qBAAU,WACN,GAAIiI,GAAWA,EAAQ9M,KAAM,CACzBuP,EAAkB,CAAE3O,KAAM,aAAcyE,QAAS,KACjD,IAAM7C,EAAQgL,OAAOoD,OAAO9D,GAAS/F,KAAI,SAAC+K,GAAD,MAAyB,CAC9DlR,KAAK,GAAD,OAAKkR,EAAKzP,OAAO+L,QAAQ,GAAzB,YAA+B0D,EAAKtP,MAAM5B,MAC9CuD,KAAM2N,EAAKtP,MAAM2C,MAAM4M,WACvB5M,MAAO2M,EAAKtP,MAAM2C,MAClBqG,QAASsG,EAAKtP,MAAMgJ,QACpBnJ,OAAQyP,EAAKzP,OAAO0P,eAExBF,GAAQrP,MAEb,CAACsK,IAEJjI,qBAAU,WACF+H,GAAgBA,EAAavJ,SAAWiL,GACxCoD,EAAgB,CAAE9Q,KAAMgM,EAAa,GAAGhM,KAAMyE,QAASuH,EAAa,GAAGrG,OAE5E,CAACqG,IAEJ/H,qBAAU,WACN,GAAI+H,GAAgBA,EAAavJ,QAAUoO,GAAgBA,EAAapM,SAA+C,WAApCoM,EAAa7Q,KAAKoR,cAA4B,CAC7H,IAAM1E,EAAOV,EAAatL,MAAK,SAAA0F,GAAC,OAAIA,EAAET,KAAOkL,EAAapM,WACtDiI,GAAQA,EAAKrC,SACb2G,EAAatE,EAAKrC,QAAQlE,KAAI,SAAAC,GAAC,kCAAUA,GAAV,IAAa2J,UAAU,QAE1DX,GAAWpD,EAAatL,MAAK,SAAA0F,GAAC,OAAIA,EAAET,KAAOkL,EAAapM,WAAU4F,YAEvE,CAACwG,EAAc7E,IAElB,IAAMhD,GAAM,uCAAG,WAAO3E,GAAP,yCAAAiB,EAAA,sDAOX,GANAjB,EAAEkB,iBAEI8L,EAAyC,IAEzCC,EAAOP,EAAUxG,QAAO,SAAAnE,GAAC,OAAIiJ,GAAWkC,SAASnL,EAAET,QAEhDlD,OACL,IAAS+M,EAAQ,EAAGA,EAAQ8B,EAAK7O,OAAQ+M,IACjC/N,OAD0C,EAG1CA,EADA6P,EAAK9B,GAAO/E,SACF2C,WAAWkE,EAAK9B,GAAO/N,SAAvB,oBAAkCyK,EAAQxB,IAAM4G,EAAK9B,GAAO7E,UAAyB3K,aAArF,aAAkC,EAAkF6B,kBAApH,QAAkI,IAAIsP,WAEvIG,EAAK9B,GAAO/N,OAEzB4P,EAAO/G,KAAK,CACRkH,UAAWF,EAAK9B,GAAO/K,QACvBhD,SACAgQ,UAAWH,EAAK9B,GAAOxP,OAGvB0R,EAAYJ,EAAK9B,GAAO1E,gBAAiB6G,EAAcL,EAAK9B,GAAO3E,kBAEnE6G,GAAaC,IACTL,EAAK9B,GAAO1E,kBACZ4G,GAAatE,WAAWsE,IAAX,oBAAyBxF,EAAQxB,IAAM4G,EAAK9B,GAAO3E,mBAAkC7K,aAArF,aAAyB,EAA2F6B,kBAApH,QAAkI,IAAIsP,YAGvJE,EAAO/G,KAAK,CACRkH,UAAWF,EAAK9B,GAAO/K,QACvBhD,OAAQiQ,EACRD,UAAWE,KA/BhB,GAqCXhB,GAAY,GArCD,SAwCHP,EAASwB,eAAeR,gBAAkBhD,EAAgBgD,cAxCvD,oBAyCmB,IAAlBC,EAAO5O,SAAgBiM,IAAkBA,EAAe1O,KAzCzD,kCA0COuQ,EAAI,CAAEW,KAAMxG,IAAM2G,EAAO,GAAGI,WAA2BI,UAAWR,EAAO,GAAGG,UAAW/P,OAAQ4P,EAAO,GAAG5P,SA1ChH,qCA4CM4P,EAAO5O,OAAS,GA5CtB,wBA6COqP,EAA2BT,EAAOlL,KAAI,SAAAC,GAAC,MAAK,CAC9C8K,KAAMxG,IAAMtE,EAAEqL,WACdI,UAAWzL,EAAEoL,UACb/P,OAAQ2E,EAAE3E,WAhDf,UAmDO6O,EAASwB,GAnDhB,mCAsDmB,IAAlBT,EAAO5O,SAAgBiM,IAAkBA,EAAe1O,KAtDzD,kCAuDOwQ,EAAkBpC,EAAiBiD,EAAO,GAAGG,UAAWH,EAAO,GAAG5P,OAAQiJ,IAAM2G,EAAO,GAAGI,YAvDjG,qCAyDMJ,EAAO5O,OAAS,GAzDtB,iBA0DOqP,EAA2BT,EAAOlL,KAAI,SAAAC,GAAC,MAAK,CAC9C8K,KAAMxG,IAAMtE,EAAEqL,WACdI,UAAWzL,EAAEoL,UACb/P,OAAQ2E,EAAE3E,WAGL4E,EAAI,EAhEd,aAgEiBA,EAAIyL,EAAIrP,QAhEzB,kCAiEW+N,EAAkBpC,EAAiBiD,EAAOhL,GAAGmL,UAAWH,EAAOhL,GAAG5E,OAAQiJ,IAAM2G,EAAOhL,GAAGoL,YAjErG,QAgEiCpL,IAhEjC,wBAqEPuK,GAAW,GACXzC,IAtEO,kDAyEP5N,QAAQwF,MAAR,MACA0C,EAASsF,YAAY,CAAED,UAAU,EAAMiE,KAAI,OAAC,EAAD,6BAAE,KAAOpL,YAAT,aAAE,EAAaqL,QAAQzK,MAAM,EAAG,OA1EpE,QA6EXoJ,GAAY,GA7ED,0DAAH,sDAiFZ,OAAO,gCACH,sBAAMzK,SAAU8C,GAAhB,SACI,qBAAKrF,UAAU,yDAAf,SACI,sBAAKA,UAAU,mCAAf,UACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,8BAAf,2BAEJ,qBAAKA,UAAU,iEAAf,SACKqI,GAAwC,IAAxBA,EAAavJ,OAAe,qBAAKkB,UAAU,sBAAf,uDAAuF,qCAAE,sBAAKA,UAAU,iDAAf,UAClI,sBAAKA,UAAU,0BAAf,UACI,sBAAMA,UAAU,kCAAhB,yBACA,qBAAKA,UAAU,sDAAf,SACOqI,GAAgB6E,EAAiC,cAAC,KAAD,CAAUlN,UAAU,SAASsO,uBAAuB,EAAMpC,SAAUiB,EAAiBhB,gBAAgB,EAAMC,SAAUc,EAAc3L,KAAM8G,EAAa7F,KAAI,SAAAC,GAAC,MAAK,CAAEpG,KAAMoG,EAAEpG,KAAMyE,QAAS2B,EAAET,SAA5M,cAAC,KAAD,SAI3C,sBAAKhC,UAAU,gBAAf,UACI,sBAAKA,UAAU,yCAAf,UACI,sBAAMA,UAAU,0BAAhB,0BACA,sBAAKA,UAAU,8BAAf,UACI,uBAAOJ,KAAK,WAAWI,UAAU,+JAA+JS,SAAU,SAACC,GACnMA,EAAEC,OAAO0F,QAASuF,GAAcwB,EAAU5K,KAAI,SAAAC,GAAC,OAAIA,EAAET,OACpD4J,GAAc,OAEvB,mDAKR,sBAAK5L,UAAU,uDAAf,UACI,qBAAKA,UAAU,gCAAf,kBACA,qBAAKA,UAAU,gCAAf,qBACA,qBAAKA,UAAU,gCAAf,0BACA,qBAAKA,UAAU,oBACdqI,GAAgB+E,GAAa1G,IAAWA,GAAQ5H,OAAS,EAAIsO,EAAU5K,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAAC,GAAD,yBAAW6L,cAAexD,EAAiByD,iBAAkBxD,EAAmBU,WAAYA,GAAYE,cAAeA,GAA0BC,MAAOnJ,GAAOD,GAA/J,IAAkKiE,QAAS0G,EAAW3B,WAAY4B,IAAvD5K,EAAET,OAAyE,sBAGpT,uBAAMhC,UAAU,UAAhB,sBAAoCiJ,OAAOoD,OAAOe,EAAUxG,QAAO,SAAAJ,GAAC,OAAIkF,GAAWkC,SAASpH,EAAExE,QAAMyB,QAAO,SAAC9B,EAAGjB,EAAGgC,GAAO,IAAD,IAIzG,IAHPhC,EAAEwG,mBAAqBxG,EAAEyG,kBACrBzG,EAAE0G,iBACFzF,GAAK8H,WAAW/I,EAAEyG,iBAElBxF,GAAK8H,WAAW/I,EAAEyG,kBAAb,oBAAiCoB,EAAQxB,IAAMrG,EAAEwG,mBAAkC7K,aAAnF,aAAiC,EAAiF6B,kBAAlH,QAAgI,IAG7I,OAAIwC,EAAEoG,QAAgBnF,EAAI8H,WAAW/I,EAAE5C,QAChC6D,EAAI8H,WAAW/I,EAAE5C,SAAb,oBAAwByK,EAAQxB,IAAMrG,EAAEsG,UAAyB3K,aAAjE,aAAwB,EAAwE6B,kBAAhG,QAA8G,KAC1H,GAAG2L,QAAQ,MACd,sBAAK7J,UAAU,gBAAf,UACI,sBAAMA,UAAU,YAAhB,oCACA,qBAAKA,UAAU,mBAAf,SACI,0BAAUA,UAAU,uCAAuC3D,KAAK,cAAc2F,GAAG,GAAGyM,KAAM,GAAIC,KAAM,YAI5G,qBAAK1O,UAAU,sBAAf,SACI,sBAAKA,UAAU,8EAAf,UACI,cAAC,IAAD,CAAQ2C,QAAQ,SAASC,QAAS,kBAAMsC,GAAQ,IAAhD,mBACA,cAAC,IAAD,CAAQtF,KAAK,SAASsB,UAAW6L,EAAjC,sBAlDwH,gBAyDnJvE,GAAa,cAAC,IAAD,CAASwB,QAASiD,EAAY0B,SAAU,WAAQzJ,GAAQ,MACrEwD,GAAW,cAAC,IAAD,CAAOsB,QAAS,SAACC,GAAD,OAASnF,EAASsF,YAAY,CAAED,UAAU,EAAOiE,KAAM,aC5NrFxB,GAAMgC,gBAAK,kBAAM,yDACjBC,GAAgBD,gBAAK,kBAAM,mCAC3BE,GAAeF,gBAAK,kBAAM,mCAC1BG,GAAkBH,gBAAK,kBAAM,mCAC7BI,GAAiBJ,gBAAK,kBAAM,mCAC5BK,GAAYL,gBAAK,kBAAM,gEACvBM,GAAON,gBAAK,kBAAM,kCAClBO,GAAeP,gBAAK,kBAAM,kCAC1BQ,GAASR,gBAAK,kBAAM,mCACpBS,GAAeT,gBAAK,kBAAM,yDAC1BU,GAAUV,gBAAK,kBAAM,mCACrBW,GAAOX,gBAAK,kBAAM,gEA0DxB,I,GAAMY,GAAe,SAAC,GAAiG,IAA/FjQ,EAA8F,EAA9FA,OAAQkN,EAAsF,EAAtFA,QAASgD,EAA6E,EAA7EA,SACvC,OAAKlQ,GAAUkN,EAAgB,cAAC,IAAD,CAAUhL,GAAI,UAAWiC,SAAO,IAC3DnE,GAAUkN,EAAgB,cAAC,IAAD,CAAUhL,GAAI,aAAciC,SAAO,IAE1D+L,GAGHC,GAAc,SAAC,GAAiG,IAA/FnQ,EAA8F,EAA9FA,OAAQkN,EAAsF,EAAtFA,QAASgD,EAA6E,EAA7EA,SACtC,OAAKlQ,GAAWkN,GACXlN,GAAUkN,EAAgB,cAAC,IAAD,CAAUhL,GAAI,UAAWiC,SAAO,IAExD+L,EAHyB,cAAC,IAAD,CAAUhO,GAAI,IAAKiC,SAAO,KAO7CiM,GAtEf,WACE,IAAQ7O,EAAYC,2BAAZD,QACFvB,EAASqQ,YAAYnQ,GACrBgN,EAAUmD,YAAY/K,KAE5B,OACE,8BACE,cAAC,WAAD,CAAUgL,SAAU,qBAAK7P,UAAU,mDAAf,SAAkE,cAAC,aAAD,MAAtF,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8P,KAAK,IAAIC,QACd,cAAC,GAAD,CAAcxQ,OAAQA,EAAQkN,UAAW3L,KAAa2L,EAAtD,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAOqD,KAAK,kBAAkBC,QAAS,cAAClP,EAAD,MACvC,cAAC,IAAD,CAAOiP,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAM,OAAQC,QACnB,cAAC,GAAD,CAAaxQ,OAAQA,EAAQkN,UAAW3L,KAAa2L,EAArD,SACE,cAAC,GAAD,QAEJ,cAAC,IAAD,CAAOqD,KAAM,cAAeC,QAC1B,cAAC,GAAD,CAAaxQ,OAAQA,EAAQkN,UAAW3L,KAAa2L,EAArD,SACE,cAAC,GAAD,QAEJ,cAAC,IAAD,CAAOqD,KAAK,aAAaC,QAAS,cAAC1F,GAAD,IAAlC,SACE,eAAC,IAAD,CAAOyF,KAAK,GAAGC,QACb,cAAC,GAAD,CAAaxQ,OAAQA,EAAQkN,UAAW3L,KAAa2L,EAArD,SACE,cAAC,WAAD,CAAUoD,SAAU,qBAAK7P,UAAU,mDAAf,SAAkE,cAAC,aAAD,MAAtF,SACE,cAACiP,GAAD,QAHN,UAOE,cAAC,IAAD,CAAOa,KAAK,GAAGC,QAAS,cAACb,GAAD,MACxB,cAAC,IAAD,CAAOY,KAAK,eAAeC,QAAS,cAACZ,GAAD,MACpC,cAAC,IAAD,CAAOW,KAAK,SAASC,QAAS,cAACX,GAAD,MAC9B,cAAC,IAAD,CAAOU,KAAK,eAAeC,QAAS,cAACV,GAAD,MACpC,cAAC,IAAD,CAAOS,KAAK,OAAOC,QAAS,cAACR,GAAD,MAC5B,cAAC,IAAD,CAAOO,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAM,mBAAoBC,QAAS,cAACT,GAAD,MAC1C,eAAC,IAAD,CAAOQ,KAAM,WAAYC,QACvB,cAAClB,GAAD,IADF,UAGE,cAAC,IAAD,CAAOiB,KAAM,GAAIC,QAAS,cAACjB,GAAD,MAC1B,cAAC,IAAD,CAAOgB,KAAI,WAAcC,QAAS,cAAChB,GAAD,MAClC,cAAC,IAAD,CAAOe,KAAI,UAAaC,QAAS,cAACf,GAAD,sB,yDCjClCgB,GA5BDC,YAAe,CACzBC,SAAO,IACH7R,mBAAoB8R,IACpBC,aAAcC,IACd5D,QAAS6D,IACT/Q,OAAQoF,EACR4L,OAAQC,KACR5R,kBAAmB6R,IACnBhG,gBAAiBiG,IACjBtR,SAAUuR,KACVtI,aAAcgH,KATX,gBAUFuB,KAAWC,YAAcD,KAAWV,SAVlC,gBAWFY,KAAYD,YAAcC,KAAYZ,SAXpC,gBAYFa,KAAQF,YAAcE,KAAQb,SAZ5B,gBAaFc,KAAQH,YAAcG,KAAQd,SAb5B,gBAcFe,KAAcJ,YAAcI,KAAcf,SAdxC,gBAeFgB,KAAeL,YAAcK,KAAehB,SAf1C,gBAgBFiB,KAAcN,YAAcM,KAAcjB,SAhBxC,gBAiBFkB,KAAYP,YAAcO,KAAYlB,SAjBpC,IAmBPmB,WAAY,SAACC,GAAD,OACRA,EAAqB,CAAEC,mBAAmB,IAASC,OAAOZ,KAAWS,WAAYP,KAAYO,WAAYH,KAAeG,WAAYL,KAAQK,WAAYJ,KAAcI,WAAYF,KAAcE,WAAYN,KAAQM,WAAYD,KAAYC,eCvBpPI,iBACE,cAAC,aAAD,UACE,cAAC,sBAAD,CACEC,KAAM,CACJrV,KAAM,kBACNsV,KAAM,oCACNC,YAAa,yBACbC,IAAK,yBAEPC,SAAU,CAACC,WAPb,SASE,cAAC,IAAD,CAAU/B,MAAOA,GAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,YAKRgC,SAASC,eAAe,U,yIClBbC,EAAmB9V,YAAY,CAC3CC,KAAM,eACNC,aAP6E,CAC7E+L,aAAc,GACd8J,WAAW,GAMX5V,SAAU,CACT6V,eAAgB,SAAC3V,EAAOC,GACY,IAAD,OAAXhB,IAAnBgB,EAAOC,UACV,EAAAF,EAAM4L,cAAa1B,KAAnB,oBAA2BjK,EAAOC,WAGpC0V,gBAAiB,SAAC5V,EAAOC,GACxB,QAAiChB,IAA7BgB,EAAOC,QAAQ2V,UAAyB,CAC3C,IAAM1J,EAAQlM,EAAOC,QAAQqG,KAAKR,KAAI,SAAC+P,GAAD,mBAAC,eACnCA,GADkC,IAErC7L,QAAS6L,EAAY7L,QAAQlE,KAAI,SAACiE,GACjC,OAAO,2BACHA,GADJ,IAECpK,KAAMmW,YAAe/L,EAAOpK,KAAMK,EAAOC,QAAQ2V,WACjDxU,OAAQ0U,YAAe/L,EAAO3I,OAAQpB,EAAOC,QAAQ2V,WACrDnL,gBAAiBV,EAAOU,gBACrBqL,YAAe/L,EAAOU,gBAAiBzK,EAAOC,QAAQ2V,gBACtD5W,EACHoF,QAAS0R,YAAe/L,EAAO3F,QAASpE,EAAOC,QAAQ2V,qBAI1D7V,EAAM4L,aAAeO,EAChBnM,EAAM0V,YACV1V,EAAM0V,WAAY,KAIrBM,kBAAmB,SAAChW,EAAOC,QACHhB,IAAnBgB,EAAOC,UACVF,EAAM4L,aAAe5L,EAAM4L,aAAazB,QAAO,SAAC2L,GAAD,OAAiBA,EAAYvQ,KAAOtF,EAAOC,gBAMvF,EAA+DuV,EAAiB/T,QAAxDkU,GAAxB,EAAQD,eAAR,EAAwBC,iBAElB/J,GAFN,EAAyCmK,kBAEd,SAAChW,GAAD,OAAsBA,EAAM4L,eAE/C6J,MAAf,S,8FCjDe,SAAS9Q,EAAQN,GAC5B,MAA8BiF,cAAtBC,EAAR,EAAQA,OAAQ9E,EAAhB,EAAgBA,UAChB,EAAwBjB,qBAAxB,mBAAOkB,EAAP,KAAauR,EAAb,KAcA,OAZApS,qBAAU,WACFQ,GACAkF,EAAO,QAAS,UAAWlF,GACtBoF,MAAK,SAAA/E,GACEA,GACAuR,EAAQvR,EAAK,SAI9B,IAGI,CAAED,YAAWC,U,6TChBXwR,EAAgB,CACzB,CACI,UAAa,MACb,QAAW,8CAEf,CACI,UAAa,MACb,QAAW,8CAEf,CACI,UAAa,OACb,QAAW,8CAEf,CACI,UAAa,OACb,QAAW,+CAIJ,SAASC,EAAW9R,GAC/B,IAAQwJ,EAAQvJ,2BAARuJ,IACR,EAA4CrK,qBAA5C,mBAAO4S,EAAP,KAAuBC,EAAvB,KACA,EAAgC7S,oBAAS,GAAzC,mBAAOiB,EAAP,KAAkB6R,EAAlB,KAEAzS,qBAAU,WACN0S,MACF,IAEF,IAAMA,EAAY,uCAAG,0EAAArR,EAAA,yDACZ2I,EAAI2I,eADQ,yCACe,MADf,gBAGT/W,EAAuC,GAC3C6W,GAAW,GAJE,cAKMJ,GALN,gEAKF/I,EALE,kBAOYU,EAAIK,UAAUuI,SAAStJ,EAAK9I,SAPxC,eAOHqS,EAPG,iBAQWA,EAAOC,UAAUtS,GAR5B,QAQLyH,EARK,OASL8K,EAAY/I,EAAIgJ,KAAKC,MAAMC,KAAKjL,EAAQiF,YACxCiG,EAAiBnJ,EAAIgJ,KAAKC,MAAMG,QAAQL,EAAU7F,WAAY,SAElEtR,EAAW+M,OAAO0K,OAAOzX,EAAd+M,OAAA,IAAAA,CAAA,GAA2BW,EAAKkE,UAAY2F,IAZ9C,gKAecnJ,EAAIK,UAAUC,eAAegJ,cAAYhY,MAfvD,eAeTiY,EAfS,iBAgBUA,EAAeT,UAAUtS,GAhBnC,eAgBTgT,EAhBS,OAiBTC,EAAQzJ,EAAIgJ,KAAKC,MAAMC,KAAKM,EAAWtG,YACvC5R,EAAO0O,EAAIgJ,KAAKC,MAAMG,QAAQK,EAAMvG,WAAY,SAlBvC,UAqBelD,EAAIK,UAAUC,eAAegJ,cAAY3X,OArBxD,eAqBT+X,EArBS,iBAsBWA,EAAgBZ,UAAUtS,GAtBrC,eAsBTmT,EAtBS,OAuBTC,EAAS5J,EAAIgJ,KAAKC,MAAMC,KAAKS,EAAYzG,YACzCvR,EAAQqO,EAAIgJ,KAAKC,MAAMG,QAAQQ,EAAO1G,WAAY,SAxBzC,UA0BSlD,EAAIK,UAAUwJ,eA1BvB,eA0BTC,EA1BS,iBA2BgBA,EAAUhB,UAAUtS,GA3BpC,eA2BTuT,EA3BS,OA4BTC,EAAShK,EAAIgJ,KAAKC,MAAMC,KAAKa,EAAiB7G,YAC9C/R,EAAO6O,EAAIgJ,KAAKC,MAAMG,QAAQY,EAAO9G,WAAY,SA7BxC,UA+BclD,EAAIK,UAAUC,iBA/B5B,eA+BT2J,EA/BS,iBAgCUA,EAAenB,UAAUtS,GAhCnC,eAgCT0T,EAhCS,OAiCTC,EAAQnK,EAAIgJ,KAAKC,MAAMC,KAAKgB,EAAWhH,YACvC7R,EAAO2O,EAAIgJ,KAAKC,MAAMG,QAAQe,EAAMjH,WAAY,SAEpDsF,EAAkB,aAAErX,OAAMQ,QAAON,OAAMC,QAASM,IAChD6W,GAAW,GArCE,+BAsCJtX,OAAMQ,QAAON,OAAMC,QAASM,IAtCxB,wCAwCbU,QAAQwF,MAAR,MACA2Q,GAAW,GACL,IAAI2B,MAAM,0BA1CH,uEAAH,qDA8ClB,MAAO,CAAE1B,eAAcH,iBAAgB3R,a,YCtE5B,SAASyT,IAGpB,OAFiBC,YAAuC,aAAc,QAAS,IAAK,GAA5E5R,K,sDC+HGuH,EAzHQ,WAA8B,IAC3CzF,EAAW+P,cACXpI,EAAUmD,YAAY/K,KACtB4F,EAAkBmF,YAAYlF,KAC9BoK,EAAmBlF,YAAYjR,KAE/BoW,EAAoBJ,IACpBtM,EAAe2M,cACrB,EAAoEpC,EAAWnI,GAAvEuI,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,eAA2BoC,EAAjD,EAAsC/T,UAEtC,EAAyFgU,cAAzF,mBAAOC,EAAP,YAAmCC,EAAnC,EAA6BpS,KAAmCqS,EAAhE,EAAoDC,WAEpDhV,qBAAU,WACF8U,GAAmBA,EAAgB1H,OAAO5O,OAAS,IAAMuW,GACrC,OAAhBP,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBpH,OAAO,GAAG6H,QAASH,EAAgB1H,OAAO,GAAG6H,OAAwB,OAAhBT,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBpH,OAAOoH,EAAiBpH,OAAO5O,OAAS,GAAGyW,QAASH,EAAgB1H,OAAO0H,EAAgB1H,OAAO5O,OAAS,GAAGyW,MACvMzQ,EAASrG,YAAgB2W,IAEtBA,GAAqD,IAAlCA,EAAgB1H,OAAO5O,QAAcgG,EAASrG,YAAgB2W,MAC7F,CAACA,EAAiBC,IAErB/U,qBAAU,WACF+H,GACA5D,sBAAW,WACPK,EAASuN,YAAgB,CAAErP,KAAMqF,EAAciK,UAAS,OAAE7F,QAAF,IAAEA,OAAF,EAAEA,EAAS+I,2BACpE,QAER,CAACnN,IAEJ/H,qBAAU,WACN,GAAIyU,GAAqBA,EAAkBjW,OAAS,KAAc,OAAP2N,QAAO,IAAPA,OAAA,EAAAA,EAASwB,kBAAmBxD,GAAmBoI,IAAmBoC,IAA2B,OAAPxI,QAAO,IAAPA,OAAA,EAAAA,EAASwB,kBAAmBxD,GAAmB,CAE5L,IAAM3N,EAAOiY,EAAkBhY,MAAK,SAAAC,GAAC,MAAe,SAAXA,EAAEX,QACrCY,EAAO8X,EAAkBhY,MAAK,SAAAC,GAAC,MAAe,SAAXA,EAAEX,QACrCa,EAAO6X,EAAkBhY,MAAK,SAAAC,GAAC,MAAe,SAAXA,EAAEX,QACrCc,EAAM4X,EAAkBhY,MAAK,SAAAC,GAAC,MAAe,QAAXA,EAAEX,QACpCe,EAAM2X,EAAkBhY,MAAK,SAAAC,GAAC,MAAe,QAAXA,EAAEX,QACpCgB,EAAO0X,EAAkBhY,MAAK,SAAAC,GAAC,MAAe,SAAXA,EAAEX,QACrCiB,EAAOyX,EAAkBhY,MAAK,SAAAC,GAAC,MAAe,SAAXA,EAAEX,QACrCkB,EAAQwX,EAAkBhY,MAAK,SAAAC,GAAC,MAAe,UAAXA,EAAEX,QAE5C,GAAIwW,EAAgB,CAChB,IAAItK,EAAUsK,EAEd,GAAItK,GAAWzL,GAAQG,GAAQC,GAAQC,GAAOC,GAAOC,GAAQC,GAAQC,EAAO,CAAC,IAAD,gBAEpEkY,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJzN,EAAUA,EACVkN,EAAQhM,WAAWlB,EAAQ9M,MAC3Bia,EAAQjM,WAAWlB,EAAQ5M,MAC3Bga,EAAQlM,WAAWlB,EAAQ3M,MAC3Bga,EAAOnM,WAAWlB,EAAQ1M,KAC1Bga,EAAOpM,WAAWlB,EAAQzM,KAC1Bga,EAAQrM,WAAWlB,EAAQxM,MAC3Bga,EAAQtM,WAAWlB,EAAQvM,MAC3Bga,EAAQvM,WAAWlB,EAAQtM,OAG3B,IAAMga,EAAYR,GAAK,UAAI3Y,EAAKW,aAAT,QAAkB,GACnCyY,EAAYR,GAAK,UAAIzY,EAAKQ,aAAT,QAAkB,GACnC0Y,EAAYR,GAAK,UAAIzY,EAAKO,aAAT,QAAkB,GACnC2Y,EAAWR,GAAI,UAAIzY,EAAIM,aAAR,QAAiB,GAChC4Y,EAAWR,GAAI,UAAIzY,EAAIK,aAAR,QAAiB,GAChC6Y,EAAYR,GAAK,UAAIzY,EAAKI,aAAT,QAAkB,GACnC8Y,EAAYR,GAAK,UAAIzY,EAAKG,aAAT,QAAkB,GACnC+Y,EAAaR,GAAK,UAAIzY,EAAME,aAAV,QAAmB,GAErCgZ,EAAQR,EAAYC,EAAYG,IAAaF,EAAYC,EAAWE,EAAYC,EAAYC,EAE5FE,EAAiB,CACnB,CAAE5Y,OAAQ2X,EAAO1X,OAAQjB,EAAKU,WAAYQ,QAAsB,IAAZiY,EAAmBQ,EAAOxY,MAAO8I,IAAMtL,KAAMyC,YAAapB,EAAKW,OACnH,CAAEK,OAAQ4X,EAAO3X,OAAQd,EAAKO,WAAYQ,QAAsB,IAAZkY,EAAmBO,EAAOxY,MAAO8I,IAAMpL,KAAMuC,YAAajB,EAAKQ,OACnH,CAAEK,OAAQ6X,EAAO5X,OAAQb,EAAKM,WAAYQ,QAAsB,IAAZmY,EAAmBM,EAAOxY,MAAO8I,IAAMnL,KAAMsC,YAAahB,EAAKO,OACnH,CAAEK,OAAQ8X,EAAM7X,OAAQZ,EAAIK,WAAYQ,QAAqB,IAAXoY,EAAkBK,EAAOxY,MAAO8I,IAAMlL,IAAKqC,YAAaf,EAAIM,OAC9G,CAAEK,OAAQ+X,EAAM9X,OAAQX,EAAII,WAAYQ,QAAqB,IAAXqY,EAAkBI,EAAOxY,MAAO8I,IAAMjL,IAAKoC,YAAad,EAAIK,OAC9G,CAAEK,OAAQgY,EAAO/X,OAAQV,EAAKG,WAAYQ,QAAsB,IAAZsY,EAAmBG,EAAOxY,MAAO8I,IAAMhL,KAAMmC,YAAab,EAAKI,OACnH,CAAEK,OAAQiY,EAAOhY,OAAQT,EAAKE,WAAYQ,QAAsB,IAAZuY,EAAmBE,EAAOxY,MAAO8I,IAAM/K,KAAMkC,YAAaZ,EAAKG,OACnH,CAAEK,OAAQkY,EAAOjY,OAAQR,EAAMC,WAAYQ,QAAuB,IAAbwY,EAAoBC,EAAOxY,MAAO8I,IAAM9K,MAAOiC,YAAaX,EAAME,QAG3HqH,EAASjH,YAAkB6Y,SAKxC,CAAC7D,EAAgBoC,IAEpB3U,qBAAU,WACNqW,MACD,CAAC5B,IAEJ,IAAM4B,EAAQ,uCAAG,sBAAAhV,EAAA,sDACToT,GAAqBA,EAAkBjW,OAAS,IAChDgG,EAAStI,YACLuY,IAGJ/B,KANS,2CAAH,qDAqBd,OAVA1S,qBAAU,WACN,IAAMsW,EAAY,kBAAMzB,EAAmB1K,GAAiBoM,SAASC,OAAM,WAAQ3B,EAAmB1K,GAAiBoM,SAASC,OAAM,SAAC1U,GAAYxF,QAAQwF,MAAMA,UACjKwU,IACA,IAAIG,EAAQC,aAAY,WACpBJ,MACD,KAEH,OAAO,WAAQK,cAAcF,MAC9B,CAACtM,IAEG,CAACkM,I,2HC5HNO,EAAW,CACbC,MAAO,CACHhT,OAAQ,EACRiT,WAAY,CACRC,gBAAiB,EACjBC,SAAU,IAGlBC,KAAM,CACFpT,OAAQ,OACRiT,WAAY,CACRC,gBAAiB,GACjBzX,KAAM,WAKZ4X,EAAKC,sBAAyG,WAAmCrT,GAAnC,IAAGqL,EAAH,EAAGA,SAAU7M,EAAb,EAAaA,QAAS5C,EAAtB,EAAsBA,UAAtB,OAA2C,oBAAIoE,IAAKA,EAAKxB,QAASA,EAAS5C,UAAS,UAAKA,EAAL,yEAAzC,SAAiIyP,OAE1RiI,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAatb,EAAhB,EAAgBA,KAAMyE,EAAtB,EAAsBA,QAASmG,EAA/B,EAA+BA,QAASjH,EAAxC,EAAwCA,UAAWsO,EAAnD,EAAmDA,sBAAnD,OAAkN,sBAAKtO,UAAU,gBAAf,UAC7N,sBAAKA,UAAU,gBAAf,UACK2X,GAAe,qBAAK3X,UAAU,gDAAf,SACX2X,IAEL,sBAAK3X,UAAU,wCAAf,UACKiH,GAAW,8BAAK,qBAAK5E,IAAK4E,EAASjH,UAAWiH,EAAO,oBAAyB,GAAI3E,IAAI,OACvF,qBAAKtC,UAAS,iBAAKA,QAAL,IAAKA,IAAa,GAAlB,yBAA6CL,MAAOtD,EAAlE,SAAyEA,WAG/EiS,GAAyB,qBAAKtO,UAAS,sCAAd,SAAwD,OAACc,QAAD,IAACA,KAAS6C,WAAW,MAAkB7C,EAAQ0C,MAAM,IAAIC,QAAO,SAAC9B,EAAG3E,EAAG0F,EAAGyL,GACzJ,OAAOzL,EAAI,IAAOyL,EAAIrP,OAAS4D,EAAK,EAAIf,EAAI3E,EAAI2E,EAAE6B,MAAM,KAAK1E,OAAS,EAAI,EAAI6C,EAAI,IAAMA,IACzF,IAF6Gb,QAmErG8W,IA9DE,SAAC,GAA+b,IAAD,IAA5bxL,EAA4b,EAA5bA,SAAU7K,EAAkb,EAAlbA,KAAkb,IAA5a4K,sBAA4a,SAApZD,EAAoZ,EAApZA,SAAUlM,EAA0Y,EAA1YA,UAA0Y,IAA/X6X,cAA+X,aAA/WvJ,6BAA+W,aAAhVwJ,mBAAgV,MAAlU,GAAkU,MAA9TC,kBAA8T,MAAjT,GAAiT,EAA7SJ,EAA6S,EAA7SA,YAAalX,EAAgS,EAAhSA,SAC5K,EAA0BR,oBAAS,GAAnC,mBAAO+X,EAAP,KAAeC,EAAf,KACMC,EAAQjT,mBACd,EAAgChF,mBAAS,GAAzC,mBAAOkY,EAAP,KAAiBC,EAAjB,KACMC,EAAYC,YAAiBN,EAAQC,GAQ3C,OANA3X,qBAAU,WACF4X,EAAM5S,SAAwB,IAAb6S,GACjBC,EAAYF,EAAM5S,QAAQiT,iBAK9B,sBAAKvY,UAAS,mBAAc8X,EAAd,KAAd,UACI,sBAAKlV,QAAS,kBAAU,OAAJrB,QAAI,IAAJA,OAAA,EAAAA,EAAMzC,QAAS,EAAImZ,GAASD,GAAU,MAAMhY,UAAS,eAAUA,GAAa,GAAvB,YAA6B6X,EAAS,iBAAmB,kBAAzD,2CAA6GG,GAAU,iBAAvH,6BAAzE,UACMH,EAEO,cAAC,aAAD,IAFE,qBAAK7X,UAAU,WAAf,SACN0X,EAAO,CAAErb,KAAM+P,EAAS/P,KAAMyE,QAAO,iBAAEsL,QAAF,IAAEA,OAAF,EAAEA,EAAUtL,eAAZ,eAAuBsL,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAUtO,OAAQmJ,QAAO,OAAEmF,QAAF,IAAEA,OAAF,EAAEA,EAAUnF,QAASjH,UAAS,OAAEoM,QAAF,IAAEA,OAAF,EAAEA,EAAUpM,UAAWsO,sBAAuBA,EAAuBqJ,kBAE5LpW,GAAQA,EAAKzC,OAAS,GAAK,8BACxB,cAAC,IAAD,CAAgBkB,UAAU,aAAa6D,MAAOmU,EAAS,CAAEQ,UAAW,uBAAqB9c,SAGhG,cAAC,IAAO+c,IAAR,CAAYvB,SAAUA,EAAUwB,QAAS,QAASC,QAASX,EAAS,OAAS,QAAS5T,IAAKiU,EAAWrY,UAAU,wEAAhH,SACG,oBAAIgC,GAAG,MAAMhC,UAAU,iCAAiC6D,MAAOtC,EAAKzC,OAAS,EACzE,CAAEqF,OAAQJ,OAAOC,WAAa,IAApB,UAAwC,EAAXmU,EAA7B,gBAA8D,EAAXA,EAAnD,OAEV,CAAEhU,OAAQ,QAHd,gBAKK5C,QALL,IAKKA,GALL,UAKKA,EAAMqF,QAAO,SAACnE,GACX,OAAK0J,EAEM1J,EAAEpG,MACD,OAADoG,QAAC,IAADA,OAAA,EAAAA,EAAGpG,SAAH,OAAY+P,QAAZ,IAAYA,OAAZ,EAAYA,EAAU/P,MACtBoG,EAAET,IACD,OAADS,QAAC,IAADA,OAAA,EAAAA,EAAGT,OAAH,OAAUoK,QAAV,IAAUA,OAAV,EAAUA,EAAUpK,SADxB,GAHK,OAADS,QAAC,IAADA,OAAA,EAAAA,EAAG3B,YAAH,OAAesL,QAAf,IAAeA,OAAf,EAAeA,EAAUtL,mBAP5C,aAKK,EASG0B,KAAI,SAACC,EAAiBC,GAAO,IAAD,EACtBkW,EAAqB,GAI3B,OAHU,IAANlW,IACAkW,EAAIxU,IAAM8T,GAEP,wBAACV,EAAD,2BAAQoB,GAAR,IAAajT,IAAKlD,EAAEpG,KAAM2D,UAAW+X,EAAYnV,QAAS,WAC7D,GAAIH,EAAEG,QAGF,OAFAH,EAAEG,eACFqV,GAAQ,GAGZ/L,EAAUzJ,GACVwV,GAAQ,GACA,OAARxX,QAAQ,IAARA,KAAWgC,EAAG2J,MAEbsL,EAAO,CAAErb,KAAI,OAAEoG,QAAF,IAAEA,OAAF,EAAEA,EAAGpG,KAAMyE,QAAO,iBAAE2B,QAAF,IAAEA,OAAF,EAAEA,EAAG3B,eAAL,eAAgB2B,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAG3E,OAAQmJ,QAAO,OAAExE,QAAF,IAAEA,OAAF,EAAEA,EAAGwE,QAASjH,UAAS,OAAEyC,QAAF,IAAEA,OAAF,EAAEA,EAAGzC,UAAWsO,uC,iCC9FrI,wEAKYhH,EALZ,wBAkCe,SAAS0N,IACtB,IAAMvI,EAAUmD,YAAY/K,KAI5B,OAHiB+P,YAA0C,eAAgB,SAAU,KAA5C,OAAkDnI,QAAlD,IAAkDA,OAAlD,EAAkDA,EAASoM,KAA5F7V,M,SA/BEsE,K,gBAAAA,E,mBAAAA,M,uCCLZ,mCAoBewR,IAhBC,SAAC,GAAiH,IAA/G9O,EAA8G,EAA9GA,QAAShK,EAAqG,EAArGA,UAAW2O,EAA0F,EAA1FA,SAC7BhP,EAAQiF,YAAemU,KAE7B,OAAO,sBAAK/Y,UAAS,gIAA2HA,GAAzI,UACH,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,uDAAuD4C,QAAS,kBAAMoH,GAAQ,IAA7F,eACA,qBAAK3H,IAAI,eAAeC,IAAI,QAEhC,qBAAKtC,UAAU,sBAAf,SAAsCL,IACtC,cAAC,IAAD,CAAQK,UAAU,uBAAuB4C,QAAS,WAAY+L,GAAUA,IAAY3E,GAAQ,IAA5F,wB,iCCbR,mCAqBe0K,IAhBD,SAAC,GAAiD,IAA/C1K,EAA8C,EAA9CA,QACPrK,EAAQiF,YAAeoU,KAE7B,OAAO,sBAAKhZ,UAAU,wHAAf,UACH,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,uDAAuD4C,QAAS,kBAAMoH,GAAQ,IAA7F,eACA,qBAAK3H,IAAI,mBAAmB6B,MAAM,MAAM5B,IAAI,QAEhD,qBAAKtC,UAAU,sBAAf,SAAsCL,IACtC,cAAC,IAAD,CAAQK,UAAU,uBAAuB4C,QAAS,kBAAMoH,GAAQ,IAAhE,wB,iCCfR,WAoBesO,IAjBU,SAACW,EAAoBC,GAC1C,IAAMC,EAAalU,iBAAuB,MACpCmU,EAAQC,uBAAY,SAAC3Y,GACnBuY,GAAaE,EAAW7T,UAAY6T,EAAW7T,QAAQgU,SAAS5Y,EAAEC,SAClEuY,GAAW,KAEhB,CAACD,IAQJ,OANA3Y,qBAAU,WAGN,OAFAyD,OAAOwV,iBAAiB,QAASH,GAE1B,kBAAMrV,OAAOyV,oBAAoB,QAASJ,MAClD,CAACA,EAAOD,IAEJA,I,uECJCM,E,gIAuBG,SAAS3M,IACpB,IAAIrC,EAAkBmF,YAAYlF,KAC5B+B,EAAUmD,YAAY/K,KAC5B,EAAyB9D,2BAAjBuJ,EAAR,EAAQA,IAAKxJ,EAAb,EAAaA,QACb,EAAgCb,oBAAS,GAAzC,mBAAOiB,EAAP,KAAkB6R,EAAlB,KACQ/P,EAAS0W,YAAqE,YAAaC,IAAKC,YAAaf,KAA7G7V,KACR,EAAwC/C,qBAAxC,mBAAOzB,EAAP,KAAqBC,EAArB,KAEMqG,EAAW+P,cAEXgF,EAAapP,EAAgBgD,gBAAkBhB,EAASwB,eAAeR,cAEvEqM,EAAiB,uCAAG,WAAOC,EAAyBC,EAAcC,GAA9C,mCAAAtY,EAAA,6DACtBoR,GAAW,GACPmH,EAAkC,GAFhB,kBAKQ5P,EAAIK,UAAUwP,YAAYJ,GALlC,cAKZK,EALY,gBAMAA,EAAYC,qBAAoB,GAAM,GANtC,QAMd5D,EANc,QAONuD,IACRvD,GAASuD,GAETla,EAAQ2W,EAAQwD,EAAO,EAAI,EAAIxD,EAAQwD,EAAO,EAAI,EAC7CpO,EAAQ4K,EAAQ,EAXP,aAWU5K,EAAQ/L,GAXlB,kCAYCsa,EAAYE,eAAezO,GAZ5B,YAYV0O,EAZU,WAcFA,GAAOA,EAAE,MAdP,wDAgBd3B,EAAM,CACF4B,YAAaD,EAAGC,YAChBxX,KAAMuX,EAAGvX,KACTyX,SAAUF,EAAGE,SACbC,cAAeH,EAAGG,cAClB9Z,MAAO2Z,EAAG3Z,MAAM4M,YAGhB5M,EAAQ0J,EAAIgJ,KAAKC,MAAMG,QAAQ6G,EAAG3Z,MAAM4M,WAAY,SACxDoL,EAAIhY,MAAQA,EACZgY,EAAI5W,GAAK6J,EACT+M,EAAI+B,cAAgB,GACpB/B,EAAIgC,MAAQ,GACZhC,EAAIiC,SAAW,GACfjC,EAAIkC,gBAAkB,GAElBC,EAAWR,EAAGvX,KAAKY,MAAM,EAAG,IAChCgV,EAAIoC,OAASvB,EAAUsB,GAEP,cAAZA,GAAwC,cAAZA,EAC5BnC,EAAI+B,cAAgBJ,EAAGvX,KAAKY,MAAM2W,EAAGvX,KAAKlE,OAAS,IAEnD8Z,EAAIgC,MAAQ,KAAOL,EAAGvX,KAAKY,MAAM,GAAI,IAErB,cAAZmX,IAA0BnC,EAAIiC,SAAW,KAAON,EAAGvX,KAAKY,MAAM,KAClD,cAAZmX,IACIE,EAAMV,EAAGvX,KAAKY,MAAM,KAAKF,QAAQ,MAAO,IACxC9C,EAAQsa,SAASD,EAAK,IAC1BrC,EAAIkC,gBAAkBxQ,EAAIgJ,KAAKC,MAAMG,QAAQ9S,EAAM4M,WAAY,kBAIhEoL,EAAI5V,KACXkX,EAAiBvT,KAAKiS,GAjDR,QAWyB/M,IAXzB,+BAmDlBkH,GAAW,GACXtU,EAAgByb,GApDE,kBAqDXA,GArDW,wCAuDlBtd,QAAQwF,MAAR,MACA2Q,GAAW,GACL,IAAI2B,MAAJ,MAzDY,0DAAH,0DA8DjByG,EAAqB,uCAAG,WAAOC,GAAP,6BAAAzZ,EAAA,6DAAgCtF,EAAhC,+BAAuC,GACjE0W,GAAW,GADe,kBAGCzI,EAAIK,UAAUwP,YAAYiB,GAH3B,cAGhBC,EAHgB,gBAKAA,EAASC,QAAQhR,EAAI2I,gBALrB,wCAMF,IAAIyB,MAAM,8CANR,kBAOlB1R,QAPkB,IAOlBA,MAAMuY,UAAUhV,MAAK,SAAAC,GAAC,OAAIA,EAAE1F,QAAQ0a,sBAAwBJ,EAAgBI,uBAP1D,uBAOsF,IAAI9G,MAAM,8BAPhG,YASlB1R,EATkB,kCAUZyY,cAAiBC,UAAU,YAAa/B,IAAKC,YAAaf,IAAK,CAAE0C,UAAU,GAAD,0BAAMvY,QAAN,IAAMA,OAAN,EAAMA,EAAMuY,WAAZ,CAAuB,CAAElf,KAAMA,EAAMyE,QAASsa,OAV5G,iDAYZK,cAAiBE,UAAU,YAAahC,IAAKC,YAAaf,IAAK,CAAE0C,UAAW,CAAC,CAAElf,KAAMA,EAAMyE,QAASsa,MAZxF,eActBrI,GAAW,GAdW,mBAef,GAfe,wCAiBtBA,GAAW,GACL,IAAI2B,MAAJ,MAlBgB,0DAAH,sDAuBrBkH,EAAkB,uCAAG,gCAAAja,EAAA,0DACnBkY,EADmB,wBAEnB9G,GAAW,GAFQ,kBAIQzI,EAAIK,UAAUwP,YAAY1P,GAJlC,cAIT4Q,EAJS,gBAKoBA,EAASQ,cAL7B,cAKTC,EALS,iBAM0BT,EAASU,sBANnC,WAMTC,EANS,QAOXF,EAAqB9e,IAAKgf,EAA2Bhf,EAP1C,wBAQX8H,EAAS7F,YAAQ6c,EAAqB9e,EAAE,KACxC8H,EAAS/F,YAAgBid,EAA2Bhf,EAAE,KACtD+V,GAAW,GAVA,kBAWJ,CAAE7T,KAAM4c,EAAqB9e,EAAE,GAAIif,cAAeD,EAA2Bhf,EAAE,KAX3E,cAaf+V,GAAW,GACL,IAAI2B,MAAJ,0BAdS,wCAgBf3B,GAAW,GACL,IAAI2B,MAAJ,MAjBS,0DAAH,qDAsBlBwH,EAAc7C,sBAAW,uCAAC,WAAO8C,GAAP,qBAAAxa,EAAA,0DACxBkY,EADwB,wBAExB9G,GAAW,GAFa,SAIpBtI,EAAkBA,EAAgBgD,cAJd,SAKMnD,EAAIK,UAAUwP,YAAY1P,GALhC,cAKd2P,EALc,gBAMO9P,EAAI8R,eAAejC,YAAY1P,GANtC,UAMd4R,EANc,OAQG/R,EAAIgJ,KAAKC,MAAM+I,UAAUH,GAR5B,uBASO,IAAIzH,MAAM,+CATjB,eAWd6F,EAAKgC,8BACPjS,EAAIkS,WACJH,EAAaI,QAAQP,YAAYC,IAbjB,UAgBH/B,EAAYsC,2BAA2BjS,EAAiB8P,EAAGoC,KAhBxD,eAgBdC,EAhBc,iBAiBdA,EAAGC,sBAAsB,CAAEC,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UAjBnD,eAkBpBhK,GAAW,GAlBS,mBAmBb,GAnBa,wCAqBpBA,GAAW,GACXnW,QAAQwF,MAAR,MACM,IAAIsS,MAAM,wBAvBI,0DAAD,sDA2B5B,CAACmF,IAEEmD,EAAc3D,sBAAW,uCAAC,WAAOna,EAAcF,GAArB,2CAAA2C,EAAA,yDAA2Csb,IAA3C,iCAA0DC,IAA1D,kCACxBrD,EADwB,wBAExB9G,GAAW,GAFa,SAIpBtI,EAAkBA,EAAgBgD,cAJd,SAKMnD,EAAIK,UAAUwP,YAAY1P,GALhC,cAKd2P,EALc,iBAMO9P,EAAI8R,eAAejC,YAAY1P,GANtC,eAMd4R,EANc,iBAQOjC,EAAY+C,YARnB,WAQdC,EARc,OAQgCte,SAChDI,EAAOke,GATS,uBAUV,IAAI1I,MAAM,+CAVA,aAYhB1V,EAAeoe,GAZC,uBAaV,IAAI1I,MAAM,wDAbA,YAgBhBuI,EAhBgB,wBAiBV1C,EAAKgC,8BACPjS,EAAIkS,WACJH,EAAaI,QAAQY,kBAAkBne,IAnB3B,UAsBCkb,EAAYsC,2BAA2BjS,EAAiB8P,EAAGoC,KAtB5D,eAsBVC,EAtBU,iBAuBVA,EAAGC,sBAAsB,CAAEC,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UAvBvD,YA0BhBG,EA1BgB,wBA2BVI,EAAYf,8BACdjS,EAAIkS,WACJH,EAAaI,QAAQc,0BAA0Bve,IA7BnC,UAgCSob,EAAYsC,2BAA2BjS,EAAiB6S,EAAUX,KAhC3E,eAgCVa,EAhCU,iBAiCVA,EAAWX,sBAAsB,CAAEC,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UAjC/D,eAmCpBhK,GAAW,GAnCS,mBAoCb,GApCa,wCAsCpBA,GAAW,GACXnW,QAAQwF,MAAR,MACM,IAAIsS,MAAM,wBAxCI,0DAAD,wDA6C5B,CAACmF,IAEE4D,EAAWpE,sBAAW,uCAAC,WAAOwB,GAAP,qBAAAlZ,EAAA,0DACrBkY,EADqB,oBAErB9G,GAAW,GAFU,SAIjBtI,EAAkBA,EAAgBgD,cACXnD,EAAIgJ,KAAKC,MAAM+I,UAAUzB,GAL/B,sBAMU,IAAInG,MAAM,+CANpB,uBAQSpK,EAAIK,UAAUwP,YAAY1P,GARnC,cAQX2P,EARW,iBASU9P,EAAI8R,eAAejC,YAAY1P,GATzC,eASX4R,EATW,OAWX9B,EAAKgC,8BACPjS,EAAIkS,WACJH,EAAaI,QAAQgB,SAAS5C,IAbjB,UAgBAT,EAAYsC,2BAA2BjS,EAAiB8P,EAAGoC,KAhB3D,eAgBXC,EAhBW,iBAiBXA,EAAGC,sBAAsB,CAAEC,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UAjBtD,eAkBjBhK,GAAW,GAlBM,mBAmBV,GAnBU,wCAqBjBA,GAAW,GACXnW,QAAQwF,MAAR,MACM,IAAIsS,MAAM,sBAvBC,0DAAD,sDA2BzB,CAACmF,IAEEsD,EAAS,uCAAG,4BAAAxb,EAAA,0DACVkY,EADU,wBAEV9G,GAAW,GAFD,kBAIiBzI,EAAIK,UAAUwP,YAAY1P,GAJ3C,cAIA4Q,EAJA,OAKNtI,GAAW,GALL,SAMOsI,EAAS8B,YANhB,gFAQNpK,GAAW,GACL,IAAI2B,MAAJ,MATA,0DAAH,qDAcTgJ,EAAerE,sBAAW,uCAAC,WAAOsE,EAAkB9C,GAAzB,qBAAAlZ,EAAA,0DACzBkY,EADyB,oBAEzB9G,GAAW,GAFc,SAIrBtI,EAAkBA,EAAgBgD,cACXnD,EAAIgJ,KAAKC,MAAM+I,UAAUqB,EAASlQ,eALpC,sBAMM,IAAIiH,MAAM,+CANhB,uBAQKpK,EAAIK,UAAUwP,YAAY1P,GAR/B,cAQf2P,EARe,iBASM9P,EAAI8R,eAAejC,YAAY1P,GATrC,eASf4R,EATe,OAWf9B,EAAKgC,8BACPjS,EAAIkS,WACJH,EAAaI,QAAQiB,aAAaC,EAASlQ,cAAeoN,EAASpN,gBAblD,UAgBJ2M,EAAYsC,2BAA2BjS,EAAiB8P,EAAGoC,KAhBvD,eAgBfC,EAhBe,OAiBrB7J,GAAW,GAjBU,UAkBf6J,EAAGC,sBAAsB,CAAEC,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UAlBlD,gEAoBrBhK,GAAW,GACXnW,QAAQwF,MAAR,MACM,IAAIsS,MAAM,yBAtBK,0DAAD,wDAyB7B,CAACmF,IAIEhN,EAAiB,uCAAG,WAAOkN,EAAyBlM,EAAmB/P,EAAgByP,GAAnE,uBAAA5L,EAAA,+EAGS2I,EAAI8R,eAAejC,YAAYJ,GAHxC,UAGZsC,EAHY,OAKdzb,EAAQ0J,EAAIgJ,KAAKC,MAAMwJ,MAAMjf,EAAQ,SAErCyP,GAAQxG,IAAMtL,KAPA,iCAOqB6O,EAAIK,UAAUwJ,eAPnC,OAOMyJ,EAPN,kCAQTrQ,GAAQxG,IAAMpL,MAAQ4R,GAAQxG,IAAMnL,KAR3B,kCAQgD0O,EAAIK,UAAUC,eAAe2C,EAAKlR,MARlF,QAQiCuhB,EARjC,gDASEtT,EAAIK,UAAUuI,SAAS3F,EAAK6N,iBAT9B,QASbwC,EATa,sBAWZC,EAAUD,EAAOE,SAASjQ,EAAWjN,GACrCmd,EAAMxB,8BACRjS,EAAIkS,WACJH,EAAaI,QAAQ5P,kBAAkB+Q,EAAO9c,QAAS,IAAKkd,gCAAsBH,EAAQlB,IAAIsB,eAdhF,UAiBZF,EAAIlB,sBAAsB,CAAEqB,KAAMpd,EAAUgc,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UAjBtE,iCAkBX,CAAE1O,QAAS,WAlBA,wCAoBZ,IAAIqG,MAAJ,MApBY,0DAAH,4DAwBjByJ,EAAiB,uCAAG,WAAOpE,EAAyBqE,GAAhC,iBAAAzc,EAAA,+EAES2I,EAAI8R,eAAejC,YAAYJ,GAFxC,cAEZsC,EAFY,OAIZ9B,EAAKgC,8BACPjS,EAAIkS,WACJH,EAAaI,QAAQ4B,mBAAmBD,IAN1B,SASZ7D,EAAGsC,sBAAsB,CAAEqB,KAAMpd,EAAUgc,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UATrE,gCAWX,CAAE1O,QAAS,YAXA,wCAaZ,IAAIqG,MAAJ,MAbY,0DAAH,wDAiBjB4J,EAAkB,uCAAG,WAAOvE,EAAyBqE,GAAhC,iBAAAzc,EAAA,+EAGQ2I,EAAI8R,eAAejC,YAAYJ,GAHvC,cAGbsC,EAHa,OAKb9B,EAAKgC,8BACPjS,EAAIkS,WACJH,EAAaI,QAAQ6B,mBAAmBF,IAPzB,SAUb7D,EAAGsC,sBAAsB,CAAEqB,KAAMpd,EAAUgc,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UAVpE,gCAYZ,CAAE1O,QAAS,YAZC,wCAcb,IAAIqG,MAAJ,MAda,0DAAH,wDAkBlB6J,EAAkB,uCAAG,WAAOxE,EAAyBqE,GAAhC,iBAAAzc,EAAA,+EAEQ2I,EAAI8R,eAAejC,YAAYJ,GAFvC,cAEbsC,EAFa,OAIb9B,EAAKgC,8BACPjS,EAAIkS,WACJH,EAAaI,QAAQ8B,mBAAmBH,IANzB,SASb7D,EAAGsC,sBAAsB,CAAEqB,KAAMpd,EAAUgc,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UATpE,gCAWZ,CAAE1O,QAAS,YAXC,wCAab,IAAIqG,MAAJ,MAba,0DAAH,wDAiBlB4F,EAAc,uCAAG,WAAOP,EAAyBqE,GAAhC,2BAAAzc,EAAA,+EAEW2I,EAAIK,UAAUwP,YAAYJ,GAFrC,cAETK,EAFS,gBAIAA,EAAYE,eAAeY,SAASkD,IAJpC,cAIX7D,EAJW,OAMfiE,EAAW,CACPxc,GAAIkZ,SAASkD,GACb5D,YAAaD,EAAGC,YAChBxX,KAAMuX,EAAGvX,KACTyX,SAAUF,EAAGE,SACbC,cAAeH,EAAGG,cAClB9Z,MAAO2Z,EAAG3Z,MAAM4M,YAGhB5M,EAAQ0J,EAAIgJ,KAAKC,MAAMG,QAAQ6G,EAAG3Z,MAAM4M,WAAY,SACxDgR,EAAS5d,MAAQA,EACjB4d,EAAS7D,cAAgB,GACzB6D,EAAS5D,MAAQ,GACjB4D,EAAS3D,SAAW,GACpB2D,EAAS1D,gBAAkB,GAEvBC,EAAWR,EAAGvX,KAAKY,MAAM,EAAG,IAChC4a,EAASxD,OAASvB,EAAUsB,GAEZ,cAAZA,GAAwC,cAAZA,EAC5ByD,EAAS7D,cAAgBJ,EAAGvX,KAAKY,MAAM2W,EAAGvX,KAAKlE,OAAS,IAExD0f,EAAS5D,MAAQ,KAAOL,EAAGvX,KAAKY,MAAM,GAAI,IAE1B,cAAZmX,IAA0ByD,EAAS3D,SAAW,KAAON,EAAGvX,KAAKY,MAAM,KACvD,cAAZmX,IACIE,EAAMV,EAAGvX,KAAKY,MAAM,KAAKF,QAAQ,MAAO,IACxC9C,EAAQsa,SAASD,EAAK,IAC1BuD,EAAS1D,gBAAkBxQ,EAAIgJ,KAAKC,MAAMG,QAAQ9S,EAAM4M,WAAY,kBAIrEgR,EAASxb,KAtCD,kBAuCR,CAAEwb,aAvCM,wCAyCT,IAAI9J,MAAJ,MAzCS,0DAAH,wDA6CpB,MAAO,CAAEyG,wBAAuBnY,OAAM9B,YAAW1C,eAAcsb,oBAAmB2D,WAAUC,eAAcV,cAAad,cAAaiB,YAAWvB,qBAAoBtB,iBAAgBzN,oBAAmBsR,oBAAmBG,qBAAoBC,uB,SA3ZrO9E,K,4BAAAA,E,6BAAAA,E,yBAAAA,E,yBAAAA,E,0CAAAA,E,mCAAAA,M,sCCDL,IAAKgF,ECVAC,EAYApS,EAWAqS,EAWAC,EAWAC,EAKAC,EAQAC,EAWAC,E,iJD3DAP,K,YAAAA,E,YAAAA,E,YAAAA,E,UAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,eAAAA,M,cCVAC,K,iCAAAA,E,6BAAAA,E,uBAAAA,E,yBAAAA,E,uBAAAA,E,yBAAAA,E,uBAAAA,E,yBAAAA,E,SAAAA,M,cAYApS,K,YAAAA,E,YAAAA,E,YAAAA,E,UAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,eAAAA,M,cAWAqS,K,YAAAA,E,YAAAA,E,YAAAA,E,UAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,eAAAA,M,cAWAC,K,YAAAA,E,YAAAA,E,YAAAA,E,UAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,eAAAA,M,cAWAC,K,YAAAA,E,aAAAA,M,cAKAC,K,UAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,eAAAA,M,cAQAC,K,YAAAA,E,YAAAA,E,YAAAA,E,UAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,eAAAA,M,KAWAC,M,IAEL,IAAMjY,EAAe,CAC3BtL,KAAM,CACLY,KAAMsiB,EAAgBljB,KACtBwL,QAASyX,EAASjjB,KAClBmF,MAAO0L,EAAU7Q,KACjBwjB,QAASL,EAAwBnjB,KACjCyjB,UAAWH,EAAetjB,KAC1B0jB,aAAcV,EAAuBhjB,KACrC2f,gBAAiB,8CAElBzf,KAAM,CACLU,KAAMsiB,EAAgBhjB,KACtBsL,QAASyX,EAAS/iB,KAClBiF,MAAO0L,EAAU3Q,KACjBsjB,QAASL,EAAwBjjB,KACjCujB,UAAWH,EAAepjB,KAC1BwjB,aAAcV,EAAuB9iB,KACrCyf,gBAAiB,8CAElBxf,KAAM,CACLS,KAAMsiB,EAAgB/iB,KACtBqL,QAASyX,EAAS9iB,KAClBgF,MAAO0L,EAAU1Q,KACjBqjB,QAASL,EAAwBhjB,KACjCsjB,UAAWH,EAAenjB,KAC1BujB,aAAcV,EAAuB7iB,KACrCwf,gBAAiB,8CAElBvf,IAAK,CACJQ,KAAMsiB,EAAgB9iB,IACtBoL,QAASyX,EAAS7iB,IAClB+E,MAAO0L,EAAUzQ,IACjBojB,QAASL,EAAwB/iB,IACjCqjB,UAAWH,EAAeljB,IAC1BsjB,aAAcV,EAAuB5iB,IACrCuf,gBAAiB,8CAElBtf,IAAK,CACJO,KAAMsiB,EAAgB7iB,IACtBmL,QAASyX,EAAS5iB,IAClB8E,MAAO0L,EAAUxQ,IACjBmjB,QAASL,EAAwB9iB,IACjCojB,UAAWH,EAAejjB,IAC1BqjB,aAAcV,EAAuB3iB,IACrCsf,gBAAiB,8CAElBrf,KAAM,CACLM,KAAMsiB,EAAgB5iB,KACtBkL,QAASyX,EAAS3iB,KAClB6E,MAAO0L,EAAUvQ,KACjBkjB,QAASL,EAAwB7iB,KACjCmjB,UAAWH,EAAehjB,KAC1BojB,aAAcV,EAAuB1iB,KACrCqf,gBAAiB,8CAElBpf,KAAM,CACLK,KAAMsiB,EAAgB3iB,KACtBiL,QAASyX,EAAS1iB,KAClB4E,MAAO0L,EAAUtQ,KACjBijB,QAASL,EAAwB5iB,KACjCkjB,UAAWH,EAAe/iB,KAC1BmjB,aAAcV,EAAuBziB,KACrCof,gBAAiB,8CAElBnf,MAAO,CACNI,KAAMsiB,EAAgB1iB,MACtBgL,QAASyX,EAASziB,MAClB2E,MAAO0L,EAAUrQ,MACjBgjB,QAASL,EAAwB3iB,MACjCijB,UAAWH,EAAe9iB,MAC1BkjB,aAAcV,EAAuBxiB,MACrCmf,gBAAiB,gD,uLCpIJ,SAASpa,IACpB,MAAyBD,2BAAjBuJ,EAAR,EAAQA,IACR,GADA,EAAaxJ,QACab,sBAA1B,mBAAOmC,EAAP,KAAcgd,EAAd,KACA,EAAwBnf,qBAAxB,mBAAOkB,EAAP,KAAauR,EAAb,KACA,EAAgCzS,oBAAkB,GAAlD,mBAAOiB,EAAP,KAAkB6R,EAAlB,KACMjO,EAAW+P,cAGX5T,EAAW,uCAAG,WAAOH,EAAiBZ,EAAkBmf,GAA1C,iCAAA1d,EAAA,6DAChBoR,GAAW,GADK,kBAGQuM,YAAQxe,EAASZ,GAHzB,cAGNqf,EAHM,gBAIwBD,YAAQpf,EAAUqf,GAJ1C,UAIN/J,EAJM,QAMR6J,EANQ,kCAOeG,YAA+B7F,IAAM4F,EAAQ,aAAcrf,GAP1E,QAORuf,EAPQ,gDASeC,YAA2B/F,IAAM4F,EAAQ,aAAcrf,GATtE,QASRuf,EATQ,kBAYNte,EAAOse,EAAete,MAExBke,EAdQ,kCAegB,oCAfhB,eAeFM,EAfE,OAiBFpF,EAAKgC,8BACPjS,EAAIkS,WACH,IAAIlS,EAAIgJ,KAAKsM,IAAIC,SAASF,EAASG,KAAaC,OAAO,CAAE/c,KAAM2c,EAASK,YAnBrE,UAqBezF,EAAGsC,sBAAsB,CAAEqB,KAAMpd,IArBhD,eAqBFmf,EArBE,iBAuBFxE,cAAwBE,UAAU,QAASxa,EAAK0X,IAAK,CACvD7W,GAAIb,EAAK0X,IACT/X,QAASA,EACTsa,gBAAiB6E,EAAS7E,gBAC1BrZ,YAAame,YAAeb,EAActd,YAAayT,GACvDnZ,KAAM6jB,YAAeb,EAAchjB,KAAMmZ,GACzC1T,QAASoe,YAAeb,EAAcvd,QAAS0T,GAC/CvT,WAAW,IAAIC,MAAOC,YA9BlB,yBAgCFsZ,cAAqEE,UAAU,YAAaxa,EAAK0X,IAAK,CACxG0C,UAAW,KAjCP,QAmCRzW,EAASqb,YAAW,CAChBlS,eAAgBnN,EAChBye,MAAOA,EACP1G,IAAK1X,EAAK0X,IACVuC,gBAAiB6E,EAAS7E,gBAC1BrZ,YAAW,OAAEsd,QAAF,IAAEA,OAAF,EAAEA,EAAetd,YAC5BD,QAAO,OAAEud,QAAF,IAAEA,OAAF,EAAEA,EAAevd,QACxBzF,KAAI,OAAEgjB,QAAF,IAAEA,OAAF,EAAEA,EAAehjB,KACrBmZ,sBAAuBA,KAE3B1Q,EAASsb,YAActf,IA7Cf,yCA+CmBuf,YAAqB,QAASlf,EAAK0X,KA/CtD,WA+CFyH,EA/CE,8BAiDE,IAAI5L,MAAM,oBAjDZ,QAmDR5P,EAASqb,YAAW,CAChBlS,eAAgBnN,EAChBye,MAAOA,EACP1G,IAAK1X,EAAK0X,IACVuC,gBAAiBkF,EAAalF,gBAC9BrZ,YAAayQ,YAAc,OAAC8N,QAAD,IAACA,OAAD,EAACA,EAAcve,YAAayT,GACvD1T,QAAS0Q,YAAc,OAAC8N,QAAD,IAACA,OAAD,EAACA,EAAcxe,QAAS0T,GAC/CnZ,KAAMmW,YAAc,OAAC8N,QAAD,IAACA,OAAD,EAACA,EAAcjkB,KAAMmZ,GACzCA,sBAAuBA,KAE3B1Q,EAASsb,YAActf,IA7Df,eAgEZ4R,EAAQvR,GACR4R,GAAW,GAjEC,kBAkEL5R,GAlEK,wCAoENof,EAAY,KAAMC,KAClBC,EAAe,KAAMpS,QAC3B+Q,EAAS,CAAEmB,YAAWE,iBACtB1N,GAAW,GACL,IAAI2B,MAAM+L,GAxEJ,0DAAH,0DA4EjB,MAAO,CAAEtf,OAAMiB,QAAOnB,cAAaC,e,8FCrCxB4L,IApDK,WAChB,IAAIrC,EAAkBmF,YAAYlF,KAC5B+B,EAAUmD,YAAY/K,KACtB6b,EAAa9Q,YAAYzQ,KAE/B,EAA4Bc,qBAA5B,mBAAO0gB,EAAP,KAAeC,EAAf,KACA,EAA8C3gB,qBAA9C,mBAAO4gB,EAAP,KAAwBC,EAAxB,KAKA,EAAwIC,cAAhIviB,EAAR,EAAQA,aAAcsb,EAAtB,EAAsBA,kBAAmB5Y,EAAzC,EAAyCA,UAAWuc,EAApD,EAAoDA,SAAUC,EAA9D,EAA8DA,aAAcV,EAA5E,EAA4EA,YAAad,EAAzF,EAAyFA,YAAaiB,EAAtG,EAAsGA,UAAWvB,EAAjH,EAAiHA,mBAE3G/B,EAAapP,EAAgBgD,gBAAkBhB,EAASwB,eAAeR,cAEvE3I,EAAW+P,cAEXmM,EAAW3H,uBAAY,WAA+D,IAA9D4H,EAA6D,wDAAxBjH,EAAwB,uDAAjB,EAAGC,EAAc,uDAAP,GAC3EgH,GAA6Bnc,EAASrG,YAAgB,KAC3Dqb,EAAkBrP,EAAiBuP,EAAMC,KAC1C,CAACJ,EAAYpP,IAEhBnK,qBAAU,WACF9B,IAC4B,IAAxBA,EAAaM,OACbgG,EAASrG,iBAAgB/C,IAClB,OAACglB,QAAD,IAACA,KAAYna,MAAK,SAAAC,GAAC,aAAIA,EAAExE,MAAF,UAASxD,EAAaA,EAAaM,OAAS,UAA5C,aAAS,EAAuCkD,QAC9E8C,EAASrG,YAAgBD,OAGlC,CAACA,IAEJ8B,qBAAU,WACFuZ,IACAsD,IAAYjX,MAAK,SAACya,GAAD,OAAYC,EAAUD,MACvCK,IACApF,IAAqB1V,MAAK,SAAC2a,GAAD,OAAqBC,EAAmBD,SAEvE,CAACpW,IAWJ,MAAO,CAAEjM,eAAcqb,aAAY3Y,YAAW8f,WAAUxW,QATxC,WAA+D,IAA9DyW,EAA6D,wDAAxBjH,EAAwB,uDAAjB,EAAGC,EAAc,uDAAP,GACnE+G,EAASC,EAA6BjH,EAAMC,GAG5C2B,KAK6D+E,SAAQE,kBAAiBpD,WAAUC,eAAcV,cAAad,iB,kJC5CtHgF,EAAiB,CAC1BC,aAAc,aACdrD,SAAU,aACVsD,oBAAqB,aACrBC,QAAS,aACTC,aAAc,aACdC,KAAM,cAyEJC,EAAc,SAACC,GACjB,GAAIA,EAAM9d,WAAWud,EAAeC,cAAe,CAC/C,IAAMO,EAAMR,EAAeC,aAAariB,OACxC,MAAO,CACHkc,OAAQ,eACRhZ,GAAIkf,EAAeC,aACnBjD,KAAMuD,EAAM7d,MAAM8d,EAAKA,EAAM,IAAIC,UAAU,IAC3ClgB,GAAIggB,EAAM7d,MAAM8d,EAAM,GAAK,GAAIA,EAAM,GAAK,GAAK,IAAIC,UAAU,IAC7D7jB,OAAQ8jB,4BAAkB,KAAOH,EAAM7d,MAAM8d,EAAM,GAAK,GAAK,GAAIA,EAAM,GAAK,GAAK,GAAK,KAAKlU,YAE5F,GAAIiU,EAAM9d,WAAWud,EAAepD,UAAW,CAClD,IAAM4D,EAAMR,EAAepD,SAAShf,OACpC,MAAO,CACHkc,OAAQ,WACRhZ,GAAIkf,EAAepD,SACnBrc,GAAIggB,EAAM7d,MAAM8d,EAAKA,EAAM,IAAIC,UAAU,IACzC7jB,OAAQ8jB,4BAAkB,KAAOH,EAAM7d,MAAM8d,EAAM,GAAIA,EAAM,GAAK,KAAKlU,YAExE,GAAIiU,EAAM9d,WAAWud,EAAeK,MAAO,CAC9C,IAAMG,EAAMR,EAAeK,KAAKziB,OAC1Bb,EAAoBgL,OAAOoD,OAAOtF,KACxC,MAAO,CACHiU,OAAQ,OACRhZ,GAAIkf,EAAeK,KACnBM,SAAUD,4BAAkB,KAAOH,EAAM7d,MAAM8d,EAAKA,EAAM,KAAKlU,WAC/DsU,aAAcF,4BAAkB,KAAOH,EAAM7d,MAAM8d,EAAM,GAAIA,EAAM,GAAK,KAAKlU,WAC7EuU,OAAQ9jB,EAAMlB,MAAK,SAAAyJ,GAAC,OAAIA,EAAE4U,gBAAgB3N,gBAAkB,KAAOgU,EAAM7d,MAAM6d,EAAM3iB,OAAS,GAAK,GAAI2iB,EAAM3iB,OAAS,IAAI6iB,UAAU,IAAIlU,iBACxIuU,WAAY/jB,EAAMlB,MAAK,SAAAyJ,GAAC,OAAIA,EAAE4U,gBAAgB3N,gBAAkB,KAAOgU,EAAM7d,MAAM6d,EAAM3iB,OAAS,GAAI2iB,EAAM3iB,QAAQ6iB,UAAU,IAAIlU,kBAEnI,GAAIgU,EAAM9d,WAAWud,EAAeI,cAAe,CAAC,IAAD,aAC1CJ,EAAeI,aAAaxiB,OAKxC,IALA,IACMmjB,EAAWR,EAAMje,MAAM,YACvBvF,EAAQ,GAEVikB,EAAY,EACPrW,EAAQ,EAAGA,EAAQoW,EAASnjB,OAAS,EAAG+M,IAC7C5N,EAAM0I,KAAK,CAAEwb,YAAalZ,OAAOoD,OAAOtF,KAAOhK,MAAK,SAAAyJ,GAAC,OAAIA,EAAE4U,gBAAgB3N,gBAAkB,KAAOgU,EAAM7d,MAAM,IAAMse,EAAW,IAAMA,EAAY,IAAIP,UAAU,IAAIlU,mBACrKyU,GAAa,GAEjB,IAAK,IAAIrW,EAAQ,EAAGA,EAAQoW,EAASnjB,OAAQ+M,IAAS,CAClD,IAAMqS,EAAO+D,EAASpW,GAAOjI,MAAM,EAAG,IAAI+d,UAAU,IAC9ClgB,EAAKwgB,EAASpW,GAAOjI,MAAM,GAAI,KAAK+d,UAAU,IAC9C7jB,EAAS8jB,4BAAkB,KAAOK,EAASpW,GAAOjI,MAAM,IAAK,MAAM4J,WACzEvP,EAAM4N,EAAQ,GAAd,2BACO5N,EAAM4N,EAAQ,IADrB,IAEIqS,OACAzc,KACA3D,WAKR,MAAM,CAAN,EAAO,CACHkd,OAAQ,eACRhZ,GAAIkf,EAAeI,aACnBc,SAAUnkB,IA1BwC,uCA+B/CokB,IAlGe,WAA2E,IAC/F7jB,EAAeoR,YAAYjR,KAEjC,OAAO6C,mBAAQ,WACX,GAAIhD,EAAc,CACd,IAAIkP,EAAsB,YAAOlP,EAAakP,QAExC4U,EAAgD,GAEhDC,EAAcpZ,IAAEuE,GAAQtE,QAAQ,QAAQxI,QAsB9C,OArBoBqI,OAAOoD,OAAOkW,GAAa9e,QAAO,SAAC6F,EAAqB1I,GACxE,IAAM4hB,EAAOrZ,IAAEvI,GAAO6hB,OAAM,SAACC,GAAD,OAAOjZ,WAAWiK,kBAAQgP,EAAE9hB,MAAO,aAI/D,OAHAhE,QAAQC,IAAI2lB,GACRA,GAAMlZ,EAAI3C,KAAK6b,GAEZlZ,IACR,IAESvB,SAAQ,SAAC4a,GACjB,IAAMlB,EAAQkB,EAAYlB,MACpBmB,EAAYpB,EAAYC,IACjB,OAATmB,QAAS,IAATA,OAAA,EAAAA,EAAW5gB,MAAOkf,EAAeK,MAAQ3kB,QAAQC,IAAI+lB,GACrDA,GACAN,EAAqB3b,KAArB,aACIkc,QAASF,EACTpN,KAAMoN,EAAYpN,MACfqN,OAKR,CAACN,EAAsB9jB,GAElC,MAAO,KACR,CAACA,M,4CC/EOskB,IAPA,SAAC,GAA8D,IAA5DzmB,EAA2D,EAA3DA,KAAM2D,EAAqD,EAArDA,UAEpB,OAAO,qBAAKA,UAAS,UAAKA,EAAL,0GAAd,SACF3D,EAAKuH,MAAM,EAAG,O,iCCJvB,gFAOamf,EAAc3mB,YAAY,CACtCC,KAAM,UACNC,aANoB,CACpB0mB,YAAY,GAMZzmB,SAAU,CACT0mB,QAAS,SAACxmB,EAAOC,GAChBD,EAAMumB,WAAatmB,EAAOC,YAKfsmB,EAAWF,EAAY5kB,QAAvB8kB,QAEDC,EAAe,SAACzmB,GAAD,OAAsBA,EAAM8T,QAEzCwS,MAAf,S,iCCrBO,IAAKI,EASAC,EAMAC,EAfZ,sG,SAAYF,K,yBAAAA,E,yBAAAA,E,+BAAAA,E,mCAAAA,E,2BAAAA,E,aAAAA,M,cASAC,O,WAAAA,I,aAAAA,I,gBAAAA,M,cAMAC,K,sBAAAA,E,kBAAAA,E,qBAAAA,M,mdCdCC,EADIvf,OAAOwf,SAASC,SACD5V,SAAS,aAAe,2BAA6B,OCIxEgD,EAAa6S,YAAU,CAChC5S,YAAa,aACb6S,UAAWC,YAAe,CACtBC,QAASN,EACTO,eAAgB,SAACC,EAAD,GAA4B,IAAD,IACjCvE,EAAK,WAAIwE,EADwB,EAAfA,YACgBtX,eAA7B,iBAAG,EAAmCtL,YAAtC,aAAG,EAAyCoe,MAIvD,OAHIA,GACAuE,EAAQE,IAAI,gBAAZ,iBAAuCzE,IAEpCuE,KAGfG,UAAW,SAACC,GAAD,MAAc,CACrBC,OAAQD,EAAQE,SAAiC,CAC7CC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,kBACLmJ,OAAQ,OACRsJ,KAAMthB,MAIduhB,cAAeL,EAAQE,SAA+C,CAClEC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAI,kBACJmJ,OAAQ,OACRsJ,KAAMthB,MAIdwhB,eAAgBN,EAAQE,SAAiD,CACrEC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAI,0BACJmJ,OAAQ,OACRsJ,KAAMthB,MAIdyhB,aAAcP,EAAQE,SAA6C,CAC/DC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAI,mBACJmJ,OAAQ,OACRsJ,KAAMthB,MAIdzD,OAAQ2kB,EAAQE,SAAiC,CAC7CC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAI,mBACJmJ,OAAQ,OACRsJ,KAAMthB,MAId0hB,eAAgBR,EAAQE,SAA4B,CAChDC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAI,WACJmJ,OAAQ,MACRsJ,KAAMthB,MAGd2hB,QAAST,EAAQE,SAAiC,CAC9CC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAI,mBACJmJ,OAAQ,QACRsJ,KAAMthB,MAGdb,QAAS+hB,EAAQG,MAA8B,CAC3CA,MAAO,iBAAO,CACVxS,IAAI,oBAGZ+S,WAAYV,EAAQG,MAAoF,CACpGA,MAAO,iBAAO,CACVxS,IAAI,2BAO4DgT,GAAsKjU,EAAvOkU,oBAAuOlU,EAAlNmU,mBAAkNnU,EAA9LoU,uBAA8LpU,EAAtKiU,oBCjFnE/T,GDiFyOF,EAAlJqU,kBAAkJrU,EAA/HsU,yBAA+HtU,EAArGuU,0BAAqGvU,EAA1EwU,wBAA0ExU,EAAjDyU,kBAAiDzU,EAA9B0U,0BCjF7L7B,YAAU,CACjC5S,YAAa,cACb6S,UAAWC,YAAe,CACtBC,QAASN,EACTO,eAAgB,SAACC,EAAD,GAA4B,IAAD,IACjCvE,EAAK,WAAIwE,EADwB,EAAfA,YACgBtX,eAA7B,iBAAG,EAAmCtL,YAAtC,aAAG,EAAyCoe,MAIvD,OAHIA,GACAuE,EAAQE,IAAI,gBAAZ,iBAAuCzE,IAEpCuE,KAGfG,UAAW,SAACC,GAAD,MAAc,CACrBqB,eAAgBrB,EAAQE,SAAiD,CACrEC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,mBACLmJ,OAAQ,OACRsJ,KAAMthB,MAIdwiB,YAAatB,EAAQG,MAA6C,CAC9DA,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAI,sBACJ4T,OAAQziB,MAIhB0iB,eAAgBxB,EAAQE,SAAuB,CAC3CC,MAAO,SAACriB,GAAD,MAAS,CACZ6P,IAAI,aAAD,OAAe7P,GAClBgZ,OAAQ,kBC/BXhK,GDuCgFF,EAA9E6U,0BAA8E7U,EAAnD8U,oBAAmD9U,EAA9B+U,0BCvCxCpC,YAAU,CAC/B5S,YAAa,UACb6S,UAAWC,YAAe,CACxBC,QAASN,EACTO,eAAgB,SAACC,EAAD,GAA4B,IAAD,IACnCvE,EAAK,WAAIwE,EAD0B,EAAfA,YACctX,eAA7B,iBAAG,EAAmCtL,YAAtC,aAAG,EAAyCoe,MAIvD,OAHIA,GACFuE,EAAQE,IAAI,gBAAZ,iBAAuCzE,IAElCuE,KAGXG,UAAW,SAACC,GAAD,MAAc,CACvB4B,WAAY5B,EAAQE,SAAyC,CAC3DC,MAAO,SAACrhB,GAAD,MAAW,CAChB6O,IAAK,eACLmJ,OAAQ,OACRsJ,KAAMthB,MAIV+iB,SAAU7B,EAAQG,MAAkC,CAClDA,MAAO,SAACrhB,GAAD,MAAW,CAChB6O,IAAI,kBACJ4T,OAAQziB,MAIZgjB,oBAAqB9B,EAAQG,MAAwD,CACnFA,MAAO,SAACrhB,GAAD,MAAW,CAChB6O,IAAI,8BACJ4T,OAAQziB,MAIZijB,WAAY/B,EAAQE,SAAsB,CACxCC,MAAO,SAACriB,GAAD,MAAS,CACd6P,IAAI,SAAD,OAAW7P,GACdgZ,OAAQ,aAIZkL,WAAYhC,EAAQE,SAA+D,CACjFC,MAAO,gBAAGriB,EAAH,EAAGA,GAAIsiB,EAAP,EAAOA,KAAP,MAAmB,CACxBzS,IAAI,SAAD,OAAW7P,GACdgZ,OAAQ,QACRsJ,KAAMA,WC9CDpT,GDqD8JF,EAA5JmV,sBAA4JnV,EAArIoV,qBAAqIpV,EAA/GqV,gCAA+GrV,EAA9EsV,4BAA8EtV,EAAjDuV,sBAAiDvV,EAA1BwV,sBCrDnH/C,YAAU,CACpC5S,YAAa,iBACb4V,kBAAmB,EACnB/C,UAAWC,YAAe,CACtBC,QAASN,EACTO,eAAgB,SAACC,EAAD,GAA4B,IAAD,IACjCvE,EAAK,WAAIwE,EADwB,EAAfA,YACgBtX,eAA7B,iBAAG,EAAmCtL,YAAtC,aAAG,EAAyCoe,MAIvD,OAHIA,GACAuE,EAAQE,IAAI,gBAAZ,iBAAuCzE,IAEpCuE,KAGfG,UAAW,SAACC,GAAD,MAAc,CACrBwC,WAAYxC,EAAQG,MAAgC,CAChDA,MAAO,iBAAO,CACVxS,IAAK,2BAGb8U,cAAezC,EAAQG,MAA2B,CAC9CA,MAAO,iBAAO,CACVxS,IAAK,4BAGb+U,SAAU1C,EAAQE,SAAqC,CACnDC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,wBACLmJ,OAAQ,OACRsJ,KAAMthB,MAId6jB,gBAAiB3C,EAAQE,SAAmD,CACxEC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,8BACLmJ,OAAQ,OACRsJ,KAAMthB,MAGd8jB,aAAc5C,EAAQE,SAA2C,CAC7DC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,2BACLmJ,OAAQ,OACRsJ,KAAMthB,MAGd+jB,yBAA0B7C,EAAQE,SAAwC,CACtEC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,4BACLmJ,OAAQ,OACRsJ,KAAMthB,WClDTiO,GDyDmNC,EAAjN8V,mBAAiN9V,EAA7L+V,uBAA6L/V,EAArKgW,0BAAqKhW,EAA1IiW,sBAA0IjW,EAAlHkW,oBAAkHlW,EAA7FmW,2BAA6FnW,EAAjEoW,wBAAiEpW,EAAxCqW,oCCzD3J9D,YAAU,CACnC5S,YAAa,gBACb6S,UAAWC,YAAe,CACtBC,QAASN,EACTO,eAAgB,SAACC,EAAD,GAA4B,IAAD,IACjCvE,EAAK,WAAIwE,EADwB,EAAfA,YACgBtX,eAA7B,iBAAG,EAAmCtL,YAAtC,aAAG,EAAyCoe,MAIvD,OAHIA,GACAuE,EAAQE,IAAI,gBAAZ,iBAAuCzE,IAEpCuE,KAGfG,UAAW,SAACC,GAAD,MAAc,CACrBsD,UAAWtD,EAAQE,SAAuC,CACtDC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAI,mBACJmJ,OAAQ,OACRsJ,KAAMthB,MAIdykB,WAAYvD,EAAQG,MAA0D,CAC1EA,MAAO,gBAAGriB,EAAH,EAAGA,GAAIyjB,EAAP,EAAOA,OAAP,MAAqB,CACxB5T,IAAI,uBAAD,OAAyB7P,GAC5ByjB,OAAQA,MAIhBiC,UAAWxD,EAAQG,MAAgC,CAC/CA,MAAO,SAACriB,GAAD,MAAS,CACZ6P,IAAI,gBAAD,OAAkB7P,OAI7B2lB,aAAczD,EAAQE,SAAuB,CACzCC,MAAO,SAACriB,GAAD,MAAS,CACZ6P,IAAI,gBAAD,OAAkB7P,GACrBgZ,OAAQ,aAIhB4M,aAAc1D,EAAQE,SAA6C,CAC/DC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAI,eACJmJ,OAAQ,MACRsJ,KAAMthB,WC9CTmO,GDqDgJF,EAA9I4W,qBAA8I5W,EAAxH6W,sBAAwH7W,EAAjG8W,mBAAiG9W,EAA7E+W,uBAA6E/W,EAArDgX,wBAAqDhX,EAA5BiX,wBCrDpGzE,YAAU,CACtCC,UAAWC,YAAe,CACzBC,QAAS,kCAEVK,UAAW,SAACC,GAAD,MAAc,CACxBiE,gBAAiBjE,EAAQG,MAA+B,CACvDA,MAAO,SAACrhB,GAAD,MAAW,CACjB6O,IAAK,0CAA0C7O,MAGjDolB,qBAAsBlE,EAAQG,MAA+B,CAC5DA,MAAO,SAACrhB,GAAD,MAAW,CACjB6O,IAAK,+CAA+C7O,WAMhBkS,GAAgG/D,EAAzHkX,wBAAyHlX,EAAhG+D,6BCjB3BnE,GDiB2HI,EAAnEmX,iCAAmEnX,EAAjCoX,6BCjBhF9E,YAAU,CAC7BgD,kBAAmB,EACnB5V,YAAa,UACb6S,UAAWC,YAAe,CACtBC,QAASN,EACTO,eAAgB,SAACC,EAAD,GAA4B,IAAD,IACjCvE,EAAK,WAAIwE,EADwB,EAAfA,YACgBtX,eAA7B,iBAAG,EAAmCtL,YAAtC,aAAG,EAAyCoe,MAIvD,OAHIA,GACAuE,EAAQE,IAAI,gBAAZ,iBAAuCzE,IAEpCuE,KAGfG,UAAW,SAACC,GAAD,MAAc,CACrBsE,0BAA2BtE,EAAQE,SAAqD,CACpFC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,gCACLmJ,OAAQ,OACRsJ,KAAMthB,MAGdylB,UAAWvE,EAAQE,SAAmC,CAClDC,MAAO,SAACrhB,GAAD,MAAU,CACb6O,IAAK,oBACLmJ,OAAQ,OACRsJ,KAAMthB,WCxBToO,GD8B+DL,EAA9D2X,qCAA8D3X,EAAxB4X,qBC9BzBlF,YAAU,CACjC5S,YAAa,cACb4V,kBAAmB,EACnB/C,UAAWC,YAAe,CACtBC,QAASN,EACTO,eAAgB,SAACC,EAAD,GAA4B,IAAD,IACjCvE,EAAK,WAAIwE,EADwB,EAAfA,YACgBtX,eAA7B,iBAAG,EAAmCtL,YAAtC,aAAG,EAAyCoe,MAIvD,OAHIA,GACAuE,EAAQE,IAAI,gBAAZ,iBAAuCzE,IAEpCuE,GAEX8E,KAAM,SAEV3E,UAAW,SAACC,GAAD,MAAc,CAErB2E,mBAAoB3E,EAAQG,MAAgD,CACxEA,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,qBAAuB7O,EAAKlC,YAKzCgoB,cAAe5E,EAAQE,SAAuE,CAC1FC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,0BACLmJ,OAAQ,OACRsJ,KAAMthB,MAGd+lB,cAAe7E,EAAQE,SAAqI,CACxJC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,2BACLmJ,OAAQ,OACRsJ,KAAMthB,MAGdgmB,qBAAsB9E,EAAQG,MAAuD,CACjFA,MAAO,iBAAO,CACVxS,IAAK,0BAGboX,sBAAuB/E,EAAQE,SAAmD,CAC9EC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,2BAA6B7O,EAAKlC,QACvCka,OAAQ,aAMhBmC,UAAW+G,EAAQG,MAAqC,CACpDA,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,oBAAsB7O,EAAKlC,YAGxC2c,SAAUyG,EAAQE,SAAqC,CACnDC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,qBACLmJ,OAAQ,OACRsJ,KAAMthB,MAGdkZ,YAAagI,EAAQE,SAAqC,CACtDC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,wBACLmJ,OAAQ,SACRsJ,KAAMthB,MAGd0a,aAAcwG,EAAQE,SAAyC,CAC3DC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,yBACLmJ,OAAQ,QACRsJ,KAAMthB,MAOdkmB,sBAAuBhF,EAAQG,MAA4D,CACvFA,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,sBAAwB7O,EAAKlC,YAG1CqoB,yBAA0BjF,EAAQE,SAAqD,CACnFC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,8BACLmJ,OAAQ,QACRsJ,KAAMthB,MAGdomB,iCAAkClF,EAAQE,SAAqD,CAC3FC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,sCACLmJ,OAAQ,QACRsJ,KAAMthB,MAMdqmB,mBAAoBnF,EAAQE,SAAqD,CAC7EC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,8BACLmJ,OAAQ,OACRsJ,KAAMthB,MAGdsmB,mBAAoBpF,EAAQE,SAAiD,CACzEC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,8BACLmJ,OAAQ,QACRsJ,KAAMthB,MAGdumB,oBAAqBrF,EAAQE,SAAiD,CAC1EC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,+BACLmJ,OAAQ,QACRsJ,KAAMthB,MAGdwmB,oBAAqBtF,EAAQE,SAAiD,CAC1EC,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,+BACLmJ,OAAQ,QACRsJ,KAAMthB,MAGdymB,uBAAwBvF,EAAQG,MAAiF,CAC7GA,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,yBAA2B7O,EAAKlC,QAAhC,WAA8CkC,EAAKhB,QAGhE0nB,2BAA4BxF,EAAQG,MAAsD,CACtFA,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,0BAA4B7O,EAAKlC,YAG9C6oB,4BAA6BzF,EAAQG,MAAuF,CACxHA,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,0BAA4B7O,EAAKlC,QAAjC,WAA+CkC,EAAKgX,KAApD,YAA4DhX,EAAKiX,UAG9E2P,mBAAoB1F,EAAQG,MAAsE,CAC9FA,MAAO,SAACrhB,GAAD,MAAW,CACd6O,IAAK,6BAA+B7O,EAAKlC,QACzC+oB,kBAAmB,SAACC,GAKhB,OAJAA,EAAS9mB,KAAKxE,aAAauJ,SAAQ,SAAC6B,EAAMiC,GACtCjC,EAAK5H,GAAK6J,KAGPie,YAWvBC,GAQ0F3Y,EAV1F4Y,oCAU0F5Y,EAVrD6Y,wCAUqD7Y,EAT1F8Y,2BAS0F9Y,EAT9D+Y,+BAS8D/Y,EAR1F2Y,0BAIgCK,GAI0DhZ,EARhEiZ,+BAQgEjZ,EARhCkZ,mCAQgClZ,EAP1FmZ,2BAO0FnZ,EAP9DoZ,+BAO8DpZ,EAN1FqZ,yBAM0FrZ,EANhEsZ,oBAMgEtZ,EAN3CuZ,oCAM2CvZ,EAL1FwZ,4CAK0FxZ,EAL7CyZ,+BAK6CzZ,EAJ1F0Z,+BAI0F1Z,EAJ1DgZ,8BAI0DhZ,EAH1F2Z,mCAG0F3Z,EAHtD4Z,kBAGsD5Z,EAHnC6Z,8BAGmC7Z,EAF1F8Z,iCAE0F9Z,EAFxD+Z,uCAEwD/Z,EAFhBga,sBAEgBha,EAD1Fia,kCAC0Fja,EADvDka,iCACuDla,EADrBma,uBACqBna,EAA1Foa,wBAA0Fpa,EAAjEqa,8BAAiEra,EAAlCsa,+B,8SCnL5D,gFAGa3mB,EAAiB,kBAAM8P,eACvBjQ,EAAkDgL,K,gCCJ/D,kHA6Ba+b,EAAevvB,YAAY,CACpCC,KAAM,UACNC,aAbiB,WACjB,IAAM2N,EAAM1E,aAAaqmB,QAAQ,aAEjC,OAAI3hB,EAEO,CAAE9I,KADc0qB,KAAKC,MAAM7hB,IAG/B,CAAE9I,KAAM,MAMD7E,GACdC,SAAU,CACN4jB,WAAY,SAAC1jB,EAAOC,GAChB6I,aAAawmB,QAAQ,YAAaF,KAAKG,UAAUtvB,EAAOC,UACxD,IAAMqG,EAAiBtG,EAAOC,QAC9BF,EAAM0E,KAAO6B,GAEjBipB,cAAe,SAACxvB,GACZ8I,aAAaC,WAAW,aACxB/I,EAAM0E,KAAO,SAKlB,EAAsCwqB,EAAaxtB,QAA3CgiB,EAAR,EAAQA,WAAY8L,EAApB,EAAoBA,cAEdpnB,EAAgB,SAACpI,GAAD,OAAsBA,EAAMgQ,QAAQtL,MAElDwqB,MAAf,S,gHC5Ce,SAASO,EAAT,GAAsH,IAApG9oB,EAAmG,EAAnGA,QAASsB,EAA0F,EAA1FA,WAEtC,EAMIynB,cALAC,EADJ,EACIA,cACAC,EAFJ,EAEIA,gBACAC,EAHJ,EAGIA,cACAC,EAJJ,EAIIA,cAJJ,EAKIC,QAOJ,OAJAlsB,qBAAU,WACNisB,EAAc7nB,KACf,CAACA,IAGA,mCACKtB,GACG,8CACIgB,IAAKkoB,GACDD,EAAgB,CAAErsB,UAAW,mCAFrC,cAII,mCAASosB,EAAc,CAAEpsB,UAAW,qBACpC,qBAAKA,UAAU,oCAAf,6B,uIChBdysB,EAAQ,sDACRC,EAAS,oCASA,SAAShgB,IACpB,MAAyC3L,2BAAjCuJ,EAAR,EAAQA,IAAKxJ,EAAb,EAAaA,QAAS6rB,EAAtB,EAAsBA,eAChBlgB,EAAUmD,YAAY/K,KAEtB8H,EAAQ,uCAAG,WAAOigB,GAAP,qCAAAjrB,EAAA,sDAIb,IAHMwM,EAAM,GACN0e,EAAmD,GAF5C,WAIJhhB,GACL,IAAMkE,EAAU6c,EAAS/gB,GACpBghB,EAAWtmB,MAAK,SAAA7F,GAAC,OAAIA,EAAE6M,KAAKlR,OAAS0T,EAAQxC,KAAKlR,QAGnDwwB,EAAW9vB,MAAK,SAAA2D,GAAC,OAAIA,EAAE6M,KAAKlR,OAAS0T,EAAQxC,KAAKlR,QAAOyB,QAAU2L,WAAWsG,EAAQjS,QAFtF+uB,EAAWlmB,KAAK,CAAE4G,KAAMwC,EAAQxC,KAAMzP,OAAQ2L,WAAWsG,EAAQjS,WAHhE+N,EAAQ,EAAGA,EAAQ+gB,EAAS9tB,OAAQ+M,IAAU,EAA9CA,GASAA,EAAQ,EAbJ,YAaOA,EAAQghB,EAAW/tB,QAb1B,iCAcWwL,EAAIK,UAAUuI,SAAS2Z,EAAWhhB,GAAO0B,KAAK6N,iBAdzD,cAcHmE,EAdG,OAeH8B,EAAU9B,EAAM8B,QAAQ5U,EAAS2O,gBAAkB9Q,EAAIgJ,KAAKC,MAAMwJ,MAAM8P,EAAWhhB,GAAO/N,OAAO0P,WAAY,UAf1G,UAgBH6T,EAAQxE,sBAAsB,CAAEqB,KAAMpd,EAAUgsB,IAAK,IAAQhQ,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UAhBhG,QAakClR,IAblC,uBAoBJnJ,EAAI,EApBA,aAoBGA,EAAIkqB,EAAS9tB,QApBhB,kCAqBQiuB,EAAWH,EAASlqB,IArB5B,QAqBH6X,EArBG,OAsBTpM,EAAIxH,KAAK4T,EAAGoC,KAtBH,QAoBwBja,IApBxB,+BAyBP+e,EAAQuL,6BAAmB7e,GAE3BjJ,EAAS,IAAIoF,EAAIkS,WAAWlJ,KAAKsM,IAAIC,SACvC,CACI,CACI,OAAU,GACV,SAAW,EACX,gBAAmB,aACnB,KAAQ,eAEZ,CACI,WAAa,EACb,OAAU,CAAC,CACP,SAAW,EACX,aAAgB,UAChB,KAAQ,cACR,KAAQ,WAEZ,CACI,SAAW,EACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,WAEZ,CACI,SAAW,EACX,aAAgB,QAChB,KAAQ,OACR,KAAQ,SAEZ,CACI,SAAW,EACX,aAAgB,QAChB,KAAQ,aACR,KAAQ,UAGZ,KAAQ,uBACR,KAAQ,SAEZ,CACI,UAAY,EACZ,OAAU,CAAC,CACP,aAAgB,UAChB,KAAQ,cACR,KAAQ,WAEZ,CACI,aAAgB,UAChB,KAAQ,QACR,KAAQ,WAEZ,CACI,aAAgB,QAChB,KAAQ,OACR,KAAQ,UAGZ,KAAQ,qBACR,QAAW,CAAC,CACR,aAAgB,QAChB,KAAQ,GACR,KAAQ,UAEZ,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,CAAC,CACP,aAAgB,YAChB,KAAQ,eACR,KAAQ,aAEZ,CACI,aAAgB,YAChB,KAAQ,SACR,KAAQ,aAEZ,CACI,aAAgB,QAChB,KAAQ,OACR,KAAQ,SAEZ,CACI,aAAgB,YAChB,KAAQ,cACR,KAAQ,cAGZ,KAAQ,sBACR,QAAW,CAAC,CACR,aAAgB,QAChB,KAAQ,GACR,KAAQ,SAEZ,CACI,aAAgB,YAChB,KAAQ,GACR,KAAQ,cAGZ,SAAW,EACX,gBAAmB,aACnB,KAAQ,aACRpT,EAAS2O,iBAnIR,UAuIQlW,EAAOuX,QAAQ+M,oBAAoB/H,EAAMwL,aAAcxL,EAAMpV,OAAQoV,EAAMyL,SAAUzL,EAAM0L,iBAAiBC,KAAK,CAAElP,KAAMpd,EAAUgsB,IAAK,KAAQhQ,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UAvI9L,QAuIPsQ,EAvIO,OAwIbzwB,QAAQC,IAAIwwB,EAAOC,iBAxIN,4CAAH,sDA2IR1gB,EAAG,uCAAG,mCAAAjL,EAAA,6DAAS4L,EAAT,EAASA,KAAMzP,EAAf,EAAeA,OAAQoQ,EAAvB,EAAuBA,UAAWqf,EAAlC,EAAkCA,QAAlC,kBAESZ,EAAc,uCAAC,WAAOriB,GAAP,uBAAA3I,EAAA,kEACF2I,EAAIgJ,KAAKsM,IAAIC,SADX,SAEb6M,EAFa,sBAEL5M,IADf0N,EADoB,cAGpB,8CAGmBljB,EAAIgJ,KAAKC,MAAM+I,UAAUpO,GANxB,oBAQS,MAAzBA,EAAUtK,MAAM,EAAG,GARH,wBAShBsK,EAAqD,QAAzCA,EAAUtK,MAAMsK,EAAUpP,OAAS,GAAeoP,EAAUtK,MAAM,EAAGsK,EAAUpP,OAAS,GAAKoP,EATzF,UAUKue,EAVL,eAUVgB,EAVU,OAUYla,MAAMma,oBAAoBxf,GAVtC,UAWEsf,EAAY/Q,QAAQkR,QAAQF,GAAOG,OAXrC,WAaa,YAF7B1f,EAXgB,QAaFtK,MAAM,EAAG,GAbP,uBAa8B,IAAI8Q,MAAM,+CAbxC,sCAeT,IAAIA,MAAM,+CAfD,yBAmBLqY,EAAW,CAAExf,OAAMzP,SAAQoQ,YAAWqf,YAnBjC,eAmBpBM,EAnBoB,OAoBxBjxB,QAAQC,IAAIgxB,EAAOlR,IAAIsB,aApBC,UAqBL4P,EAAOT,KAAK,CAAElP,KAAMpd,EAAUgc,SAAUxS,EAAIgJ,KAAKC,MAAMwJ,MAAM,MAAO,UArB/D,eAqBpB+Q,EArBoB,iBAsBAA,EAAOC,cAtBP,eAsBpBC,EAtBoB,yBAwBjB,CACH9P,KAAMpd,EACNW,GAAIyM,EACJtN,MAAO9C,EACPwvB,gBAAiBU,EAAYV,kBA5BT,4CAAD,uDAFvB,8EAmCE,IAAI5Y,MAAJ,MAnCF,yDAAH,sDAuCHqY,EAAU,uCAAG,6CAAAprB,EAAA,6DAAS4L,EAAT,EAASA,KAAMzP,EAAf,EAAeA,OAAQoQ,EAAvB,EAAuBA,UAAWqf,EAAlC,EAAkCA,QAC3CU,EAAY3jB,EAAIgJ,KAAKC,MAAMwJ,MAAMjf,EAAO0P,WAAY,SAD3C,SAGG,sBACd,sBAAA7L,EAAA,yDACQ4L,IAASxG,IAAMtL,KADvB,gCAEqB6O,EAAIK,UAAUwJ,eAFnC,iEAGe5G,IAASxG,IAAMpL,MAAQ4R,IAASxG,IAAMnL,MAAQ2R,IAASxG,IAAM9K,MAH5E,iCAIqBqO,EAAIK,UAAUC,eAAgB2C,EAAKlR,MAJxD,WAMakxB,EANb,kCAOyBjjB,EAAIK,UAAUuI,SAAS3F,EAAK6N,iBAPrD,cASc1G,MAAM,mEATpB,2CADc,GAHH,cAGX6K,EAHW,gBAiBYA,EAAMnM,UAAUtS,GAjB5B,UAiBXotB,EAjBW,OAkBX7a,EAAY/I,EAAIgJ,KAAKC,MAAMC,KAAK0a,EAAe1gB,YAC/C2gB,EAAc7jB,EAAIgJ,KAAKC,MAAMG,QAAQL,EAAU7F,WAAY,WAE3D1P,EAAO0P,YAAc2gB,GArBV,uBAsBL,IAAIzZ,MAAM,0BAtBL,YAwBR6Y,EAxBQ,kCAyBFhO,EACJ6B,oBAAoBlT,EAAW+f,EAAWV,GA1BpC,6DA2BHhO,EAAM4B,aAAargB,EAAUoN,EAAW+f,GA3BrC,uGAAH,sDA8BhB,MAAO,CAAErhB,MAAKD,c,6NCzNLyhB,EAAMC,YAVI,CACtBC,OAAQ,0CACRC,WAAY,4BACZC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIHC,EAAKC,YAAaV,GAClBzU,EAAOoV,cACKC,YAAaZ,I,gCCnBtC,sDAEe,SAASa,EAAT,GAAoR,IAAlQxf,EAAiQ,EAAjQA,SAAiQ,IAAvP9M,eAAuP,MAA7O,OAA6O,MAArO/C,YAAqO,MAA9N,SAA8N,EAApNgD,EAAoN,EAApNA,QAAS5C,EAA2M,EAA3MA,UAA2M,IAAhMkB,iBAAgM,SAC9R,OAAO,yBAAQtB,KAAMA,EAAMgD,QAASA,EAAS5C,UAAS,UAAKA,EAAL,YAA8B,SAAZ2C,EAAqB,2DAA6D,0DAApG,6EAA0OusB,SAAUhuB,EAAnS,UAA+SA,EAAY,cAAC,aAAD,CAAYiuB,KAAK,SAAW1f,EAAvV,S,oQCEJ,SAAe4Q,EAAtB,oC,4CAAO,WAAuC+O,EAAoBpd,GAA3D,iBAAArQ,EAAA,6DACG0tB,EAASC,YAAIT,IAAIO,EAAYpd,GADhC,SAEmBud,YAAOF,GAF1B,YAEGG,EAFH,QAISC,SAJT,yCAKQD,EAAQxsB,QALhB,cAOCpG,QAAQwF,MAAM,qBAPf,uBAQQ1G,GARR,6C,sBAYA,SAAS+f,IAEZ,IAAME,EAAS,uCAAG,WAAOyT,EAAoBpd,EAAkBhP,GAA7C,SAAArB,EAAA,sEACR+tB,YAAOJ,YAAIT,IAAIO,EAAYpd,GAAWhP,GAD9B,2CAAH,0DAIT2sB,EAAQ,uCAAG,WAAOP,EAAoBpd,EAAkBhP,GAA7C,SAAArB,EAAA,sEACP+tB,YAAOJ,YAAIT,IAAIO,EAAYpd,GAAWhP,EAAM,CAAE4sB,OAAO,IAD9C,2CAAH,0DAIRC,EAAc,uCAAG,WAAOT,EAAoBpd,GAA3B,SAAArQ,EAAA,sEACbmuB,YAAUR,YAAIT,IAAIO,EAAYpd,IADjB,2CAAH,wDAId0J,EAAS,uCAAG,WAAO0T,EAAoBpd,EAAkBhP,GAA7C,eAAArB,EAAA,sEAEJyC,EAAMkrB,YAAIT,IAAIO,EAAYpd,GAFtB,SAGJ+d,YAAelB,IAAD,uCAAK,WAAOlM,GAAP,SAAAhhB,EAAA,sEACDghB,EAAYqN,IAAI5rB,GADf,iBAEVqrB,SAFU,qBAGX,2BAHW,OAKrB9M,EAAYsN,OAAO7rB,EAAKpB,GALH,2CAAL,uDAHV,6DAWVpG,QAAQwF,MAAM,uBAAd,MACM,IAAIsS,MAAM,6BAZN,yDAAH,0DAgBf,MAAO,CAAEiH,YAAWgU,WAAUjU,YAAWmU,kBAMtC,SAASnW,EAA2B0V,EAAoBpd,GAC3D,MAAwB/R,qBAAxB,mBAAO+C,EAAP,KAAaC,EAAb,KAaA,OALA3C,qBAAU,WACN,IAAM4vB,EAPM,SAACd,EAAoBpd,GACjC,OAAOme,YAAWb,YAAIT,IAAIO,EAAYpd,IAAW,SAACsd,GAC9CrsB,EAAQqsB,EAAItsB,WAKFotB,CAAQhB,EAAYpd,GAClC,OAAO,kBAAMke,OACd,IAEI,CAAEltB,QAGN,SAAS4R,EAAmCyb,EAAwBC,EAAoBC,EAA0BC,GACrH,MAAwBvwB,qBAAxB,mBAAO+C,EAAP,KAAaC,EAAb,KAkBA,OALA3C,qBAAU,WACN,IAAM4vB,EAZG,SAACG,EAAwBC,EAAoBE,EAAkBD,GACxE,IAAME,EAAIpM,YAAM+K,YAAWP,IAAIwB,GAAiBK,YAAMJ,EAAYC,EAAWC,IAC7E,OAAOL,YAAWM,GAAG,SAACE,GAClB,IAAM3tB,EAAmB,GACzB2tB,EAAc5oB,SAAQ,SAACunB,GACnBtsB,EAAK2D,KAAK2oB,EAAItsB,WAElBC,EAAQD,MAKE4tB,CAAKP,EAAgBC,EAAYE,EAAaD,GAC5D,OAAO,kBAAML,OACd,IAEI,CAAEltB,QAKN,SAAS+C,IACZ,MAAgC9F,oBAAS,GAAzC,mBAAOiB,EAAP,KAAkB6R,EAAlB,KAEM/M,EAAM,uCAAG,WAAOqqB,EAAwBQ,EAAeC,GAA9C,mBAAAnvB,EAAA,6DACXoR,GAAW,GACL3O,EAAMgrB,YAAWP,IAAIwB,GACrBI,EAAIpM,YAAMjgB,EAAKssB,YAAMG,EAAO,KAAMC,IAH7B,SAIWC,YAAQN,GAJnB,UAILjB,EAJK,OAKXzc,GAAW,KACPyc,EAAQwB,KAAKlyB,OAAS,GANf,0CAOA0wB,EAAQwB,KAAKxuB,KAAI,SAAA9B,GAAC,OAAIA,EAAEsC,WAPxB,eASPpG,QAAQwF,MAAM,iBATP,uBAUA1G,GAVA,4CAAH,0DAcZ,MAAO,CAAEsK,SAAQ9E,e,gCC/GrB,0PAmBa+vB,EAAoB70B,YAAY,CACzCC,KAAM,eACNC,aAVoC,CACpC40B,WAAW,EACXC,cAAe,gBACfC,SAAS,EACTC,YAAa,GACbC,iBAAkB,GAMlB/0B,SAAU,CACN6N,YAAa,SAAC3N,EAAOC,GACjBD,EAAM40B,YAAc30B,EAAOC,QAAQyR,MAAQ,uBAC3C3R,EAAM20B,QAAU10B,EAAOC,QAAQwN,UAEnCD,cAAe,SAACzN,EAAOC,GACnBD,EAAMy0B,UAAYx0B,EAAOC,QAAQwN,SACjC1N,EAAM00B,cAAgBz0B,EAAOC,QAAQyR,MAAQ,iBAEjDmjB,uBAAwB,SAAC90B,EAAOC,GAC5BD,EAAM60B,iBAAmB50B,EAAOC,YAKrC,EAA+Ds0B,EAAkB9yB,QAAzEiM,EAAR,EAAQA,YAAaF,EAArB,EAAqBA,cAAeqnB,EAApC,EAAoCA,uBAE9B5oB,EAAc,SAAClM,GAAD,OAAsBA,EAAM2T,aAAaghB,SACvDpY,EAAkB,SAACvc,GAAD,OAAsBA,EAAM2T,aAAaihB,aAC3DtY,EAAoB,SAACtc,GAAD,OAAsBA,EAAM2T,aAAa+gB,eAC7D1oB,EAAgB,SAAChM,GAAD,OAAsBA,EAAM2T,aAAa8gB,WAEvDD,MAAf,S,gCC5CA,gFAmBaO,EAAuBp1B,YAAY,CAC5CC,KAAM,kBACNC,aAZS,WACT,IAAM2N,EAAM1E,aAAaqmB,QAAQ,aAEjC,OAAI3hB,EAEO,CAAEnJ,QADc+qB,KAAKC,MAAM7hB,GACXgE,gBAEpB,CAAEnN,QAAS,IAKJ2wB,GACdl1B,SAAU,CACN6jB,cAAe,SAAC3jB,EAAmBC,GAC/BD,EAAMqE,QAAUpE,EAAOC,YAMpByjB,EAAkBoR,EAAqBrzB,QAAvCiiB,cAEF1V,EAAwB,SAACjO,GAAD,OAAsBA,EAAMgO,gBAAgB3J,SAElE0wB,MAAf,S,sTCjCME,EAAOC,EAAQ,MAERrS,EAAO,uCAAG,4CAAA3d,EAAA,qEAAUiwB,EAAV,yBAAUA,EAAV,wBACTF,EAAKG,GAAGD,EAAKnuB,QAAO,SAAC6F,EAAKwoB,GAAN,OAAcxoB,EAAMwoB,MAD/B,mFAAH,qDASP5R,EAAiB,WAAiD,IAAxC6R,EAAuC,uDAApB,GAAIC,EAAgB,uDAAJ,GACrEC,EAAmBC,MAAIC,QAAQJ,EAAkBC,GACrD,OAAOC,EAAiBzkB,YAGZgF,EAAiB,WAAiD,IAAxCyf,EAAuC,uDAApB,GAAID,EAAgB,uDAAJ,GACrEI,EAAiBF,MAAIG,QAAQJ,EAAkBD,GAC/CM,EAAmBF,EAAe5kB,SAAS+kB,MAAIC,QAEnD,OAAOF,I","file":"static/js/main.e2ece23a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { IuseCurrency } from '../../API/useCurrency';\nimport { AltCoins } from '../../types/coins';\nimport { RootState } from '../store';\n\nexport interface ICurrencyInternal {\n\tname?: string;\n\tprice?: number;\n\tpercent_24?: number;\n\tcurrent_balance?: number;\n}\n\nexport interface IBalanceItem {\n\tamount: number;\n\tper_24: number;\n\tpercent: number;\n\tcoins: AltCoins;\n\ttokenPrice: number;\n}\n\ninterface IBalanceMembers {\n\tCELO: IBalanceItem | undefined;\n\tcUSD: IBalanceItem | undefined;\n\tcEUR: IBalanceItem | undefined;\n\tUBE: IBalanceItem | undefined;\n\tMOO: IBalanceItem | undefined;\n\tMOBI: IBalanceItem | undefined;\n\tPOOF: IBalanceItem | undefined;\n\tcREAL: IBalanceItem | undefined;\n}\n\ninterface ICurrency {\n\tceloCoins: ICoinMembers;\n\tbalances: IBalanceMembers;\n}\n\nexport interface ICoinMembers {\n\tCELO: ICurrencyInternal | undefined;\n\tcUSD: ICurrencyInternal | undefined;\n\tcEUR: ICurrencyInternal | undefined;\n\tUBE: ICurrencyInternal | undefined;\n\tMOO: ICurrencyInternal | undefined;\n\tMOBI: ICurrencyInternal | undefined;\n\tPOOF: ICurrencyInternal | undefined;\n\tcREAL: ICurrencyInternal | undefined;\n}\n\nconst State: ICurrency = {\n\tceloCoins: {\n\t\tCELO: undefined,\n\t\tcUSD: undefined,\n\t\tcEUR: undefined,\n\t\tUBE: undefined,\n\t\tMOO: undefined,\n\t\tMOBI: undefined,\n\t\tPOOF: undefined,\n\t\tcREAL: undefined\n\t},\n\tbalances: {\n\t\tCELO: undefined,\n\t\tcUSD: undefined,\n\t\tcEUR: undefined,\n\t\tUBE: undefined,\n\t\tMOO: undefined,\n\t\tMOBI: undefined,\n\t\tPOOF: undefined,\n\t\tcREAL: undefined\n\t}\n};\n\nexport const CurrencySlice = createSlice({\n\tname: 'currencySlice',\n\tinitialState: State,\n\treducers: {\n\t\tupdateAllCurrencies: (state: ICurrency, action: { payload: IuseCurrency[] | undefined }) => {\n\t\t\tif (!action.payload) return;\n\t\t\tconsole.log('updateAllCurrencies', action.payload);\n\t\t\tconst celo = action.payload.find((c) => c.name === 'CELO')!;\n\t\t\tconst cusd = action.payload.find((c) => c.name === 'cUSD')!;\n\t\t\tconst ceur = action.payload.find((c) => c.name === 'cEUR')!;\n\t\t\tconst ube = action.payload.find((c) => c.name === 'UBE')!;\n\t\t\tconst moo = action.payload.find((c) => c.name === 'MOO')!;\n\t\t\tconst mobi = action.payload.find((c) => c.name === 'MOBI')!;\n\t\t\tconst poof = action.payload.find((c) => c.name === 'POOF')!;\n\t\t\tconst creal = action.payload.find((c) => c.name === 'cREAL')!;\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: { percent_24: celo.percent_24, price: celo.price },\n\t\t\t\tcUSD: { percent_24: cusd.percent_24, price: cusd.price },\n\t\t\t\tcEUR: { percent_24: ceur.percent_24, price: ceur.price },\n\t\t\t\tUBE: { percent_24: ube.percent_24, price: ube.price },\n\t\t\t\tMOO: { percent_24: moo.percent_24, price: moo.price },\n\t\t\t\tMOBI: { percent_24: mobi.percent_24, price: mobi.price },\n\t\t\t\tPOOF: { percent_24: poof.percent_24, price: poof.price },\n\t\t\t\tcREAL: { percent_24: creal.percent_24, price: creal.price }\n\t\t\t};\n\t\t},\n\t\tupdateBalance: (state: ICurrency, action) => {\n\t\t\tif (!action.payload) return;\n\t\t\tconst [ celo, cusd, ceur, ube, moo, mobi, poof, creal ]: ICurrencyInternal[] = action.payload;\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: { ...state.celoCoins.CELO, current_balance: celo.current_balance },\n\t\t\t\tcUSD: { ...state.celoCoins.cUSD, current_balance: cusd.current_balance },\n\t\t\t\tcEUR: { ...state.celoCoins.cEUR, current_balance: ceur.current_balance },\n\t\t\t\tUBE: { ...state.celoCoins.UBE, current_balance: ube.current_balance },\n\t\t\t\tMOO: { ...state.celoCoins.MOO, current_balance: moo.current_balance },\n\t\t\t\tMOBI: { ...state.celoCoins.MOBI, current_balance: mobi.current_balance },\n\t\t\t\tPOOF: { ...state.celoCoins.POOF, current_balance: poof.current_balance },\n\t\t\t\tcREAL: { ...state.celoCoins.cREAL, current_balance: creal.current_balance }\n\t\t\t};\n\t\t},\n\t\tdeleteBalance: (state: ICurrency) => {\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: undefined,\n\t\t\t\tcUSD: undefined,\n\t\t\t\tcEUR: undefined,\n\t\t\t\tUBE: undefined,\n\t\t\t\tMOO: undefined,\n\t\t\t\tMOBI: undefined,\n\t\t\t\tPOOF: undefined,\n\t\t\t\tcREAL: undefined\n\t\t\t};\n\t\t\tstate.balances = {\n\t\t\t\tCELO: undefined,\n\t\t\t\tcUSD: undefined,\n\t\t\t\tcEUR: undefined,\n\t\t\t\tUBE: undefined,\n\t\t\t\tMOO: undefined,\n\t\t\t\tMOBI: undefined,\n\t\t\t\tPOOF: undefined,\n\t\t\t\tcREAL: undefined\n\t\t\t};\n\t\t},\n\t\tupdateUserBalance: (state: ICurrency, action) => {\n\t\t\tif (!action.payload) return;\n\t\t\tconst [ celo, cusd, ceur, ube, moo, mobi, poof, creal ]: IBalanceItem[] = action.payload;\n\t\t\tstate.balances = {\n\t\t\t\tCELO: {\n\t\t\t\t\tamount: celo.amount,\n\t\t\t\t\tper_24: celo.per_24,\n\t\t\t\t\tpercent: celo.percent,\n\t\t\t\t\tcoins: celo.coins,\n\t\t\t\t\ttokenPrice: celo.tokenPrice\n\t\t\t\t},\n\t\t\t\tcUSD: {\n\t\t\t\t\tamount: cusd.amount,\n\t\t\t\t\tper_24: cusd.per_24,\n\t\t\t\t\tpercent: cusd.percent,\n\t\t\t\t\tcoins: cusd.coins,\n\t\t\t\t\ttokenPrice: cusd.tokenPrice\n\t\t\t\t},\n\t\t\t\tcEUR: {\n\t\t\t\t\tamount: ceur.amount,\n\t\t\t\t\tper_24: ceur.per_24,\n\t\t\t\t\tpercent: ceur.percent,\n\t\t\t\t\tcoins: ceur.coins,\n\t\t\t\t\ttokenPrice: ceur.tokenPrice\n\t\t\t\t},\n\t\t\t\tUBE: {\n\t\t\t\t\tamount: ube.amount,\n\t\t\t\t\tper_24: ube.per_24,\n\t\t\t\t\tpercent: ube.percent,\n\t\t\t\t\tcoins: ube.coins,\n\t\t\t\t\ttokenPrice: ube.tokenPrice\n\t\t\t\t},\n\t\t\t\tMOO: {\n\t\t\t\t\tamount: moo.amount,\n\t\t\t\t\tper_24: moo.per_24,\n\t\t\t\t\tpercent: moo.percent,\n\t\t\t\t\tcoins: moo.coins,\n\t\t\t\t\ttokenPrice: moo.tokenPrice\n\t\t\t\t},\n\t\t\t\tMOBI: {\n\t\t\t\t\tamount: mobi.amount,\n\t\t\t\t\tper_24: mobi.per_24,\n\t\t\t\t\tpercent: mobi.percent,\n\t\t\t\t\tcoins: mobi.coins,\n\t\t\t\t\ttokenPrice: mobi.tokenPrice\n\t\t\t\t},\n\t\t\t\tPOOF: {\n\t\t\t\t\tamount: poof.amount,\n\t\t\t\t\tper_24: poof.per_24,\n\t\t\t\t\tpercent: poof.percent,\n\t\t\t\t\tcoins: poof.coins,\n\t\t\t\t\ttokenPrice: poof.tokenPrice\n\t\t\t\t},\n\t\t\t\tcREAL: {\n\t\t\t\t\tamount: creal.amount,\n\t\t\t\t\tper_24: creal.per_24,\n\t\t\t\t\tpercent: creal.percent,\n\t\t\t\t\tcoins: creal.coins,\n\t\t\t\t\ttokenPrice: creal.tokenPrice\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n});\n\nexport const { updateAllCurrencies, updateUserBalance, deleteBalance } = CurrencySlice.actions;\n\nexport const SelectCurrencies = (state: RootState): ICoinMembers => state.currencyandbalance.celoCoins;\nexport const SelectBalances = (state: RootState): IBalanceMembers => state.currencyandbalance.balances;\nexport const SelectCelo = (state: RootState) => state.currencyandbalance.celoCoins.CELO;\nexport const SelectCusd = (state: RootState) => state.currencyandbalance.celoCoins.cUSD;\nexport const SelectCeur = (state: RootState) => state.currencyandbalance.celoCoins.cEUR;\n\nexport default CurrencySlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { GetTransactions } from '../../types/sdk/blockscout';\nimport { RootState } from '../store';\n\ninterface InitialTransaction {\n\ttransactions: GetTransactions | null;\n}\n\nconst initialState: InitialTransaction = {\n\ttransactions: null\n};\n\nexport const TransactionAPI = createSlice({\n\tname: 'transactions',\n\tinitialState: initialState,\n\treducers: {\n\t\tsetTransactions: (state, action) => {\n\t\t\tstate.transactions = action.payload;\n\t\t},\n\t\tremoveTransactions: (state) => {\n\t\t\tstate.transactions = null;\n\t\t}\n\t}\n});\n\nexport const { setTransactions, removeTransactions } = TransactionAPI.actions;\nexport const SelectTransactions = (state: RootState) => state.transactionsStore.transactions;\nexport default TransactionAPI.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { NonExecTransactionItem } from '../../types/sdk';\nimport { RootState } from '../store';\n\ninterface State {\n    transactions: NonExecTransactionItem[] | undefined;\n    sign?: number;\n    internalSign?: number;\n}\n\nconst initialState: State = {\n    transactions: [],\n};\n\nexport const multisigSlice = createSlice({\n    name: 'multisig',\n    initialState: initialState,\n    reducers: {\n        setTransactions: (state, action) => {\n            if(action.payload !== undefined && action.payload?.length !== 0){\n                if(state.transactions) state.transactions = [...state.transactions, ...action.payload];\n                else state.transactions = [...action.payload];\n            }else state.transactions = action.payload\n        },\n        setInternalSign: (state, action)=>{\n            state.internalSign = action.payload\n        },\n        setSign: (state, action)=>{\n            state.sign = action.payload\n        }\n    }\n});\n\nexport const { setTransactions, setInternalSign, setSign } = multisigSlice.actions;\n\nexport const selectMultisigTransactions = (state: RootState) => state.multisig.transactions;\nexport const selectMultisig = (state: RootState) => state.multisig;\n\nexport default multisigSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface IUnlock {\n    unlock: boolean;\n}\n\nconst initialState: IUnlock = {\n    unlock: false\n}\n\n\nexport const unlockSlide = createSlice({\n    name: \"unlock\",\n    initialState: initialState,\n    reducers: {\n        setUnlock: (state, action) => {\n            state.unlock =  action.payload;\n        }\n    }\n})\n\nexport const { setUnlock } = unlockSlide.actions\n\nexport const selectUnlock = (state: RootState) => state.unlock.unlock\n\nexport default unlockSlide.reducer","import { MdDone } from 'react-icons/md'\nimport { VscError } from 'react-icons/vsc'\nimport { Dispatch, useEffect, useState } from 'react'\n\nconst Input = ({ title, name, type = \"text\", validation, limit = 0, required = false, className = \"\"}: { title: string, name: string, type?: string, validation?: Dispatch<boolean>, limit?: number, required?: boolean, className?: string}) => {\n    const [password, setPassword] = useState<string>();\n    const [repeatPassword, setRepeatPassword] = useState<string>();\n\n    useEffect(() => {\n        if (validation) {\n            if (repeatPassword && password && repeatPassword === password) {\n                validation(true);\n            } else {\n                validation(false);\n            }\n        }\n    }, [repeatPassword, password])\n    return <>\n        <div className=\"flex flex-col\">\n            <div className=\"text-left text-greylish\">{title}</div>\n            <div className={`${className} flex items-center gap-3 w-[200px]`}>\n                <input type={type} name={name} autoComplete='new-password' minLength={limit} className=\"bg-greylish bg-opacity-10 h-[40px] rounded-lg px-2\" onChange={(e) => {\n                    setPassword(e.target.value);\n                }} required={required} />\n            </div>\n        </div>\n        {type === \"password\" ? <div className=\"flex flex-col\">\n            <div className=\"text-left text-greylish\">{'Repeat Password'}</div>\n            <div className={`${className} flex items-center gap-3 w-[200px]`}>\n                <input type={type} name={'repeatPassword'} autoComplete='new-password' className=\"bg-greylish bg-opacity-10 h-[40px] rounded-lg px-2\" onChange={(e) => {\n                    setRepeatPassword(e.target.value);\n                }} required />\n                {repeatPassword && password && <div>\n                    {repeatPassword === password ? <MdDone className=\"text-green-600\" /> : <VscError className=\"text-red-600\" />}\n                </div>}\n            </div>\n        </div> : null}\n    </>\n}\n\nexport default Input;","import { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { SyntheticEvent, useEffect, useMemo } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport Button from \"../components/button\";\r\nimport Input from \"../components/input\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { useSignInOrUp } from \"../hooks\";\r\n\r\nexport default function CreateAccount() {\r\n\r\n    const { address } = useContractKit();\r\n    const { executeSign, isLoading } = useSignInOrUp()\r\n    const { user } = useAuth(address);\r\n    const navigate = useNavigate()\r\n\r\n    const list = useMemo<Array<{ title: string, type?: string, name: string }>>(() => [\r\n        { title: \"First Name\", name: \"userName\" }, { title: \"Last Name\", name: \"surname\" },\r\n        { title: \"Organization Name\", name: \"companyName\" }, { title: \"Password\", name: \"password\", type: \"password\", limit: 6 },\r\n    ], [])\r\n\r\n    if (user || !address) return <Navigate to={'/'} />\r\n\r\n\r\n    const create = async (e: SyntheticEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const target = e.target as HTMLFormElement\r\n\r\n        if (target[\"password\"].value !== target[\"repeatPassword\"].value) return\r\n\r\n        const inputData = {\r\n            name: target[\"userName\"].value,\r\n            surname: target[\"surname\"].value,\r\n            companyName: target[\"companyName\"].value,\r\n            password: target[\"password\"].value,\r\n        }\r\n\r\n        try {\r\n            const user = await executeSign(address, inputData.password, {\r\n                address: address,\r\n                id: \"placeholder\",\r\n                companyName: inputData.companyName,\r\n                name: inputData.name,\r\n                surname: inputData.surname,\r\n                timestamp: new Date().getTime()\r\n            })\r\n\r\n            navigate('/dashboard')\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    return <div className=\"h-screen w-full\">\r\n        <header className=\"flex md:px-40 h-[75px] justify-center md:justify-start items-center absolute top-0 w-full\">\r\n            <div>\r\n                <img src=\"/logo.png\" alt=\"\" className=\"w-[150px]\" />\r\n            </div>\r\n        </header>\r\n        <form onSubmit={create} className=\"py-[100px] sm:py-0 sm:h-full\">\r\n            <section className=\"flex flex-col items-center  h-full justify-center gap-10\">\r\n                <div className=\"flex flex-col gap-4\">\r\n                    <div className=\"text-xl sm:text-3xl text-primary text-center\">Set Account Details</div>\r\n                    <div className=\"text-greylish tracking-wide font-light text-lg text-center\">This password encrypts your accounts on this device.</div>\r\n                </div>\r\n                <div className=\"grid sm:grid-cols-3 gap-x-24 gap-y-8 px-3\">\r\n                    {list.map((w, i) => <Input key={i} {...w} />)}\r\n                </div>\r\n                <div className=\"flex sm:flex-row flex-col-reverse justify-center items-center gap-10 pt-8\">\r\n                    <Button version=\"second\" className=\"w-[150px] h-[50px]\" onClick={() => navigate('/')}>Back</Button>\r\n                    <Button type=\"submit\" className=\"w-[150px] h-[50px] px-0\" isLoading={isLoading}>Set Account</Button>\r\n                </div>\r\n            </section>\r\n        </form>\r\n    </div>\r\n}\r\n","import { useState, useEffect } from 'react'\nimport Copied from './copied';\n\nconst PhraseBar = ({ address, mnemonic = false, scanIcon = true }: { address: string, mnemonic?: boolean, scanIcon?: boolean }) => {\n    const [data, setData] = useState('');\n    const [see, setSee] = useState(false);\n    const [tooltip, setTooltip] = useState(false);\n    const [divRef, setDivRef] = useState<HTMLDivElement | null>(null)\n\n    useEffect(() => {\n        if (mnemonic && !see) {\n            const value = address.split(\" \").reduce((a, c) => {\n                return a += ` ${c.replace(/[A-Z]/gi, \"*\")}`\n            })\n            return setData(value)\n        } else if (mnemonic) return setData(address);\n\n        let value = address.startsWith(\"0x\") ? address.slice(2) : address.replace(' ', '');\n        value = value.split('').reduce((a, c, i) => {\n            if (i > 0 && i % 4 === 0) a += ' ';\n            return a + c;\n        }, '')\n        return setData(value)\n    }, [see])\n\n    return <div>\n        <div className=\"bg-greylish bg-opacity-10 py-5 pl-2 pr-12 rounded-lg break-words relative\" style={!mnemonic ? { inlineSize: `${window.outerWidth > 640 ? \"300px\" : \"240px\"}` } : { inlineSize: `${window.outerWidth > 640 ? \"420px\" : \"240px\"}` }}>\n            <div className=\"font-light\">{mnemonic ? data : data.toUpperCase()}</div>\n            <div className=\"absolute -right-5 top-1/2 -translate-y-1/2 flex flex-col gap-3\">\n                {mnemonic ?\n                    <div className=\"bg-primary p-2 rounded-xl cursor-pointer\" onClick={() => setSee(!see)}>\n                        <img src={'/icons/see.svg'} width=\"15\" height={15} alt=\"see\" />\n                    </div>\n                    :\n                    scanIcon ? <div className=\"bg-primary p-2 rounded-xl cursor-pointer\">\n                        <img src={'/icons/scanning.svg'} alt=\"scanning\" />\n                    </div> : null}\n\n                <div ref={setDivRef} className=\"bg-primary p-2 rounded-xl cursor-pointer\" onClick={() => {\n                    navigator.clipboard.writeText(address.trim())\n                    setTooltip(true)\n                    setTimeout(() => {\n                        setTooltip(false)\n                    }, 300)\n                }}>\n                    <img src={'/icons/copy.svg'} alt=\"copy\" />\n                </div>\n                <Copied tooltip={tooltip} triggerRef={divRef} />\n            </div>\n        </div>\n\n    </div>\n}\n\nexport default PhraseBar;","import PhraseBar from '../components/phraseBar';\nimport { useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { selectStorage } from '../redux/reducers/storage';\nimport { setUnlock } from '../redux/reducers/unlock';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport Button from '../components/button';\nimport useSignInOrUp from '../hooks/useSignInOrUp';\nimport { useContractKit } from '@celo-tools/use-contractkit';\n\nconst Unlock = () => {\n    const { address } = useContractKit();\n    const storage = useAppSelector(selectStorage)\n    const { executeSign, isLoading } = useSignInOrUp()\n\n    const dispatch = useAppDispatch();\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    const router = useNavigate()\n    const [incorrrect, setIncorrect] = useState(false)\n\n    const Submit = async () => {\n        if (inputRef.current && address) {\n            setIncorrect(false);\n\n            try {\n                await executeSign(address, inputRef.current.value)\n\n                dispatch(setUnlock(true))\n                router('/dashboard');\n            } catch (error) {\n                setIncorrect(true);\n                console.error(error)\n                if (error === \"No Data In Users\") {\n                    localStorage.removeItem('remoxUser')\n                    router('/')\n                }\n            }\n        }\n    }\n\n    return <>\n        <header className=\"flex md:px-40 h-[75px] justify-center md:justify-start items-center absolute top-0 w-full\">\n            <div>\n                <img src=\"/logo.png\" alt=\"\" className=\"w-[150px]\" />\n            </div>\n        </header>\n        <section className=\"flex flex-col justify-center items-center h-screen gap-8\">\n            <h2 className=\"text-3xl text-primary\">Unlock Your Wallet</h2>\n            <div className=\"flex flex-col gap-3\">\n                <div>Public Address</div>\n                {address && <PhraseBar address={address} scanIcon={false} />}\n            </div>\n            <div className=\"flex flex-col gap-4\">\n                <div>Enter your password to unlock your wallet</div>\n                <div className=\"flex justify-center\"><input onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                        Submit()\n                    }\n                }} ref={inputRef} type=\"password\" autoComplete='new-password' autoFocus className=\"bg-greylish bg-opacity-10 px-3 py-2 rounded-lg outline-none\" /></div>\n                {incorrrect && <div className=\"text-red-600 text-center\">Password is Incorrect</div>}\n                <div className=\"flex justify-center\">\n                    <Button onClick={Submit} className=\"px-5 py-2\" isLoading={isLoading}>Unlock</Button>\n                </div>\n            </div>\n        </section>\n    </>\n}\n\n\nexport default Unlock;","import { useNavigate } from \"react-router-dom\";\nimport Button from \"../components/button\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useFirestoreSearchField } from \"../API/useFirebase\";\nimport { IUser } from \"../firebase\";\nimport { useEffect } from \"react\";\nimport { CeloContract } from \"@celo/contractkit\";\n\n\nconst Home = () => {\n    const { connect, address } = useContractKit();\n    const { search, isLoading } = useFirestoreSearchField<IUser>()\n\n    const navigate = useNavigate()\n\n    const connectEvent = async () => {\n        try {\n            if (!address) {\n                await connect()\n            }\n            if (address) {\n                search(\"users\", 'address', address)\n                    .then(user => {\n                        if (user) {\n                            navigate('/unlock')\n                        } else {\n                            navigate('/create-account')\n                        }\n\n                    })\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return <>\n        <section className=\"flex justify-center items-center w-full h-screen\">\n            <div className=\"w-[800px] h-[600px] bg-[#eeeeee] bg-opacity-40 flex flex-col justify-center items-center gap-14\">\n                <div className=\"w-[200px] sm:w-[400px] flex flex-col items-center justify-center gap-10\">\n                    <img src=\"/logo.png\" alt=\"\" className=\"w-full\" />\n                    <span className=\"font-light text-greylish text-center\">All-in-One Tool For Crypto Treasury Management</span>\n                </div>\n                <div className=\"flex flex-col gap-5\">\n                    {<Button onClick={connectEvent} isLoading={isLoading}>{address ? \"Enter App\" : \"Connect to a wallet\"}</Button>}\n                </div>\n            </div>\n        </section>\n    </>\n\n};\n\nexport default Home;","import { Coins } from \"types/coins\";\nimport Avatar from \"components/avatar\";\nimport dateFormat from \"dateformat\";\nimport { DateInterval, IMember } from \"API/useContributors\";\n\nconst TeamItem = (props: { member: IMember, teamName: string, memberState: [IMember[], React.Dispatch<React.SetStateAction<IMember[]>>] }) => {\n\n    return <>\n        <div className=\"pl-[2px] items-start\">\n            <div className=\"flex space-x-3 items-center\">\n                <input type=\"checkbox\" checked={props.memberState[0].some(s => s.id === props.member.id)} className=\"relative cursor-pointer max-w-[20px] max-h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                    const members = [...props.memberState[0]]\n                    if (e.target.checked) {\n                        if (!members.some(s => s.id === props.member.id)) {\n                            members.push(props.member)\n                            props.memberState[1](members)\n                        }\n                    } else {\n                        props.memberState[1](members.filter(m => props.member.id !== m.id))\n                    }\n                }\n                } />\n                <div className=\"hover:cursor-pointer flex items-center space-x-1\">\n                    <Avatar name={props.member.name} />\n                    <div>\n                        {props.member.name}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"flex flex-col space-y-4\">\n            <div className=\" pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.member.amount}</div>\n                {props.member.usdBase ? <div>USD as {Coins[props.member.currency].name}</div> :\n                    <div>\n                        {Coins[props.member.currency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.member.currency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>\n            {props.member.secondaryCurrency && <div className=\"pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.member.secondaryAmount}</div>\n                {props.member.secondaryUsdBase ? <div>USD as {Coins[props.member.secondaryCurrency].name}</div> :\n                    <div>\n                        {Coins[props.member.secondaryCurrency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.member.secondaryCurrency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>}\n        </div>\n        <div className=\"pl-[2px] hidden sm:flex items-start\">\n            {(props.member.interval === DateInterval.monthly && \"Monthly\")}\n            {(props.member.interval === DateInterval.weakly && \"Weekly\")}\n        </div>\n        <div className=\"flex space-x-8\">\n            {props.member.paymantDate && <>\n                <div className=\"col-span-2 sm:col-span-1 pt-3 sm:pt-0 pl-[2px] truncate\">\n                    {/* {new Date().getUTCDay() < new Date(props.member.paymantDate).getUTCDay() ? dateFormat(date.addMonths(new Date(), 1), `${new Date(props.member.paymantDate).getUTCDay()} mmm yyyy`) : dateFormat(new Date(props.member.paymantDate), `dd mmm yyyy`)} */}\n                    {dateFormat(new Date(props.member.paymantDate), `dd ${dateFormat(new Date(), 'mmm')} yyyy`)}\n                </div>\n                {new Date().getUTCDay() < new Date(props.member.paymantDate).getUTCDay() && <div title=\"Late Payment\">\n                    <img src=\"/icons/warningmark.svg\" className=\"max-w-[20px] max-h-[20px]\" alt=\"\" />\n                </div>}\n            </>}\n        </div>\n\n    </>\n}\n\nexport default TeamItem;","import { IMember, IuseContributor } from \"API/useContributors\";\nimport { useState } from \"react\";\nimport { generate } from \"shortid\";\nimport TeamItem from \"../payroll/teamItem\";\n\n\nconst TeamContainer = (props: IuseContributor & { memberState: [IMember[], React.Dispatch<React.SetStateAction<IMember[]>>] }) => {\n\n    const [num, setNum] = useState(3)\n\n    return <>\n        <div className=\"col-span-4 flex space-x-3 py-4 pt-4 sm:pt-6 pb-1 px-5 items-center justify-start\">\n            <div>\n                <input type=\"checkbox\" className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                    const members = [...props.memberState[0]]\n                    if (e.target.checked) {\n                        props.members?.forEach(m => {\n                            if (!members.some(x => x.id === m.id)) {\n                                members.push(m)\n                            }\n                        })\n                        props.memberState[1](members)\n                    } else {\n                        props.memberState[1](members.filter(m => !props.members?.some(x => x.id === m.id)))\n                    }\n                }} />\n            </div>\n            <div className=\"font-semibold text-[1.5rem] overflow-hidden whitespace-nowrap\">\n                <div>{props.name}</div>\n            </div>\n        </div>\n        {props.members && props.members.slice(0, num).map(w =>\n            <div key={generate()} className=\"grid grid-cols-2 sm:grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] py-6 border-b border-black pb-5 px-5 text-sm\">\n                <TeamItem teamName={props.name} member={w} memberState={props.memberState} />\n            </div>\n        )}\n        {props.members && props.members.length > 3 && num !== 100 ? <button className=\"py-3 pb-5 px-5 font-bold text-primary\" onClick={() => setNum(100)}>\n            Show More\n        </button> : null}\n        {!props.members ? <div className=\"b-5 px-5 border-b border-black pb-5\">No Team Member Yet</div> : undefined}\n    </>\n}\n\nexport default TeamContainer;","import { Fragment, useEffect, useState, useMemo } from 'react';\nimport TeamContainer from 'subpages/dashboard/payroll/teamContainer'\nimport { ClipLoader } from 'react-spinners';\nimport Success from 'components/general/success';\nimport { useAppSelector, useAppDispatch } from 'redux/hooks'\nimport { changeError, changeSuccess, selectError, selectSuccess } from 'redux/reducers/notificationSlice'\nimport Error from 'components/general/error';\nimport _ from 'lodash';\nimport { Member } from 'types/sdk';\nimport { SelectBalances } from 'redux/reducers/currencies';\nimport { Coins } from 'types';\nimport { useNavigate } from 'react-router-dom'\nimport Button from 'components/button';\nimport { selectContributors } from 'redux/reducers/contributors';\nimport { IuseContributor } from 'API/useContributors';\n\nconst Payroll = () => {\n    const history = useNavigate()\n\n    const contributors = useAppSelector(selectContributors).contributors\n\n    const balance = useAppSelector(SelectBalances)\n\n    const isSuccess = useAppSelector(selectSuccess)\n    const isError = useAppSelector(selectError)\n    const dispatch = useAppDispatch()\n\n    const [teams, setTeams] = useState<IuseContributor[]>([])\n\n    const memberState = useState<Member[]>([])\n\n\n    useEffect(() => {\n        if (contributors) {\n            setTeams(contributors)\n        }\n    }, [contributors])\n\n    const totalPrice: { [name: string]: number } = useMemo(() => {\n        if (contributors && balance.CELO) {\n            const list: Member[] = [];\n            contributors.forEach(team => {\n                team.members?.forEach(member => {\n                    list.push(member)\n                })\n            })\n            const first = Object.entries(_(list).groupBy('currency').value()).map(([currency, members]) => {\n                let totalAmount = members.reduce((acc, curr) => {\n                    if (new Date(curr.paymantDate).getMonth() !== new Date().getMonth()) {\n                        return acc;\n                    }\n                    let amount = parseFloat(curr.amount)\n                    if (curr.usdBase) {\n                        amount /= (balance[Coins[curr.currency as keyof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)\n                    }\n\n                    return acc + amount;\n                }, 0)\n\n                return {\n                    currency,\n                    totalAmount\n                }\n            })\n\n            const second = Object.entries(_(list).groupBy('secondaryCurrency').value()).filter(s => s[0] !== 'undefined').map(([currency, members]) => {\n                let totalAmount = members.reduce((acc, curr) => {\n                    if (new Date(curr.paymantDate).getMonth() !== new Date().getMonth()) {\n                        return acc;\n                    }\n                    let amount = (parseFloat(curr!.secondaryAmount!))\n                    if (curr.secondaryUsdBase) {\n                        amount /= (balance[Coins[curr.secondaryCurrency! as keyof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)\n                    }\n\n                    return acc + amount\n\n                }, 0)\n\n                return {\n                    currency,\n                    totalAmount\n                }\n            })\n\n            let res: any = {}\n\n            first.forEach((item) => {\n                console.log(item)\n                if (!res[item.currency]) {\n                    res[item.currency] = item.totalAmount\n                } else {\n                    res[item.currency] += item.totalAmount\n                }\n            })\n\n            second.forEach((item) => {\n                if (!res[item.currency]) {\n                    res[item.currency] = item.totalAmount\n                } else {\n                    res[item.currency] += item.totalAmount\n                }\n            })\n\n            return res\n        }\n    }, [contributors, balance])\n\n\n    return <div className=\"flex flex-col space-y-3\">\n        <div className=\"text-2xl font-bold pl-10\">\n            Payroll\n        </div>\n        <div className=\"rounded-xl shadow-custom px-10 pb-10 pt-6\">\n            <div className='flex flex-col space-y-3'>\n                <div className='flex space-x-2'>\n                    <div className='text-greylish opacity-90'>Total payout per month:</div>\n                    {totalPrice ? <div className='text-greylish'>\n                        {Object.entries(totalPrice).filter(s => s[1]).reduce((a, [currency, amount]) => {\n                            a += amount * (balance[Coins[currency as keyof typeof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)\n                            return a;\n                        }, 0).toFixed(2)} USD\n                    </div> : <div><ClipLoader /></div>}\n                </div>\n                <div className=\"flex justify-between\">\n                    <div className='grid grid-cols-2 gap-12'>\n                        {totalPrice ?\n                            Object.entries(totalPrice).filter(s => s[1]).map(([currency, amount]) => {\n                                return <div key={currency} className=\"flex space-x-2 relative h-fit\">\n                                    <div className=\"font-semibold text-xl\">{amount.toFixed(2)}</div>\n                                    <div className=\"font-semibold text-xl\">{Coins[currency as keyof typeof Coins].name}</div>\n                                    <div>\n                                        <img src={Coins[currency as keyof typeof Coins].coinUrl} className=\"w-[25px] h-[25px] rounded-full\" alt=\"\" />\n                                    </div>\n                                    <div className=\"absolute right-2 -bottom-6 text-sm text-greylish opacity-75 text-right\">\n                                        {(amount * (balance[Coins[currency as keyof typeof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)).toFixed(2)} USD\n                                    </div>\n                                </div>\n                            }) : <div className=\"flex py-1 justify-center\"><ClipLoader /></div>\n                        }\n                    </div>\n                    <div>\n                        <Button onClick={() => {\n                            history(\n                                {\n                                    pathname: '/masspayout',\n                                },\n                                {\n                                    state: {\n                                        memberList: memberState[0]\n                                    }\n                                })\n                        }}>\n                            Run Payroll\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"w-full shadow-custom px-5 pt-4 pb-6 rounded-xl\">\n            <div id=\"header\" className=\"hidden sm:grid grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] border-b border-black sm:pb-5 px-5\" >\n                <div className=\"font-normal\">Name</div>\n                <div className=\"font-normal hidden lg:block\">Amount</div>\n                <div className=\"font-normal\">Frequency</div>\n                <div className=\"font-normal\">Next Payment</div>\n            </div>\n            <div>\n                {teams.map(w => w && w.members && w.members.length > 0 ? <Fragment key={w.id}><TeamContainer {...w} memberState={memberState} /></Fragment> : undefined)}\n            </div>\n        </div>\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess({ activate: val }))} />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({ activate: val }))} />}\n    </div>\n}\n\nexport default Payroll;","import { useContractKit } from '@celo-tools/use-contractkit';\r\nimport { useRefetchData } from 'hooks';\r\nimport { useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\r\nimport { deleteBalance } from 'redux/reducers/currencies';\r\nimport { SelectSelectedAccount } from \"redux/reducers/selectedAccount\";\r\nimport { removeTransactions } from 'redux/reducers/transactions';\r\n\r\nexport default function Layout() {\r\n    const { kit } = useContractKit()\r\n\r\n    const [refetch] = useRefetchData()\r\n    const dispatch = useAppDispatch()\r\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            console.log((await kit.contracts.getStableToken()).methodIds)\r\n        })()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(removeTransactions())\r\n        dispatch(deleteBalance())\r\n        refetch()\r\n    }, [selectedAccount])\r\n\r\n    return <>\r\n        <Outlet />\r\n    </>;\r\n}\r\n","import { Dispatch, MutableRefObject, useEffect, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { Coins } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { Member } from \"../../types/sdk\";\nimport Dropdown from \"components/general/dropdown\";\nimport { CoinsName } from \"../../types\";\n\n\nconst TeamInput = (props: Member & { index: number, selectedId: string[], generalWallet: DropDownItem, setGeneralWallet: Dispatch<DropDownItem>, setSelectedId: Dispatch<string[]>, members: Array<Member & { selected: boolean }>, setMembers: Dispatch<Array<Member & { selected: boolean }>> }) => {\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>({ name: Coins[props.currency].name, type: Coins[props.currency].value, value: Coins[props.currency].value, coinUrl: Coins[props.currency].coinUrl })\n    const [selectedWallet2, setSelectedWallet2] = useState<DropDownItem>()\n\n    useEffect(() => {\n        if (props.secondaryCurrency) {\n            setSelectedWallet2({ name: Coins[props.secondaryCurrency].name, type: Coins[props.secondaryCurrency].value, value: Coins[props.secondaryCurrency].value, coinUrl: Coins[props.secondaryCurrency].coinUrl })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (selectedWallet && selectedWallet.value) {\n            updateValue({ val: '', wallet: true })\n        }\n    }, [selectedWallet])\n\n    useEffect(() => {\n        if (selectedWallet2 && selectedWallet2.value) {\n            updateValue({ val: '', wallet: true, is2: true })\n        }\n    }, [selectedWallet2])\n\n    const updateValue = ({ val, wallet = false, is2 = false, customWallet }: { val: string, wallet?: boolean, is2?: boolean, customWallet?: CoinsName }) => {\n        const arr = [...props.members]\n        const newArr = arr.reduce<Array<Member & { selected: boolean }>>((a, e) => {\n            if (e.id !== props.id) a.push(e)\n            else {\n                let newItem;\n                if (wallet && is2) {\n                    if (customWallet) {\n                        newItem = { ...e, secondaryCurrency: customWallet }\n                    } else {\n                        newItem = { ...e, secondaryCurrency: selectedWallet2!.value! }\n                    }\n                }\n                else if (!wallet && is2) {\n                    newItem = { ...e, secondaryAmount: val }\n                }\n                else if (wallet) {\n                    if (customWallet) {\n                        newItem = { ...e, currency: customWallet }\n                    } else {\n                        newItem = { ...e, currency: selectedWallet.value! }\n                    }\n                } else {\n                    newItem = { ...e, amount: val }\n                }\n                a.push(newItem)\n            }\n            return a;\n        }, [])\n        props.setMembers(newArr)\n    }\n\n    const updateTick = ({ tick }: { tick: boolean }) => {\n        if (!tick) {\n            props.setSelectedId(props.selectedId.filter(w => w !== props.id))\n        } else {\n            props.setSelectedId([...props.selectedId, props.id])\n        }\n    }\n\n    return <>\n        <div className=\"flex items-center\">\n            <input checked={props.selectedId.some(w => w === props.id)} className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" type=\"checkbox\" onChange={(e) => {\n                updateTick({ tick: e.target.checked })\n            }} />\n            <h2 className={`text-black px-3 py-1 name__${props.index} text-sm`}>{props.name}</h2>\n        </div>\n        <div className=\"flex items-center\">\n            <h2 className={`text-black py-1 rounded-md address__${props.index} text-sm truncate`}>{props.address}</h2>\n        </div>\n        {/* <div className=\"col-span-2 sm:col-span-1 flex border border-greylish rounded-md border-opacity-60\">\n            <input className=\"text-black py-1 outline-none ml-2 rounded-md w-full font-bold unvisibleArrow\" placeholder=\"Amount\" defaultValue={props.amount} type=\"number\" name={`amount__${props.index}`} min=\"0\" required step={'any'} onBlur={d => props.setSelectedId([...props.selectedId])} onChange={e => updateValue({ val: e.target.value })} />\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n        </div> */}\n        <div className={`col-span-2 sm:col-span-1 border text-black py-1 rounded-md grid ${props.usdBase ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={props.amount} type=\"number\" name={`amount__${props.index}`} onChange={(e) => {\n                updateValue({ val: e.target.value })\n            }} required step={'any'} min={0} />\n            {props.usdBase && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n        </div>\n        <div className=\"hidden sm:block\"></div>\n        <div></div>\n        <div></div>\n        {props.secondaryCurrency && selectedWallet2 ? <div className={`col-span-2 sm:col-span-1 border text-black py-1 rounded-md grid ${props.usdBase ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={props?.secondaryAmount} type=\"number\" name={`amount__${props.index}`} onChange={(e) => {\n                updateValue({ val: e.target.value, wallet: false, is2: true })\n            }} step={'any'} min={0} />\n            {props.usdBase && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet2} nameActivation={true} selected={selectedWallet2} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n        </div> : <div className=\"text-primary cursor-pointer text-sm\" onClick={() => {\n            setSelectedWallet2({ name: Coins[CoinsName.CELO].name, type: Coins[CoinsName.CELO].value, value: Coins[CoinsName.CELO].value, coinUrl: Coins[CoinsName.CELO].coinUrl })\n            updateValue({ val: '', wallet: true, is2: true, customWallet: CoinsName.CELO })\n        }}>+ Add another token</div>}\n        <div></div>\n    </>\n}\nexport default TeamInput;","import { useState, useEffect, SyntheticEvent } from \"react\";\nimport Dropdown from \"components/general/dropdown\";\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Success from \"components/general/success\";\nimport Error from \"components/general/error\";\nimport { DropDownItem } from \"types/dropdown\";\nimport { Member, MultipleTransactionData } from \"types/sdk\";\nimport { selectStorage } from \"redux/reducers/storage\";\nimport TeamInput from \"subpages/pay/teaminput\";\nimport { Coins} from \"types/coins\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { IBalanceItem, SelectBalances } from \"redux/reducers/currencies\";\nimport { changeError, selectError } from \"redux/reducers/notificationSlice\";\nimport { SelectSelectedAccount } from \"redux/reducers/selectedAccount\";\nimport { useRefetchData } from \"hooks\";\nimport Button from \"components/button\";\nimport { IMember } from \"API/useContributors\";\nimport usePay, { PaymentInput } from \"API/usePay\";\nimport useMultisig from \"API/useMultisig\";\nimport { selectContributors } from \"redux/reducers/contributors\";\n\n\nconst MassPay = () => {\n\n    const { state } = useLocation() as { state: { memberList?: Member[] } }\n    const memberList = state?.memberList\n\n    const storage = useAppSelector(selectStorage)\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n    const isError = useAppSelector(selectError)\n    const balance = useAppSelector(SelectBalances)\n    const router = useNavigate();\n    const dispatch = useAppDispatch()\n\n    const [refetch] = useRefetchData(true)\n\n    const { BatchPay, Pay } = usePay()\n    const { submitTransaction } = useMultisig()\n\n\n    const contributors = useAppSelector(selectContributors).contributors\n\n\n    const [isPaying, setIsPaying] = useState(false)\n    const [isSuccess, setSuccess] = useState(false)\n\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>();\n    const [selectedTeam, setSelectedTeam] = useState<DropDownItem | undefined>(memberList ? { name: \"Custom\", address: \"0\" } : undefined);\n\n    const [resMember, setResMember] = useState<Array<IMember & { selected: boolean }>>(memberList ? memberList.map(w => ({ ...w, selected: false })) : [])\n    const [members, setMembers] = useState<IMember[] | undefined>(memberList);\n    const [selectedId, setSelectedId] = useState<string[]>(memberList ? memberList.map(w => w.id) : []);\n\n    const [list, setList] = useState<Array<DropDownItem>>([]);\n\n\n    useEffect(() => {\n        if (balance && balance.CELO) {\n            setSelectedWallet({ name: \"Set all to\", address: \"\" })\n            const coins = Object.values(balance).map((coin: IBalanceItem) => ({\n                name: `${coin.amount.toFixed(3)} ${coin.coins.name}`,\n                type: coin.coins.value.toString(),\n                value: coin.coins.value,\n                coinUrl: coin.coins.coinUrl,\n                amount: coin.amount.toString(),\n            }))\n            setList(coins)\n        }\n    }, [balance])\n\n    useEffect(() => {\n        if (contributors && contributors.length && !memberList) {\n            setSelectedTeam({ name: contributors[0].name, address: contributors[0].id })\n        }\n    }, [contributors])\n\n    useEffect(() => {\n        if (contributors && contributors.length && selectedTeam && selectedTeam.address && selectedTeam.name.toLowerCase() !== \"custom\") {\n            const team = contributors.find(w => w.id === selectedTeam.address)\n            if (team && team.members) {\n                setResMember(team.members.map(w => ({ ...w, selected: false })))\n            }\n            setMembers(contributors.find(w => w.id === selectedTeam.address)!.members)\n        }\n    }, [selectedTeam, contributors])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        const result: Array<MultipleTransactionData> = []\n\n        const mems = resMember.filter(w => selectedId.includes(w.id))\n\n        if (mems.length) {\n            for (let index = 0; index < mems.length; index++) {\n                let amount;\n                if (mems[index].usdBase) {\n                    amount = (parseFloat(mems[index].amount) * (balance[Coins[mems[index].currency as keyof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)).toString()\n                } else {\n                    amount = mems[index].amount\n                }\n                result.push({\n                    toAddress: mems[index].address,\n                    amount,\n                    tokenName: mems[index].name\n                })\n\n                let secAmount = mems[index].secondaryAmount, secCurrency = mems[index].secondaryCurrency;\n\n                if (secAmount && secCurrency) {\n                    if (mems[index].secondaryAmount) {\n                        secAmount = (parseFloat(secAmount) * (balance[Coins[mems[index].secondaryCurrency as keyof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)).toString()\n                    }\n\n                    result.push({\n                        toAddress: mems[index].address,\n                        amount: secAmount,\n                        tokenName: secCurrency\n                    })\n                }\n            }\n        }\n\n        setIsPaying(true)\n\n        try {\n            if (storage!.accountAddress.toLowerCase() === selectedAccount.toLowerCase()) {\n                if (result.length === 1 && selectedWallet && selectedWallet.name) {\n                    await Pay({ coin: Coins[result[0].tokenName as keyof Coins], recipient: result[0].toAddress, amount: result[0].amount })\n                }\n                else if (result.length > 1) {\n                    const arr: Array<PaymentInput> = result.map(w => ({\n                        coin: Coins[w.tokenName as keyof Coins],\n                        recipient: w.toAddress,\n                        amount: w.amount\n                    }))\n\n                    await BatchPay(arr)\n                }\n            } else {\n                if (result.length === 1 && selectedWallet && selectedWallet.name) {\n                    await submitTransaction(selectedAccount, result[0].toAddress, result[0].amount, Coins[result[0].tokenName as keyof Coins])\n                }\n                else if (result.length > 1) {\n                    const arr: Array<PaymentInput> = result.map(w => ({\n                        coin: Coins[w.tokenName as keyof Coins],\n                        recipient: w.toAddress,\n                        amount: w.amount\n                    }))\n\n                    for (let i = 0; i < arr.length; i++) {\n                        await submitTransaction(selectedAccount, result[i].toAddress, result[i].amount, Coins[result[i].tokenName as keyof Coins])\n                    }\n                }\n            }\n            setSuccess(true);\n            refetch()\n\n        } catch (error: any) {\n            console.error(error)\n            dispatch(changeError({ activate: true, text: error?.data?.message.slice(0, 80) }));\n        }\n\n        setIsPaying(false);\n    }\n\n\n    return <div>\n        <form onSubmit={Submit}>\n            <div className=\"flex flex-col items-center justify-center min-h-screen\">\n                <div className=\"w-[95%] sm:w-[85vw] min-h-[75vh]\">\n                    <div className=\"w-full\">\n                        <div className=\"pl-14 text-xl font-semibold\">Mass Payout</div>\n                    </div>\n                    <div className=\" h-auto shadow-xl rounded-xl border flex flex-col gap-10 py-10\">\n                        {contributors && contributors.length === 0 ? <div className=\"flex justify-center\">No Team Yet. Please, first, create a team</div> : <><div className=\"flex flex-col px-4 sm:pl-12 sm:pr-[25%] gap-10\">\n                            <div className=\"flex flex-col space-y-3\">\n                                <span className=\"text-left text-sm font-semibold\">Paying From</span>\n                                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-3 sm:gap-x-10\">\n                                    {!(contributors && selectedTeam) ? <ClipLoader /> : <Dropdown className=\"h-full\" disableAddressDisplay={true} onSelect={setSelectedTeam} nameActivation={true} selected={selectedTeam} list={contributors.map(w => ({ name: w.name, address: w.id }))} />}\n                                    {/* {!(balance && balance.CELO && selectedWallet) ? <ClipLoader /> : <Dropdown onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={list} disableAddressDisplay={true} />} */}\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <div className=\"flex justify-between py-4 items-center\">\n                                    <span className=\"text-left font-semibold\">Team Details</span>\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"checkbox\" className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                                            if (e.target.checked) setSelectedId(resMember.map(w => w.id))\n                                            else setSelectedId([])\n                                        }} />\n                                        <div>\n                                            Select All\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"grid grid-cols-2 sm:grid-cols-[20%,42%,33%,5%] gap-5\">\n                                    <div className=\"hidden sm:block font-semibold\">Name</div>\n                                    <div className=\"hidden sm:block font-semibold\">Address</div>\n                                    <div className=\"hidden sm:block font-semibold\">Disbursement</div>\n                                    <div className=\"hidden sm:block\"></div>\n                                    {contributors && resMember && members && members.length > 0 ? resMember.map((w, i) => <TeamInput generalWallet={selectedWallet!} setGeneralWallet={setSelectedWallet} selectedId={selectedId} setSelectedId={setSelectedId} key={w.id} index={i} {...w} members={resMember} setMembers={setResMember} />) : 'No Member Yet'}\n                                </div>\n                            </div>\n                            <span className=\"text-lg\">Total: $ {Object.values(resMember.filter(s => selectedId.includes(s.id))).reduce((a, e, i) => {\n                                if (e.secondaryCurrency && e.secondaryAmount) {\n                                    if (e.secondaryUsdBase) {\n                                        a += parseFloat(e.secondaryAmount)\n                                    } else {\n                                        a += parseFloat(e.secondaryAmount) * (balance[Coins[e.secondaryCurrency as keyof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)\n                                    }\n                                }\n                                if (e.usdBase) return a + parseFloat(e.amount);\n                                return a + parseFloat(e.amount) * (balance[Coins[e.currency as keyof Coins].name as keyof typeof balance]?.tokenPrice ?? 1);\n                            }, 0).toFixed(2)}</span>\n                            <div className=\"flex flex-col\">\n                                <span className=\"text-left\">Description (Optional)</span>\n                                <div className=\"grid grid-cols-1\">\n                                    <textarea className=\"border-2 rounded-xl p-1 outline-none\" name=\"description\" id=\"\" cols={30} rows={5}></textarea>\n                                </div>\n                            </div>\n                        </div>\n                            <div className=\"flex justify-center\">\n                                <div className=\"flex flex-col-reverse sm:grid sm:grid-cols-2 w-[400px] justify-center gap-5\">\n                                    <Button version=\"second\" onClick={() => router(-1)}>Close</Button>\n                                    <Button type=\"submit\" isLoading={isPaying}>Pay</Button>\n                                </div>\n                            </div> </>}\n                    </div>\n                </div>\n            </div>\n        </form>\n        {isSuccess && <Success onClose={setSuccess} onAction={() => { router(-1) }} />}\n        {isError && <Error onClose={(val) => dispatch(changeError({ activate: false, text: '' }))} />}\n    </div>\n\n}\n\nexport default MassPay;","import { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport { selectStorage } from \"./redux/reducers/storage\";\nimport { selectUnlock } from \"./redux/reducers/unlock\";\nimport { lazy, Suspense } from 'react'\nimport { ClipLoader } from \"react-spinners\";\n\nimport CreateAccount from \"./pages/create-account\"\nimport Unlock from \"./pages/unlock\";\nimport Home from \"./pages/home\";\nimport Payroll from \"pages/dashboard/payroll\";\nimport Layout from \"pages/dashboard/layout\";\nimport MassPay from \"pages/masspay/masspay\";\n\nconst Pay = lazy(() => import(\"pages/pay\"));\nconst SettingLayout = lazy(() => import(\"pages/dashboard/settings\"));\nconst OwnerSetting = lazy(() => import(\"pages/dashboard/settings/owner\"));\nconst SpendingSetting = lazy(() => import(\"pages/dashboard/settings/spending\"));\nconst ProfileSetting = lazy(() => import(\"pages/dashboard/settings/profile\"));\nconst Dashboard = lazy(() => import(\"./pages/dashboard\"));\nconst Main = lazy(() => import(\"./pages/dashboard/main\"));\nconst Transactions = lazy(() => import(\"./pages/dashboard/transactions\"));\nconst Assets = lazy(() => import(\"./pages/dashboard/assets\"));\nconst Contributors = lazy(() => import(\"./pages/dashboard/contributors\"));\nconst Details = lazy(() => import(\"./pages/dashboard/transactions/details\"));\nconst Swap = lazy(() => import(\"./pages/dashboard/swap/index\"));\n\n\nfunction App() {\n  const { address } = useContractKit();\n  const unlock = useSelector(selectUnlock)\n  const storage = useSelector(selectStorage)\n\n  return (\n    <div>\n      <Suspense fallback={<div className=\"h-screen w-full flex justify-center items-center\"><ClipLoader /></div>}>\n        <Routes>\n          <Route path=\"/\" element={\n            <LockIfUserIn unlock={unlock} storage={!!address && !!storage}>\n              <Home />\n            </LockIfUserIn>\n          } />\n          <Route path=\"/create-account\" element={<CreateAccount />} />\n          <Route path=\"/unlock\" element={<Unlock />} />\n          <Route path={'/pay'} element={\n            <ProtectUser unlock={unlock} storage={!!address && !!storage}>\n              <Pay />\n            </ProtectUser>} />\n          <Route path={'/masspayout'} element={\n            <ProtectUser unlock={unlock} storage={!!address && !!storage}>\n              <MassPay />\n            </ProtectUser>} />\n          <Route path=\"/dashboard\" element={<Layout />} >\n            <Route path=\"\" element={\n              <ProtectUser unlock={unlock} storage={!!address && !!storage}>\n                <Suspense fallback={<div className=\"h-screen w-full flex justify-center items-center\"><ClipLoader /></div>}>\n                  <Dashboard />\n                </Suspense>\n              </ProtectUser>} >\n\n              <Route path=\"\" element={<Main />} />\n              <Route path=\"transactions\" element={<Transactions />} />\n              <Route path=\"assets\" element={<Assets />} />\n              <Route path=\"contributors\" element={<Contributors />} />\n              <Route path=\"swap\" element={<Swap />} />\n              <Route path=\"payroll\" element={<Payroll />} />\n              <Route path={'transactions/:id'} element={<Details />} />\n              <Route path={'settings'} element={\n                <SettingLayout />\n              }>\n                <Route path={''} element={<OwnerSetting />} />\n                <Route path={`spending`} element={<SpendingSetting />} />\n                <Route path={`profile`} element={<ProfileSetting />} />\n              </Route>\n            </Route>\n          </Route>\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n\n\nconst LockIfUserIn = ({ unlock, storage, children }: { unlock: boolean, storage: boolean, children: JSX.Element }) => {\n  if (!unlock && storage) return <Navigate to={'/unlock'} replace />;\n  if (unlock && storage) return <Navigate to={'/dashboard'} replace />;\n\n  return children;\n}\n\nconst ProtectUser = ({ unlock, storage, children }: { unlock: boolean, storage: boolean, children: JSX.Element }) => {\n  if (!unlock && !storage) return <Navigate to={'/'} replace />;\n  if (!unlock && storage) return <Navigate to={'/unlock'} replace />;\n\n  return children;\n}\n\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport Notification from './reducers/notificationSlice'\nimport Storage from './reducers/storage'\nimport Unlock from './reducers/unlock'\nimport Currency from './reducers/currencies'\nimport Toggle from './reducers/toggles'\nimport Transaction from './reducers/transactions'\nimport SelectedAcount from './reducers/selectedAccount'\nimport Multisig from './reducers/multisig'\nimport Contributors from './reducers/contributors'\nimport { accountAPI, customerAPI, teamAPI, transactionAPI, teamMemberAPI, BlockScoutApi, swapAPI, multisigAPI } from './api'\n\nconst store = configureStore({\n    reducer: {\n        currencyandbalance: Currency,\n        notification: Notification,\n        storage: Storage,\n        unlock: Unlock,\n        toggle: Toggle,\n        transactionsStore: Transaction,\n        selectedAccount: SelectedAcount,\n        multisig: Multisig,\n        contributors: Contributors,\n        [accountAPI.reducerPath]: accountAPI.reducer,\n        [customerAPI.reducerPath]: customerAPI.reducer,\n        [swapAPI.reducerPath]: swapAPI.reducer,\n        [teamAPI.reducerPath]: teamAPI.reducer,\n        [teamMemberAPI.reducerPath]: teamMemberAPI.reducer,\n        [transactionAPI.reducerPath]: transactionAPI.reducer,\n        [BlockScoutApi.reducerPath]: BlockScoutApi.reducer,\n        [multisigAPI.reducerPath]: multisigAPI.reducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({ serializableCheck: false }).concat(accountAPI.middleware, customerAPI.middleware, transactionAPI.middleware, teamAPI.middleware, teamMemberAPI.middleware, BlockScoutApi.middleware, swapAPI.middleware, multisigAPI.middleware),\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = typeof store.dispatch\n\nexport default store;","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport './dist/index.css';\nimport App from './App';\nimport { ContractKitProvider, Mainnet } from '@celo-tools/use-contractkit';\nimport '@celo-tools/use-contractkit/lib/styles.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nrender(\n  <StrictMode>\n    <ContractKitProvider\n      dapp={{\n        name: 'My awesome dApp',\n        icon: \"http://localhost:3000/favicon.png\",\n        description: 'My awesome description',\n        url: 'http://localhost:3000',\n      }}\n      networks={[Mainnet]}\n    >\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </ContractKitProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { IuseContributor } from 'API/useContributors';\r\nimport { decryptMessage } from 'utils/hashing';\r\nimport { RootState } from '../store';\r\n\r\nconst initialState: { contributors: IuseContributor[]; isFetched: boolean } = {\r\n\tcontributors: [],\r\n\tisFetched: false\r\n};\r\n\r\nexport const contributorSlice = createSlice({\r\n\tname: 'contributors',\r\n\tinitialState: initialState,\r\n\treducers: {\r\n\t\taddContributor: (state, action) => {\r\n\t\t\tif (action.payload !== undefined) {\r\n\t\t\t\tstate.contributors.push(...action.payload);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetContributors: (state, action: { payload: { data: IuseContributor[]; secretKey?: string } }) => {\r\n\t\t\tif (action.payload.secretKey !== undefined) {\r\n\t\t\t\tconst teams = action.payload.data.map((contributor) => ({\r\n\t\t\t\t\t...contributor,\r\n\t\t\t\t\tmembers: contributor.members.map((member) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...member,\r\n\t\t\t\t\t\t\tname: decryptMessage(member.name, action.payload.secretKey),\r\n\t\t\t\t\t\t\tamount: decryptMessage(member.amount, action.payload.secretKey),\r\n\t\t\t\t\t\t\tsecondaryAmount: member.secondaryAmount\r\n\t\t\t\t\t\t\t\t? decryptMessage(member.secondaryAmount, action.payload.secretKey)\r\n\t\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\t\t\taddress: decryptMessage(member.address, action.payload.secretKey)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t}));\r\n\t\t\t\tstate.contributors = teams;\r\n\t\t\t\tif (!state.isFetched) {\r\n\t\t\t\t\tstate.isFetched = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tremoveContributor: (state, action) => {\r\n\t\t\tif (action.payload !== undefined) {\r\n\t\t\t\tstate.contributors = state.contributors.filter((contributor) => contributor.id !== action.payload);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const { addContributor, setContributors, removeContributor } = contributorSlice.actions;\r\n\r\nexport const selectContributors = (state: RootState) => state.contributors;\r\n\r\nexport default contributorSlice.reducer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { IUser } from '../firebase';\r\nimport { useFirestoreSearchField } from '../API/useFirebase';\r\n\r\nexport default function useAuth(address: string | null) {\r\n    const { search, isLoading } = useFirestoreSearchField<IUser>()\r\n    const [user, setUser] = useState<IUser>();\r\n\r\n    useEffect(() => {\r\n        if (address) {\r\n            search('users', 'address', address)\r\n                .then(user => {\r\n                    if (user) {\r\n                        setUser(user[0])\r\n                    }\r\n                })\r\n        }\r\n    }, [])\r\n\r\n\r\n    return { isLoading, user };\r\n}\r\n","import { useContractKit } from '@celo-tools/use-contractkit';\r\nimport { StableToken } from '@celo/contractkit';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const tokenAdresses = [\r\n    {\r\n        \"tokenName\": \"UBE\",\r\n        \"address\": \"0x00Be915B9dCf56a3CBE739D9B9c202ca692409EC\"\r\n    },\r\n    {\r\n        \"tokenName\": \"MOO\",\r\n        \"address\": \"0x17700282592D6917F6A73D0bF8AcCf4D578c131e\"\r\n    },\r\n    {\r\n        \"tokenName\": \"MOBI\",\r\n        \"address\": \"0x73a210637f6F6B7005512677Ba6B3C96bb4AA44B\"\r\n    },\r\n    {\r\n        \"tokenName\": \"POOF\",\r\n        \"address\": \"0x00400FcbF0816bebB94654259de7273f4A05c762\"\r\n    },\r\n]\r\n\r\nexport default function useBalance(address: string) {\r\n    const { kit } = useContractKit()\r\n    const [fetchedBalance, setFetchedBalance] = useState<{ [name: string]: string }>()\r\n    const [isLoading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchBalance()\r\n    },[])\r\n\r\n    const fetchBalance = async () => {\r\n        if (!kit.defaultAccount) return null;\r\n        try {\r\n            let balances: { [name: string]: string } = {};\r\n            setLoading(true)\r\n            for (const item of tokenAdresses) {\r\n\r\n                const ethers = await kit.contracts.getErc20(item.address);\r\n                let balance = await ethers.balanceOf(address);\r\n                let bnBalance = kit.web3.utils.toBN(balance.toString());\r\n                let altcoinBalance = kit.web3.utils.fromWei(bnBalance.toString(), 'ether');\r\n\r\n                balances = Object.assign(balances, { [item.tokenName]: altcoinBalance });\r\n            }\r\n\r\n            let stabletokenEUR = await kit.contracts.getStableToken(StableToken.cEUR);\r\n            let balanceEUR = await stabletokenEUR.balanceOf(address);\r\n            let bnEUR = kit.web3.utils.toBN(balanceEUR.toString());\r\n            let cEUR = kit.web3.utils.fromWei(bnEUR.toString(), 'ether');\r\n\r\n\r\n            let stabletokenREAL = await kit.contracts.getStableToken(StableToken.cREAL);\r\n            let balanceREAL = await stabletokenREAL.balanceOf(address);\r\n            let bnREAL = kit.web3.utils.toBN(balanceREAL.toString());\r\n            let cREAL = kit.web3.utils.fromWei(bnREAL.toString(), 'ether');\r\n\r\n            let goldtoken = await kit.contracts.getGoldToken();\r\n            let balanceGoldtoken = await goldtoken.balanceOf(address);\r\n            let bnGold = kit.web3.utils.toBN(balanceGoldtoken.toString());\r\n            let CELO = kit.web3.utils.fromWei(bnGold.toString(), 'ether');\r\n\r\n            let stabletokenUSD = await kit.contracts.getStableToken();\r\n            let balanceUSD = await stabletokenUSD.balanceOf(address);\r\n            let bnUSD = kit.web3.utils.toBN(balanceUSD.toString());\r\n            let cUSD = kit.web3.utils.fromWei(bnUSD.toString(), 'ether');\r\n\r\n            setFetchedBalance({ CELO, cREAL, cUSD, cEUR, ...balances })\r\n            setLoading(false)\r\n            return { CELO, cREAL, cUSD, cEUR, ...balances };\r\n        } catch (e) {\r\n            console.error(e)\r\n            setLoading(false)\r\n            throw new Error(\"Error fetching balance\");\r\n        }\r\n    }\r\n\r\n    return { fetchBalance, fetchedBalance, isLoading };\r\n}\r\n","import { useFirestoreReadMultiple } from \"./useFirebase\";\r\n\r\nexport interface IuseCurrency {\r\n    name: string;\r\n    percent_24: number;\r\n    price: number;\r\n}\r\n\r\nexport default function useCurrency() {\r\n    const { data } = useFirestoreReadMultiple<IuseCurrency>(\"currencies\", \"price\", \">\", 0)\r\n\r\n    return data;\r\n}\r\n","import useContributors from 'API/useContributors'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectContributors, setContributors } from 'redux/reducers/contributors'\nimport { setTimeout } from 'timers'\nimport useBalance from '../API/useBalance'\nimport useCurrency from '../API/useCurrency'\nimport { useLazyGetTransactionsQuery } from '../redux/api'\nimport { updateAllCurrencies, updateUserBalance } from '../redux/reducers/currencies'\nimport { SelectSelectedAccount } from '../redux/reducers/selectedAccount'\nimport { selectStorage } from '../redux/reducers/storage'\nimport { SelectTransactions, setTransactions } from '../redux/reducers/transactions'\nimport { Coins } from '../types/coins'\nimport { GetBalanceResponse, MultisigBalanceResponse } from '../types/sdk'\n\nconst useRefetchData = (disableInterval = false) => {\n    const dispatch = useDispatch()\n    const storage = useSelector(selectStorage)\n    const selectedAccount = useSelector(SelectSelectedAccount)\n    const transactionStore = useSelector(SelectTransactions)\n\n    const fetchedCurrencies = useCurrency()\n    const contributors = useContributors()\n    const { fetchBalance, fetchedBalance, isLoading: balanceLoading } = useBalance(selectedAccount)\n\n    const [transactionTrigger, { data: transactionData, isFetching: transactionFetching }] = useLazyGetTransactionsQuery()\n\n    useEffect(() => {\n        if (transactionData && transactionData.result.length > 0 && !transactionFetching) {\n            if (transactionStore?.result[0].hash !== transactionData.result[0].hash || transactionStore?.result[transactionStore.result.length - 1].hash !== transactionData.result[transactionData.result.length - 1].hash) {\n                dispatch(setTransactions(transactionData))\n            }\n        } else if (transactionData && transactionData.result.length === 0) dispatch(setTransactions(transactionData))\n    }, [transactionData, transactionFetching])\n\n    useEffect(() => {\n        if (contributors) {\n            setTimeout(() => {\n                dispatch(setContributors({ data: contributors, secretKey: storage?.encryptedMessageToken }))\n            }, 1500)\n        }\n    }, [contributors])\n\n    useEffect(() => {\n        if (fetchedCurrencies && fetchedCurrencies.length > 0 && ((storage?.accountAddress === selectedAccount && fetchedBalance && !balanceLoading) || (storage?.accountAddress !== selectedAccount))) {\n\n            const celo = fetchedCurrencies.find(c => c.name === 'CELO')\n            const cusd = fetchedCurrencies.find(c => c.name === 'cUSD')\n            const ceur = fetchedCurrencies.find(c => c.name === 'cEUR')\n            const ube = fetchedCurrencies.find(c => c.name === 'UBE')\n            const moo = fetchedCurrencies.find(c => c.name === 'MOO')\n            const mobi = fetchedCurrencies.find(c => c.name === 'MOBI')\n            const poof = fetchedCurrencies.find(c => c.name === 'POOF')\n            const creal = fetchedCurrencies.find(c => c.name === 'cREAL')\n\n            if (fetchedBalance) {\n                let balance = fetchedBalance as { [name: string]: string; } | undefined;\n\n                if (balance && celo && cusd && ceur && ube && moo && mobi && poof && creal) {\n\n                    let pCelo;\n                    let pCusd;\n                    let pCeur;\n                    let pUbe;\n                    let pMoo;\n                    let pMobi;\n                    let pPoof;\n                    let pReal;\n                    balance = balance as GetBalanceResponse;\n                    pCelo = parseFloat(balance.CELO);\n                    pCusd = parseFloat(balance.cUSD);\n                    pCeur = parseFloat(balance.cEUR);\n                    pUbe = parseFloat(balance.UBE);\n                    pMoo = parseFloat(balance.MOO);\n                    pMobi = parseFloat(balance.MOBI);\n                    pPoof = parseFloat(balance.POOF);\n                    pReal = parseFloat(balance.cREAL);\n\n\n                    const celoPrice = pCelo * (celo.price ?? 0);\n                    const cusdPrice = pCusd * (cusd.price ?? 0);\n                    const ceurPrice = pCeur * (ceur.price ?? 0);\n                    const ubePrice = pUbe * (ube.price ?? 0);\n                    const mooPrice = pMoo * (moo.price ?? 0);\n                    const mobiPrice = pMobi * (mobi.price ?? 0);\n                    const poofPrice = pPoof * (poof.price ?? 0);\n                    const cRealPrice = pReal * (creal.price ?? 0);\n\n                    const total = celoPrice + cusdPrice + mooPrice + + ceurPrice + ubePrice + mobiPrice + poofPrice + cRealPrice;\n\n                    const updatedBalance = [\n                        { amount: pCelo, per_24: celo.percent_24, percent: (celoPrice * 100) / total, coins: Coins.CELO, tokenPrice: +celo.price },\n                        { amount: pCusd, per_24: cusd.percent_24, percent: (cusdPrice * 100) / total, coins: Coins.cUSD, tokenPrice: +cusd.price },\n                        { amount: pCeur, per_24: ceur.percent_24, percent: (ceurPrice * 100) / total, coins: Coins.cEUR, tokenPrice: +ceur.price },\n                        { amount: pUbe, per_24: ube.percent_24, percent: (ubePrice * 100) / total, coins: Coins.UBE, tokenPrice: +ube.price },\n                        { amount: pMoo, per_24: moo.percent_24, percent: (mooPrice * 100) / total, coins: Coins.MOO, tokenPrice: +moo.price },\n                        { amount: pMobi, per_24: mobi.percent_24, percent: (mobiPrice * 100) / total, coins: Coins.MOBI, tokenPrice: +mobi.price },\n                        { amount: pPoof, per_24: poof.percent_24, percent: (poofPrice * 100) / total, coins: Coins.POOF, tokenPrice: +poof.price },\n                        { amount: pReal, per_24: creal.percent_24, percent: (cRealPrice * 100) / total, coins: Coins.cREAL, tokenPrice: +creal.price }\n                    ]\n\n                    dispatch(updateUserBalance(updatedBalance))\n                }\n            }\n        }\n\n    }, [fetchedBalance, balanceLoading])\n\n    useEffect(() => {\n        fetching()\n    }, [fetchedCurrencies])\n\n    const fetching = async () => {\n        if (fetchedCurrencies && fetchedCurrencies.length > 0) {\n            dispatch(updateAllCurrencies(\n                fetchedCurrencies\n            ))\n\n            fetchBalance()\n        }\n\n    }\n\n    useEffect(() => {\n        const execution = () => transactionTrigger(selectedAccount).unwrap().catch(() => { transactionTrigger(selectedAccount).unwrap().catch((error) => { console.error(error) }) })\n        execution()\n        let timer = setInterval(() => {\n            execution()\n        }, 10000)\n\n        return () => { clearInterval(timer) }\n    }, [selectedAccount])\n\n    return [fetching];\n}\n\nexport default useRefetchData;","import { IoIosArrowDown } from 'react-icons/io'\nimport { Dispatch, forwardRef, useEffect, useRef, useState } from 'react'\nimport { DropDownItem } from '../../types/dropdown'\nimport { MouseEventHandler } from 'react'\nimport { CoinsURL } from '../../types/coins'\nimport { ClipLoader } from 'react-spinners'\nimport useModalSideExit from '../../hooks/useModalSideExit'\nimport { motion } from \"framer-motion\";\n\nconst variants = {\n    close: {\n        height: 0,\n        transition: {\n            staggerChildren: 0,\n            duration: 0\n        }\n    }, \n    open: {\n        height: \"auto\",\n        transition: {\n            staggerChildren: 0.2,\n            type: 'tween'\n        }\n    }\n}\n\nconst Li = forwardRef<HTMLLIElement, { children: Array<any> | any, onClick: MouseEventHandler, className: string }>(({ children, onClick, className }, ref) => <li ref={ref} onClick={onClick} className={`${className} text-left border px-3 py-2 bg-white hover:bg-gray-200 cursor-pointer`}>{children}</li>)\n\nconst Viewer = ({ displayName, name, address, coinUrl, className, disableAddressDisplay }: { displayName?: string, name: string, address?: string, coinUrl?: CoinsURL, className?: string, disableAddressDisplay?: boolean }) => <div className=\"flex flex-col\">\n    <div className=\"flex flex-col\">\n        {displayName && <div className=\"items-center text-sm text-greylish opacity-80\">\n            {displayName}\n        </div>}\n        <div className=\"text-left flex space-x-2 items-center\">\n            {coinUrl && <div><img src={coinUrl} className={coinUrl ? `w-[20px] h-[20px]` : ''} alt=\"\" /></div>}\n            <div className={`${className ?? ''} font-normal truncate`} title={name}>{name}</div>\n        </div>\n    </div>\n    {!disableAddressDisplay && <div className={`text-left text-[10px] text-gray-500`}>{!address?.startsWith('0x') ? address : address.split('').reduce((a, c, i, arr) => {\n        return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n    }, '')}</div>}\n</div>\n\nconst Dropdown = ({ selected, list, nameActivation = false, onSelect, className, loader = false, disableAddressDisplay = false, parentClass = '', childClass = '', displayName, onChange }: { disableAddressDisplay?: boolean, parentClass?: string, className?: string, selected: DropDownItem, list: Array<DropDownItem>, nameActivation?: boolean, onSelect?: Dispatch<DropDownItem>, onChange?: Function, loader?: boolean, childClass?: string, displayName?: string }) => {\n    const [isOpen, setOpen] = useState(false)\n    const liRef = useRef<HTMLLIElement>()\n    const [liHeight, setLiHeight] = useState(0)\n    const customRef = useModalSideExit(isOpen, setOpen)\n\n    useEffect(() => {\n        if (liRef.current && liHeight === 0) {\n            setLiHeight(liRef.current.offsetHeight)\n        }\n    })\n\n    return (\n        <div className={`relative ${parentClass} `}>\n            <div onClick={() => list?.length > 0 ? setOpen(!isOpen) : null} className={`flex ${className || ''} ${loader ? 'justify-center' : 'justify-between'} items-center border rounded-xl ${isOpen && 'rounded-b-none'} py-2 px-3 cursor-pointer`}>\n                {!loader ? <div className=\"truncate\">\n                    {Viewer({ name: selected.name, address: selected?.address ?? selected?.amount, coinUrl: selected?.coinUrl, className: selected?.className, disableAddressDisplay: disableAddressDisplay, displayName })}\n                </div> : <ClipLoader />}\n                {list && list.length > 0 && <div>\n                    <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n                </div>}\n            </div>\n            {<motion.div variants={variants} initial={\"close\"} animate={isOpen ? \"open\" : \"close\"} ref={customRef} className=\"absolute left-0 bottom-0 translate-y-full z-10 w-full overflow-hidden\">\n                <ul id=\"ala\" className=\"flex flex-col overflow-y-auto \" style={list.length > 5 ?\n                    { height: window.outerWidth > 768 ? `${liHeight * 5}px` : `${liHeight * 3}px` }\n                    :\n                    { height: 'auto' }\n                }>\n                    {list?.filter((w) => {\n                        if (!nameActivation) {\n                            return w?.address !== selected?.address\n                        } else if (w.name) {\n                            return w?.name !== selected?.name\n                        } else if (w.id) {\n                            return w?.id !== selected?.id\n                        }\n\n                    })?.map((w: DropDownItem, i) => {\n                        const obj: { ref?: any } = {}\n                        if (i === 0) {\n                            obj.ref = liRef\n                        }\n                        return <Li {...obj} key={w.name} className={childClass} onClick={() => {\n                            if (w.onClick) {\n                                w.onClick()\n                                setOpen(false)\n                                return\n                            }\n                            onSelect!(w);\n                            setOpen(false);\n                            onChange?.(w, selected);\n                        }}>\n                            {Viewer({ name: w?.name, address: w?.address ?? w?.amount, coinUrl: w?.coinUrl, className: w?.className, disableAddressDisplay })}\n                        </Li>\n                    }\n                    )}\n                </ul>\n            </motion.div>}\n        </div>\n    )\n}\n\nexport default Dropdown;","import { auth } from \"firebase\";\r\nimport { useFirestoreReadMultiple } from \"API/useFirebase\";\r\nimport { CoinsName } from \"types\";\r\nimport { selectStorage } from \"redux/reducers/storage\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport enum DateInterval {\r\n  weakly = \"weekly\",\r\n  monthly = \"monthly\",\r\n}\r\n\r\nexport interface IuseContributor {\r\n  id: string;\r\n  userId: string;\r\n  name: string;\r\n  timestamp: number;\r\n  members: IMember[]\r\n}\r\n\r\nexport interface IMember {\r\n  id: string;\r\n  name: string,\r\n  address: string,\r\n  currency: CoinsName,\r\n  amount: string,\r\n  teamId: string,\r\n  paymantDate: string,\r\n  interval: DateInterval,\r\n  usdBase: boolean,\r\n  secondaryCurrency?: CoinsName,\r\n  secondaryAmount?: string,\r\n  secondaryUsdBase?: boolean,\r\n\r\n}\r\n\r\nexport default function useContributors() {\r\n  const storage = useSelector(selectStorage)\r\n  const { data } = useFirestoreReadMultiple<IuseContributor>(\"contributors\", \"userId\", \"==\", storage?.uid);\r\n\r\n\r\n  return data;\r\n}\r\n","import { Dispatch } from \"react\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { selectSuccessText } from \"../../redux/reducers/notificationSlice\";\nimport Button from \"../button\";\n\nconst Success = ({ onClose, className, onAction }: { onClose: Dispatch<boolean>, className?: string, onAction?: () => void }) => {\n    const title = useAppSelector(selectSuccessText)\n\n    return <div className={`absolute flex flex-col top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-10 py-5 shadow-xl gap-8 z-[100] ${className}`}>\n        <div className=\"flex justify-center relative\">\n            <div className=\"absolute -right-7 top-1 cursor-pointer text-gray-400\" onClick={() => onClose(false)}>X</div>\n            <img src=\"/success.svg\" alt=\"\" />\n        </div>\n        <div className=\"flex justify-center\">{title}</div>\n        <Button className=\"px-16 py-4 font-bold\" onClick={() => { if (onAction) onAction(); onClose(false); }}>\n            Close\n        </Button>\n    </div>\n}\n\n\nexport default Success;","import { Dispatch } from \"react\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { selectErrorText } from \"../../redux/reducers/notificationSlice\";\nimport Button from \"../button\";\n\n\nconst Error = ({ onClose }: { onClose: Dispatch<boolean> }) => {\n    const title = useAppSelector(selectErrorText)\n\n    return <div className=\"absolute flex flex-col top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-10 py-5 shadow-xl gap-8 z-[100]\">\n        <div className=\"flex justify-center relative\">\n            <div className=\"absolute -right-7 top-1 cursor-pointer text-gray-400\" onClick={() => onClose(false)}>X</div>\n            <img src=\"/icons/error.svg\" width=\"200\" alt=\"\" />\n        </div>\n        <div className=\"flex justify-center\">{title}</div>\n        <Button className=\"px-16 py-4 font-bold\" onClick={() => onClose(false)}>\n            Close\n        </Button>\n    </div>\n}\n\n\nexport default Error;","import { Dispatch, useCallback, useEffect, useRef } from \"react\"\n\n\nconst useModalSideExit = (isSetting: boolean, setSetting: Dispatch<boolean>) => {\n    const settingRef = useRef<HTMLDivElement>(null)\n    const click = useCallback((e) => {\n        if (isSetting && settingRef.current && !settingRef.current.contains(e.target)) {\n            setSetting(false)\n        }\n    }, [isSetting])\n\n    useEffect(() => {\n        window.addEventListener('click', click)\n\n        return () => window.removeEventListener('click', click)\n    }, [click, settingRef])\n\n    return settingRef;\n}\n\nexport default useModalSideExit;","import { useContractKit } from '@celo-tools/use-contractkit';\r\nimport { toTransactionObject } from '@celo/connect';\r\nimport { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SelectSelectedAccount } from 'redux/reducers/selectedAccount';\r\nimport { selectStorage } from 'redux/reducers/storage';\r\nimport { auth } from '../firebase';\r\nimport { FirestoreWrite, useFirestoreRead } from './useFirebase';\r\nimport { selectMultisigTransactions, setInternalSign, setSign, setTransactions } from \"../redux/reducers/multisig\"\r\nimport { AltCoins, Coins } from 'types';\r\nimport { StableToken } from '@celo/contractkit';\r\nimport { stringToSolidityBytes } from '@celo/contractkit/lib/wrappers/BaseWrapper';\r\n\r\nexport enum MethodIds {\r\n    \"0x173825d9\" = 'removeOwner',\r\n    \"0xe20056e6\" = 'replaceOwner',\r\n    \"0x7065cb48\" = 'addOwner',\r\n    \"0xa9059cbb\" = 'transfer',\r\n    \"0x2e6c3721\" = 'changeInternalRequirement',\r\n    \"0xba51a6df\" = 'changeRequirement'\r\n}\r\n\r\nexport interface Transaction {\r\n    destination: string,\r\n    data?: string,\r\n    executed: boolean,\r\n    confirmations: string[],\r\n    value: string,\r\n    id?: number,\r\n    requiredCount?: string,\r\n    owner?: string,\r\n    newOwner?: string,\r\n    valueOfTransfer?: string,\r\n    method?: string\r\n}\r\n\r\nexport default function useMultisig() {\r\n    let selectedAccount = useSelector(SelectSelectedAccount)\r\n    const storage = useSelector(selectStorage)\r\n    const { kit, address } = useContractKit()\r\n    const [isLoading, setLoading] = useState(false)\r\n    const { data } = useFirestoreRead<{ addresses: { name: string, address: string }[] }>(\"multisigs\", auth.currentUser!.uid)\r\n    const [transactions, setTransactions] = useState<Transaction[]>()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isMultisig = selectedAccount.toLowerCase() !== storage!.accountAddress.toLowerCase()\r\n\r\n    const FetchTransactions = async (multisigAddress: string, skip: number, take: number) => {\r\n        setLoading(true)\r\n        let transactionArray: Transaction[] = []\r\n        let obj: Transaction;\r\n        try {\r\n            const kitMultiSig = await kit.contracts.getMultiSig(multisigAddress);\r\n            let total = await kitMultiSig.getTransactionCount(true, true)\r\n            if (total > skip) {\r\n                total -= skip;\r\n            }\r\n            let limit = total - take - 1 > 0 ? total - take - 1 : 0;\r\n            for (let index = total - 1; index > limit; index--) {\r\n                let tx = await kitMultiSig.getTransaction(index)\r\n\r\n                if (!tx || (tx && !tx['data'])) continue;\r\n\r\n                obj = {\r\n                    destination: tx.destination,\r\n                    data: tx.data,\r\n                    executed: tx.executed,\r\n                    confirmations: tx.confirmations,\r\n                    value: tx.value.toString(),\r\n                }\r\n\r\n                let value = kit.web3.utils.fromWei(tx.value.toString(), 'ether')\r\n                obj.value = value\r\n                obj.id = index\r\n                obj.requiredCount = \"\"\r\n                obj.owner = \"\"\r\n                obj.newOwner = \"\"\r\n                obj.valueOfTransfer = \"\"\r\n\r\n                let methodId = tx.data.slice(0, 10)\r\n                obj.method = MethodIds[methodId as keyof typeof MethodIds]\r\n\r\n                if (methodId == \"0x2e6c3721\" || methodId == \"0xba51a6df\") {\r\n                    obj.requiredCount = tx.data.slice(tx.data.length - 2)\r\n                } else {\r\n                    obj.owner = \"0x\" + tx.data.slice(35, 74);\r\n\r\n                    if (methodId == \"0xe20056e6\") obj.newOwner = \"0x\" + tx.data.slice(98)\r\n                    if (methodId == \"0xa9059cbb\") {\r\n                        let hex = tx.data.slice(100).replace(/^0+/, '')\r\n                        let value = parseInt(hex, 16)\r\n                        obj.valueOfTransfer = kit.web3.utils.fromWei(value.toString(), 'ether')\r\n                    }\r\n                }\r\n\r\n                delete obj.data\r\n                transactionArray.push(obj)\r\n            }\r\n            setLoading(false)\r\n            setTransactions(transactionArray)\r\n            return transactionArray\r\n        } catch (e: any) {\r\n            console.error(e)\r\n            setLoading(false)\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n\r\n    const importMultisigAccount = async (contractAddress: string, name = \"\") => {\r\n        setLoading(true)\r\n        try {\r\n            const multiSig = await kit.contracts.getMultiSig(contractAddress);\r\n\r\n            const isOwner = await multiSig.isowner(kit.defaultAccount!)\r\n            if (!isOwner) throw new Error(\"You are not owner in this multisig address\");\r\n            if (data?.addresses.some(s => s.address.toLocaleLowerCase() === contractAddress.toLocaleLowerCase())) throw new Error(\"This address already exist\");\r\n\r\n            if (data) {\r\n                await FirestoreWrite().updateDoc(\"multisigs\", auth.currentUser!.uid, { addresses: [...data?.addresses, { name: name, address: contractAddress }] })\r\n            } else {\r\n                await FirestoreWrite().createDoc(\"multisigs\", auth.currentUser!.uid, { addresses: [{ name: name, address: contractAddress }] })\r\n            }\r\n            setLoading(false)\r\n            return true\r\n        } catch (e: any) {\r\n            setLoading(false)\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n\r\n    const getSignAndInternal = async () => {\r\n        if (isMultisig) {\r\n            setLoading(true)\r\n            try {\r\n                const multiSig = await kit.contracts.getMultiSig(selectedAccount);\r\n                const executinTransactions = await multiSig.getRequired()\r\n                const changingMultiSigProperties = await multiSig.getInternalRequired()\r\n                if (executinTransactions.c && changingMultiSigProperties.c) {\r\n                    dispatch(setSign(executinTransactions.c[0]))\r\n                    dispatch(setInternalSign(changingMultiSigProperties.c[0]))\r\n                    setLoading(false)\r\n                    return { sign: executinTransactions.c[0], internalSigns: changingMultiSigProperties.c[0] }\r\n                }\r\n                setLoading(false)\r\n                throw new Error(`Invalid multiSignature`)\r\n            } catch (e: any) {\r\n                setLoading(false)\r\n                throw new Error(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeOwner = useCallback(async (ownerAddress: string) => {\r\n        if (isMultisig) {\r\n            setLoading(true)\r\n            try {\r\n                selectedAccount = selectedAccount.toLowerCase()\r\n                const kitMultiSig = await kit.contracts.getMultiSig(selectedAccount); // MultiSig Address with Celo Kit\r\n                const web3MultiSig = await kit._web3Contracts.getMultiSig(selectedAccount); // MultiSig Address with Web3\r\n\r\n                const isAddressExist = kit.web3.utils.isAddress(ownerAddress);\r\n                if (!isAddressExist) throw new Error(\"There is not any wallet belong this address\");\r\n\r\n                const tx = toTransactionObject(\r\n                    kit.connection,\r\n                    web3MultiSig.methods.removeOwner(ownerAddress)\r\n                );\r\n\r\n                const ss = await kitMultiSig.submitOrConfirmTransaction(selectedAccount, tx.txo);\r\n                await ss.sendAndWaitForReceipt({ gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei')});\r\n                setLoading(false)\r\n                return true\r\n            } catch (error) {\r\n                setLoading(false)\r\n                console.error(error)\r\n                throw new Error(\"Error removing owner\")\r\n            }\r\n\r\n        }\r\n    }, [isMultisig])\r\n\r\n    const changeSigns = useCallback(async (sign: number, internalSign: number, isSign = true, isInternal = true) => {\r\n        if (isMultisig) {\r\n            setLoading(true)\r\n            try {\r\n                selectedAccount = selectedAccount.toLowerCase()\r\n                const kitMultiSig = await kit.contracts.getMultiSig(selectedAccount);\r\n                const web3MultiSig = await kit._web3Contracts.getMultiSig(selectedAccount);\r\n\r\n                const countOwners = (await kitMultiSig.getOwners()).length\r\n                if (sign > countOwners) {\r\n                    throw new Error(\"Requested Sign exceeds the number of owners\");\r\n                }\r\n                if (internalSign > countOwners) {\r\n                    throw new Error(\"Requested Internal Sign exceeds the number of owners\");\r\n                }\r\n\r\n                if (isSign) {\r\n                    const tx = toTransactionObject(\r\n                        kit.connection,\r\n                        web3MultiSig.methods.changeRequirement(sign)\r\n                    );\r\n\r\n                    const ss = await kitMultiSig.submitOrConfirmTransaction(selectedAccount, tx.txo);\r\n                    await ss.sendAndWaitForReceipt({ gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei')});\r\n                }\r\n\r\n                if (isInternal) {\r\n                    const txInteral = toTransactionObject(\r\n                        kit.connection,\r\n                        web3MultiSig.methods.changeInternalRequirement(internalSign)\r\n                    );\r\n\r\n                    const ssInternal = await kitMultiSig.submitOrConfirmTransaction(selectedAccount, txInteral.txo);\r\n                    await ssInternal.sendAndWaitForReceipt({ gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei')});\r\n                }\r\n                setLoading(false)\r\n                return true;\r\n            } catch (error) {\r\n                setLoading(false)\r\n                console.error(error)\r\n                throw new Error(\"Error changing signs\")\r\n            }\r\n\r\n\r\n        }\r\n    }, [isMultisig])\r\n\r\n    const addOwner = useCallback(async (newOwner) => {\r\n        if (isMultisig) {\r\n            setLoading(true)\r\n            try {\r\n                selectedAccount = selectedAccount.toLowerCase()\r\n                const isAddressExist = kit.web3.utils.isAddress(newOwner);\r\n                if (!isAddressExist) throw new Error(\"There is not any wallet belong this address\");\r\n\r\n                const kitMultiSig = await kit.contracts.getMultiSig(selectedAccount); // MultiSig Address with Celo Kit\r\n                const web3MultiSig = await kit._web3Contracts.getMultiSig(selectedAccount); // MultiSig Address with Web3\r\n\r\n                const tx = toTransactionObject(\r\n                    kit.connection,\r\n                    web3MultiSig.methods.addOwner(newOwner)\r\n                );\r\n\r\n                const ss = await kitMultiSig.submitOrConfirmTransaction(selectedAccount, tx.txo);\r\n                await ss.sendAndWaitForReceipt({ gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei')});\r\n                setLoading(false)\r\n                return true\r\n            } catch (error) {\r\n                setLoading(false)\r\n                console.error(error)\r\n                throw new Error(\"Error adding owner\")\r\n            }\r\n\r\n        }\r\n    }, [isMultisig])\r\n\r\n    const getOwners = async () => {\r\n        if (isMultisig) {\r\n            setLoading(true)\r\n            try {\r\n                const multiSig = await kit.contracts.getMultiSig(selectedAccount); // MultiSig Address with Celo Kit\r\n                setLoading(false)\r\n                return await multiSig.getOwners()\r\n            } catch (e: any) {\r\n                setLoading(false)\r\n                throw new Error(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    const replaceOwner = useCallback(async (oldOwner: string, newOwner: string) => {\r\n        if (isMultisig) {\r\n            setLoading(true)\r\n            try {\r\n                selectedAccount = selectedAccount.toLowerCase()\r\n                const isAddressExist = kit.web3.utils.isAddress(oldOwner.toLowerCase());\r\n                if (!isAddressExist) throw new Error(\"There is not any wallet belong this address\");\r\n\r\n                const kitMultiSig = await kit.contracts.getMultiSig(selectedAccount); // MultiSig Address with Celo Kit\r\n                const web3MultiSig = await kit._web3Contracts.getMultiSig(selectedAccount); // MultiSig Address with Web3\r\n\r\n                const tx = toTransactionObject(\r\n                    kit.connection,\r\n                    web3MultiSig.methods.replaceOwner(oldOwner.toLowerCase(), newOwner.toLowerCase())\r\n                );\r\n\r\n                const ss = await kitMultiSig.submitOrConfirmTransaction(selectedAccount, tx.txo);\r\n                setLoading(false)\r\n                await ss.sendAndWaitForReceipt({ gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei')});\r\n            } catch (error) {\r\n                setLoading(false)\r\n                console.error(error)\r\n                throw new Error(\"Error replacing owner\")\r\n            }\r\n        }\r\n    }, [isMultisig])\r\n\r\n\r\n\r\n    const submitTransaction = async (multisigAddress: string, toAddress: string, amount: string, coin: AltCoins) => {\r\n        let golden;\r\n        try {\r\n            const web3MultiSig = await kit._web3Contracts.getMultiSig(multisigAddress);\r\n\r\n            let value = kit.web3.utils.toWei(amount, 'ether');\r\n\r\n            if (coin == Coins.CELO) golden = await kit.contracts.getGoldToken()\r\n            else if (coin == Coins.cUSD || coin == Coins.cEUR) golden = await kit.contracts.getStableToken(coin.name as unknown as StableToken)\r\n            else golden = await kit.contracts.getErc20(coin.contractAddress)\r\n\r\n            const celoObj = golden.transfer(toAddress, value);\r\n            const txs = toTransactionObject(\r\n                kit.connection,\r\n                web3MultiSig.methods.submitTransaction(golden.address, \"0\", stringToSolidityBytes(celoObj.txo.encodeABI())),\r\n            );\r\n\r\n            await txs.sendAndWaitForReceipt({ from: address!, gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei')})\r\n            return { message: \"sucess\" }\r\n        } catch (e: any) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    const revokeTransaction = async (multisigAddress: string, transactionId: string | number) => {\r\n        try {\r\n            const web3MultiSig = await kit._web3Contracts.getMultiSig(multisigAddress);\r\n\r\n            const tx = toTransactionObject(\r\n                kit.connection,\r\n                web3MultiSig.methods.revokeConfirmation(transactionId)\r\n            );\r\n\r\n            await tx.sendAndWaitForReceipt({ from: address!, gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei')})\r\n\r\n            return { message: \"success\" }\r\n        } catch (e: any) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    const confirmTransaction = async (multisigAddress: string, transactionId: string | number) => {\r\n        try {\r\n\r\n            const web3MultiSig = await kit._web3Contracts.getMultiSig(multisigAddress);\r\n\r\n            const tx = toTransactionObject(\r\n                kit.connection,\r\n                web3MultiSig.methods.confirmTransaction(transactionId)\r\n            );\r\n\r\n            await tx.sendAndWaitForReceipt({ from: address!, gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei')})\r\n\r\n            return { message: \"success\" }\r\n        } catch (e: any) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    const executeTransaction = async (multisigAddress: string, transactionId: string | number) => {\r\n        try {\r\n            const web3MultiSig = await kit._web3Contracts.getMultiSig(multisigAddress);\r\n\r\n            const tx = toTransactionObject(\r\n                kit.connection,\r\n                web3MultiSig.methods.executeTransaction(transactionId)\r\n            );\r\n                \r\n            await tx.sendAndWaitForReceipt({ from: address!, gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei')})\r\n\r\n            return { message: \"success\" }\r\n        } catch (e: any) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    const getTransaction = async (multisigAddress: string, transactionId: string) => {\r\n        try {\r\n            const kitMultiSig = await kit.contracts.getMultiSig(multisigAddress);\r\n\r\n            let tx = await kitMultiSig.getTransaction(parseInt(transactionId))\r\n            let txResult: Transaction;\r\n            txResult = {\r\n                id: parseInt(transactionId),\r\n                destination: tx.destination,\r\n                data: tx.data,\r\n                executed: tx.executed,\r\n                confirmations: tx.confirmations,\r\n                value: tx.value.toString(),\r\n            }\r\n\r\n            let value = kit.web3.utils.fromWei(tx.value.toString(), 'ether')\r\n            txResult.value = value\r\n            txResult.requiredCount = \"\"\r\n            txResult.owner = \"\"\r\n            txResult.newOwner = \"\"\r\n            txResult.valueOfTransfer = \"\"\r\n\r\n            let methodId = tx.data.slice(0, 10)\r\n            txResult.method = MethodIds[methodId as keyof typeof MethodIds]\r\n\r\n            if (methodId == \"0x2e6c3721\" || methodId == \"0xba51a6df\") {\r\n                txResult.requiredCount = tx.data.slice(tx.data.length - 2)\r\n            } else {\r\n                txResult.owner = \"0x\" + tx.data.slice(35, 74);\r\n\r\n                if (methodId == \"0xe20056e6\") txResult.newOwner = \"0x\" + tx.data.slice(98)\r\n                if (methodId == \"0xa9059cbb\") {\r\n                    let hex = tx.data.slice(100).replace(/^0+/, '')\r\n                    let value = parseInt(hex, 16)\r\n                    txResult.valueOfTransfer = kit.web3.utils.fromWei(value.toString(), 'ether')\r\n                }\r\n            }\r\n\r\n            delete txResult.data\r\n            return { txResult }\r\n        } catch (e: any) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    return { importMultisigAccount, data, isLoading, transactions, FetchTransactions, addOwner, replaceOwner, changeSigns, removeOwner, getOwners, getSignAndInternal, getTransaction, submitTransaction, revokeTransaction, confirmTransaction, executeTransaction };\r\n}\r\n","export interface GetBalanceResponse {\n\t[name: string]: string;\n\tCELO: string;\n\tcUSD: string;\n\tcEUR: string;\n\tUBE: string;\n\tMOO: string;\n\tMOBI: string;\n\tPOOF: string;\n\tcREAL: string;\n}\n\nexport enum GetBalanceResponseEnum {\n\tCELO = 'CELO',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL = 'cREAL'\n}\n","import { GetBalanceResponseEnum } from './sdk';\n\nexport enum CoinsURL {\n\tCELO = '/icons/celoiconsquare.svg',\n\tcUSD = '/icons/celodollar.svg',\n\tcEUR = '/icons/ceur.png',\n\tUBE = '/icons/ubeswap.png',\n\tMOO = '/icons/moola.png',\n\tMOBI = '/icons/mobius.png',\n\tPOOF = '/icons/poof.png',\n\tcREAL= \"/icons/creal.png\",\n\tNone = ''\n}\n\nexport enum CoinsName {\n\tCELO = 'CELO',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum CoinsNameVisual {\n\tCELO = 'CELO',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum TransactionFeeTokenName {\n\tCELO = 'CELO',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum StableTokens {\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR'\n}\n\nexport enum AltcoinsList {\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum CoinsNameLower {\n\tCELO = 'CELO',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum CoinsResponse {}\n\nexport const Coins: Coins = {\n\tCELO: {\n\t\tname: CoinsNameVisual.CELO,\n\t\tcoinUrl: CoinsURL.CELO,\n\t\tvalue: CoinsName.CELO,\n\t\tfeeName: TransactionFeeTokenName.CELO,\n\t\tlowerName: CoinsNameLower.CELO,\n\t\tresponseName: GetBalanceResponseEnum.CELO,\n\t\tcontractAddress: \"0x471EcE3750Da237f93B8E339c536989b8978a438\"\n\t},\n\tcUSD: {\n\t\tname: CoinsNameVisual.cUSD,\n\t\tcoinUrl: CoinsURL.cUSD,\n\t\tvalue: CoinsName.cUSD,\n\t\tfeeName: TransactionFeeTokenName.cUSD,\n\t\tlowerName: CoinsNameLower.cUSD,\n\t\tresponseName: GetBalanceResponseEnum.cUSD,\n\t\tcontractAddress: \"0x765DE816845861e75A25fCA122bb6898B8B1282a\"\n\t},\n\tcEUR: {\n\t\tname: CoinsNameVisual.cEUR,\n\t\tcoinUrl: CoinsURL.cEUR,\n\t\tvalue: CoinsName.cEUR,\n\t\tfeeName: TransactionFeeTokenName.cEUR,\n\t\tlowerName: CoinsNameLower.cEUR,\n\t\tresponseName: GetBalanceResponseEnum.cEUR,\n\t\tcontractAddress: \"0xD8763CBa276a3738E6DE85b4b3bF5FDed6D6cA73\"\n\t},\n\tUBE: {\n\t\tname: CoinsNameVisual.UBE,\n\t\tcoinUrl: CoinsURL.UBE,\n\t\tvalue: CoinsName.UBE,\n\t\tfeeName: TransactionFeeTokenName.UBE,\n\t\tlowerName: CoinsNameLower.UBE,\n\t\tresponseName: GetBalanceResponseEnum.UBE, \n\t\tcontractAddress: \"0x00Be915B9dCf56a3CBE739D9B9c202ca692409EC\"\n\t},\n\tMOO: {\n\t\tname: CoinsNameVisual.MOO,\n\t\tcoinUrl: CoinsURL.MOO,\n\t\tvalue: CoinsName.MOO,\n\t\tfeeName: TransactionFeeTokenName.MOO,\n\t\tlowerName: CoinsNameLower.MOO,\n\t\tresponseName: GetBalanceResponseEnum.MOO, \n\t\tcontractAddress: \"0x17700282592D6917F6A73D0bF8AcCf4D578c131e\"\n\t},\n\tMOBI: {\n\t\tname: CoinsNameVisual.MOBI,\n\t\tcoinUrl: CoinsURL.MOBI,\n\t\tvalue: CoinsName.MOBI,\n\t\tfeeName: TransactionFeeTokenName.MOBI,\n\t\tlowerName: CoinsNameLower.MOBI,\n\t\tresponseName: GetBalanceResponseEnum.MOBI, \n\t\tcontractAddress: \"0x73a210637f6F6B7005512677Ba6B3C96bb4AA44B\"\n\t},\n\tPOOF: {\n\t\tname: CoinsNameVisual.POOF,\n\t\tcoinUrl: CoinsURL.POOF,\n\t\tvalue: CoinsName.POOF,\n\t\tfeeName: TransactionFeeTokenName.POOF,\n\t\tlowerName: CoinsNameLower.POOF,\n\t\tresponseName: GetBalanceResponseEnum.POOF, \n\t\tcontractAddress: \"0x00400FcbF0816bebB94654259de7273f4A05c762\"\n\t},\n\tcREAL: {\t\n\t\tname: CoinsNameVisual.cREAL,\n\t\tcoinUrl: CoinsURL.cREAL,\n\t\tvalue: CoinsName.cREAL,\n\t\tfeeName: TransactionFeeTokenName.cREAL,\n\t\tlowerName: CoinsNameLower.cREAL,\n\t\tresponseName: GetBalanceResponseEnum.cREAL, \n\t\tcontractAddress: \"0xe8537a3d056DA446677B9E9d6c5dB704EaAb4787\"\n\t}\n};\n\nexport interface Coins {\n\tCELO: AltCoins;\n\tcUSD: AltCoins;\n\tcEUR: AltCoins;\n\tUBE: AltCoins;\n\tMOO: AltCoins;\n\tMOBI: AltCoins;\n\tPOOF: AltCoins;\n\tcREAL: AltCoins;\n}\n\nexport interface AltCoins {\n\tname: CoinsNameVisual;\n\tcoinUrl: CoinsURL;\n\tvalue: CoinsName;\n\tfeeName: TransactionFeeTokenName;\n\tlowerName: CoinsNameLower;\n\tresponseName: GetBalanceResponseEnum;\n\tcontractAddress: string;\n}\n","import { createUserWithEmailAndPassword, signInWithEmailAndPassword, User } from \"firebase/auth\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth, IUser } from \"../firebase\";\r\nimport { changeAccount } from \"../redux/reducers/selectedAccount\";\r\nimport { setStorage } from \"../redux/reducers/storage\";\r\nimport { decryptMessage, encryptMessage, hashing } from \"../utils/hashing\";\r\nimport { FirestoreRead, FirestoreWrite } from \"../API/useFirebase\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { toTransactionObject } from \"@celo-tools/use-contractkit/node_modules/@celo/connect\";\r\n\r\n\r\nexport default function useSignInOrUp() {\r\n    const { kit, address } = useContractKit()\r\n    const [error, setError] = useState<{ errorCode: string, errorMessage: string }>();\r\n    const [user, setUser] = useState<User>();\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const executeSign = async (address: string, password: string, dataForSignUp?: IUser) => {\r\n        setLoading(true)\r\n        try {\r\n            const token = await hashing(address, password)\r\n            const encryptedMessageToken = await hashing(password, token)\r\n            let userCredential;\r\n            if (dataForSignUp) {\r\n                userCredential = await createUserWithEmailAndPassword(auth, token + \"@gmail.com\", password)\r\n            } else {\r\n                userCredential = await signInWithEmailAndPassword(auth, token + \"@gmail.com\", password)\r\n            }\r\n\r\n            const user = userCredential.user;\r\n\r\n            if (dataForSignUp) {\r\n                const BatchAbi = await (import(\"API/ABI/BatchRequest.json\"))\r\n\r\n                const tx = toTransactionObject(\r\n                    kit.connection,\r\n                    (new kit.web3.eth.Contract(BatchAbi.abi as any)).deploy({ data: BatchAbi.bytecode }) as any)\r\n\r\n                const contract = await tx.sendAndWaitForReceipt({ from: address })\r\n\r\n                await FirestoreWrite<IUser>().createDoc('users', user.uid, {\r\n                    id: user.uid,\r\n                    address: address,\r\n                    contractAddress: contract.contractAddress,\r\n                    companyName: encryptMessage(dataForSignUp.companyName, encryptedMessageToken),\r\n                    name: encryptMessage(dataForSignUp.name, encryptedMessageToken),\r\n                    surname: encryptMessage(dataForSignUp.surname, encryptedMessageToken),\r\n                    timestamp: new Date().getTime()\r\n                })\r\n                await FirestoreWrite<{ addresses: { name: string, address: string }[] }>().createDoc('multisigs', user.uid, {\r\n                    addresses: []\r\n                })\r\n                dispatch(setStorage({\r\n                    accountAddress: address,\r\n                    token: token,\r\n                    uid: user.uid,\r\n                    contractAddress: contract.contractAddress,\r\n                    companyName: dataForSignUp?.companyName,\r\n                    surname: dataForSignUp?.surname,\r\n                    name: dataForSignUp?.name,\r\n                    encryptedMessageToken: encryptedMessageToken\r\n                }))\r\n                dispatch(changeAccount(address))\r\n            } else {\r\n                const incomingData = await FirestoreRead<IUser>(\"users\", user.uid)\r\n                if (!incomingData) {\r\n                    throw new Error(\"No Data In Users\")\r\n                }\r\n                dispatch(setStorage({\r\n                    accountAddress: address,\r\n                    token: token,\r\n                    uid: user.uid,\r\n                    contractAddress: incomingData.contractAddress,\r\n                    companyName: decryptMessage(incomingData?.companyName, encryptedMessageToken),\r\n                    surname: decryptMessage(incomingData?.surname, encryptedMessageToken),\r\n                    name: decryptMessage(incomingData?.name, encryptedMessageToken),\r\n                    encryptedMessageToken: encryptedMessageToken\r\n                }))\r\n                dispatch(changeAccount(address))\r\n            }\r\n\r\n            setUser(user)\r\n            setLoading(false)\r\n            return user\r\n        } catch (error: any) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            setError({ errorCode, errorMessage })\r\n            setLoading(false)\r\n            throw new Error(errorMessage)\r\n        }\r\n    }\r\n\r\n    return { user, error, executeSign, isLoading };\r\n}","import { useCallback, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { selectMultisigTransactions, setTransactions } from \"../redux/reducers/multisig\"\nimport { SelectSelectedAccount } from '../redux/reducers/selectedAccount'\nimport { selectStorage } from \"../redux/reducers/storage\"\nimport useFetchMultisig from '../API/useMultisig'\n\nconst useMultisig = () => {\n    let selectedAccount = useSelector(SelectSelectedAccount)\n    const storage = useSelector(selectStorage)\n    const multiSlice = useSelector(selectMultisigTransactions)\n\n    const [owners, setOwners] = useState<string[]>()\n    const [signAndInternal, setSignAndInternal] = useState<{\n        sign: number;\n        internalSigns: number;\n    }>()\n\n    const { transactions, FetchTransactions, isLoading, addOwner, replaceOwner, changeSigns, removeOwner, getOwners, getSignAndInternal } = useFetchMultisig()\n\n    const isMultisig = selectedAccount.toLowerCase() !== storage!.accountAddress.toLowerCase()\n\n    const dispatch = useDispatch()\n\n    const fetchTxs = useCallback((disabledTransactionDispatch = false, skip = 0, take = 10) => {\n        if (!disabledTransactionDispatch) dispatch(setTransactions([]))\n        FetchTransactions(selectedAccount, skip, take)\n    }, [isMultisig, selectedAccount])\n\n    useEffect(() => {\n        if (transactions) {\n            if (transactions.length === 0) {\n                dispatch(setTransactions(undefined))\n            } else if (!multiSlice?.some(s => s.id === transactions[transactions.length - 1]?.id)) {\n                dispatch(setTransactions(transactions))\n            }\n        }\n    }, [transactions])\n\n    useEffect(() => {\n        if (isMultisig) {\n            getOwners().then((owners) => setOwners(owners))\n            fetchTxs()\n            getSignAndInternal().then((signAndInternal) => setSignAndInternal(signAndInternal))\n        }\n    }, [selectedAccount])\n\n    const refetch = (disabledTransactionDispatch = false, skip = 0, take = 10) => {\n        fetchTxs(disabledTransactionDispatch, skip, take)\n        // fetch({ address: selectedAccount })\n        // signFethch({ address: selectedAccount })\n        getSignAndInternal()\n    }\n\n\n\n    return { transactions, isMultisig, isLoading, fetchTxs, refetch, owners, signAndInternal, addOwner, replaceOwner, changeSigns, removeOwner, }\n}\n\nexport default useMultisig;","import { useMemo } from 'react';\nimport { SelectTransactions } from '../redux/reducers/transactions';\nimport _ from 'lodash';\nimport { RootState } from '../redux/store';\nimport { useSelector } from 'react-redux';\nimport { SelectSelectedAccount } from '../redux/reducers/selectedAccount';\nimport { GetTransactions, Transactions } from '../types/sdk';\nimport { useContractKit } from '@celo-tools/use-contractkit';\nimport { hexToNumberString, fromWei } from 'web3-utils'\nimport { AltCoins, Coins } from 'types';\n\n\nexport const ERC20MethodIds = {\n    transferFrom: \"0x23b872dd\",\n    transfer: \"0xa9059cbb\",\n    transferWithComment: \"0xe1d6aceb\",\n    approve: \"0x095ea7b3\",\n    batchRequest: \"0xc23bfbf7\",\n    swap: \"0x38ed1739\"\n}\n\nexport interface IFormattedTransaction {\n    rawData: Transactions;\n    method: string;\n    hash: string,\n    id: string;\n}\n\nexport interface ITransfer extends IFormattedTransaction {\n    to: string;\n    amount: string;\n}\n\nexport interface ITransferFrom extends ITransfer {\n    from: string;\n}\n\nexport interface ISwap extends IFormattedTransaction {\n    amountIn: string,\n    amountOutMin: string,\n    coinIn: AltCoins,\n    coinOutMin: AltCoins,\n}\n\nexport interface IBatchRequest extends IFormattedTransaction {\n    payments: {\n        coinAddress: AltCoins,\n        from: string,\n        to: string,\n        amount: string\n    }[]\n}\n\nconst useTransactionProcess = (groupByDate = false): [IFormattedTransaction[], GetTransactions] | [] => {\n    const transactions = useSelector(SelectTransactions);\n\n    return useMemo(() => {\n        if (transactions) {\n            let result: Transactions[] = [...transactions.result]\n\n            const FormattedTransaction: IFormattedTransaction[] = []\n\n            const groupedHash = _(result).groupBy(\"hash\").value();\n            const uniqueHashs = Object.values(groupedHash).reduce((acc: Transactions[], value: Transactions[]) => {\n                const best = _(value).maxBy((o) => parseFloat(fromWei(o.value, \"ether\")));\n                console.log(best)\n                if (best) acc.push(best)\n\n                return acc;\n            }, [])\n\n            uniqueHashs.forEach((transaction: Transactions) => {\n                const input = transaction.input;\n                const formatted = InputReader(input);\n                if (formatted?.id === ERC20MethodIds.swap) { console.log(formatted) }\n                if (formatted) {\n                    FormattedTransaction.push({\n                        rawData: transaction,\n                        hash: transaction.hash,\n                        ...formatted\n                    })\n                }\n            })\n\n            return [FormattedTransaction, transactions];\n        };\n        return []\n    }, [transactions])\n}\n\n\nconst InputReader = (input: string) => {\n    if (input.startsWith(ERC20MethodIds.transferFrom)) {\n        const len = ERC20MethodIds.transferFrom.length\n        return {\n            method: \"transferFrom\",\n            id: ERC20MethodIds.transferFrom,\n            from: input.slice(len, len + 64).substring(24),\n            to: input.slice(len + 64 + 64, len + 64 + 64 + 64).substring(24),\n            amount: hexToNumberString(\"0x\" + input.slice(len + 64 + 64 + 64, len + 64 + 64 + 64 + 64)).toString(),\n        }\n    } else if (input.startsWith(ERC20MethodIds.transfer)) {\n        const len = ERC20MethodIds.transfer.length\n        return {\n            method: \"transfer\",\n            id: ERC20MethodIds.transfer,\n            to: input.slice(len, len + 64).substring(24),\n            amount: hexToNumberString(\"0x\" + input.slice(len + 64, len + 64 + 64)).toString(),\n        }\n    } else if (input.startsWith(ERC20MethodIds.swap)) {\n        const len = ERC20MethodIds.swap.length;\n        const coins: AltCoins[] = Object.values(Coins)\n        return {\n            method: \"swap\",\n            id: ERC20MethodIds.swap,\n            amountIn: hexToNumberString(\"0x\" + input.slice(len, len + 64)).toString(),\n            amountOutMin: hexToNumberString(\"0x\" + input.slice(len + 64, len + 64 + 64)).toString(),\n            coinIn: coins.find(s => s.contractAddress.toLowerCase() === \"0x\" + input.slice(input.length - 64 - 64, input.length - 64).substring(24).toLowerCase())!,\n            coinOutMin: coins.find(s => s.contractAddress.toLowerCase() === \"0x\" + input.slice(input.length - 64, input.length).substring(24).toLowerCase())!,\n        }\n    } else if (input.startsWith(ERC20MethodIds.batchRequest)) {\n        const len = ERC20MethodIds.batchRequest.length;\n        const splitted = input.split(\"23b872dd\")\n        const coins = [];\n\n        let indexable = 0;\n        for (let index = 0; index < splitted.length - 1; index++) {\n            coins.push({ coinAddress: Object.values(Coins).find(s => s.contractAddress.toLowerCase() === \"0x\" + input.slice(330 + indexable, 330 + indexable + 64).substring(24).toLowerCase())! })\n            indexable += 64;\n        }\n        for (let index = 1; index < splitted.length; index++) {\n            const from = splitted[index].slice(0, 64).substring(24);\n            const to = splitted[index].slice(64, 128).substring(24);\n            const amount = hexToNumberString(\"0x\" + splitted[index].slice(128, 192)).toString();\n            coins[index - 1] = {\n                ...coins[index - 1],\n                from,\n                to,\n                amount\n            };\n\n        }\n\n        return {\n            method: \"batchRequest\",\n            id: ERC20MethodIds.batchRequest,\n            payments: coins\n        }\n    }\n}\n\nexport default useTransactionProcess;","\nconst Avatar = ({ name, className }: { name: string, className?: string}) => {\n\n    return <div className={`${className} w-[28px] h-[28px] font-[18px] flex items-center justify-center rounded-full bg-greylish bg-opacity-20`}>\n        {name.slice(0, 2)}\n    </div>\n}\n\nexport default Avatar;","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../store';\n\nconst initialState = {\n\tmobileMenu: false\n};\n\nexport const toggleSlice = createSlice({\n\tname: 'storage',\n\tinitialState: initialState,\n\treducers: {\n\t\tsetMenu: (state, action) =>{\n\t\t\tstate.mobileMenu = action.payload;\n\t\t}\n\t}\n});\n\nexport const {setMenu} = toggleSlice.actions;\n\nexport const selectToggle = (state: RootState) => state.toggle;\n\nexport default toggleSlice.reducer;\n","export enum TransactionType {\n    PaySomeone = \"Pay Someone\",\n    MassPayout = \"Mass Payout\",\n    QuickTransfer = \"Quick Transfer\",\n    IncomingPayment = \"Incoming Payment\",\n    MassPayment = \"Mass Payment\",\n    Swap = \"Swap\"\n}\n\nexport enum TransactionDirection {\n    In,\n    Out,\n    Swap\n}\n\nexport enum TransactionStatus{\n    Completed = \"Completed\", \n    Pending = \"Pending\", \n    Rejected = \"Rejected\",\n}","const hostname = window.location.hostname;\r\nexport const BaseUrl = hostname.includes(\"localhost\") ? \"http://app.localhost/api\" : \"/api\"","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utils/const'\nimport { AccountCreate, AccountCreateResponse, AccountExist, AccountExistResponse, AccountInfo, CreatePassword, CreatePasswordResponse, Signin, SigninResponse, Unlock, UnlockResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const accountAPI = createApi({\n    reducerPath: 'accountAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        signIn: builder.mutation<SigninResponse, Signin>({\n            query: (data) => ({\n                url: '/account/signin',\n                method: 'POST',\n                body: data\n            }),\n        }),\n\n        accountCreate: builder.mutation<AccountCreateResponse, AccountCreate>({\n            query: (data) => ({\n                url: `/account/create`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        createPassword: builder.mutation<CreatePasswordResponse, CreatePassword>({\n            query: (data) => ({\n                url: `/account/createPassword`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        accountExist: builder.mutation<AccountExistResponse, AccountExist>({\n            query: (data) => ({\n                url: `/account/isExist`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        unlock: builder.mutation<UnlockResponse, Unlock>({\n            query: (data) => ({\n                url: `/account/reLogin`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        putAccountInfo: builder.mutation<void, AccountInfo>({\n            query: (data) => ({\n                url: `/account`,\n                method: 'PUT',\n                body: data\n            })\n        }),\n        setTime: builder.mutation<void, { time: string }>({\n            query: (data) => ({\n                url: `/account/setTime`,\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        getTime: builder.query<{ date: string }, void>({\n            query: () => ({\n                url: `/account/time`,\n            })\n        }),\n        getDetails: builder.query<{ result: { userName: string, surname: string, companyName: string } }, void>({\n            query: () => ({\n                url: `/account/details`,\n            })\n        })\n    }),\n})\n\n\nexport const { useLazyGetTimeQuery, useGetDetailsQuery, useLazyGetDetailsQuery, useSetTimeMutation, useSignInMutation, useAccountCreateMutation, useCreatePasswordMutation, useAccountExistMutation, useUnlockMutation, usePutAccountInfoMutation } = accountAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utils/const'\nimport { CustomerCreate, CustomerCreateResponse, GetCustomer } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const customerAPI = createApi({\n    reducerPath: 'customerAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        customerCreate: builder.mutation<CustomerCreateResponse, CustomerCreate>({\n            query: (data) => ({\n                url: '/customer/create',\n                method: 'POST',\n                body: data\n            }),\n        }),\n\n        getCustomer: builder.query<CustomerCreateResponse[], GetCustomer>({\n            query: (data) => ({\n                url: `/customer/byAccount`,\n                params: data\n            })\n        }),\n\n        deleteCustomer: builder.mutation<void, number>({\n            query: (id) => ({\n                url: `/customer/${id}`,\n                method: 'DELETE',\n            })\n        }),\n\n    }),\n})\n\n\nexport const { useCustomerCreateMutation, useGetCustomerQuery, useDeleteCustomerMutation } = customerAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utils/const'\nimport { CreateTeam, CreateTeamResponse, GetTeams, GetTeamsResponse, GetTeamsWithMembers, GetTeamsWithMembersResponse, UpdateTeam, UpdateTeamResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const teamAPI = createApi({\n  reducerPath: 'teamAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BaseUrl,\n    prepareHeaders: (headers, { getState }) => {\n      const token = (getState() as RootState).storage?.user?.token;\n      if (token) {\n        headers.set('Authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  endpoints: (builder) => ({\n    createTeam: builder.mutation<CreateTeamResponse, CreateTeam>({\n      query: (data) => ({\n        url: '/team/create',\n        method: 'POST',\n        body: data\n      }),\n    }),\n\n    getTeams: builder.query<GetTeamsResponse, GetTeams>({\n      query: (data) => ({\n        url: `/team/byAccount`,\n        params: data\n      })\n    }),\n\n    getTeamsWithMembers: builder.query<GetTeamsWithMembersResponse, GetTeamsWithMembers>({\n      query: (data) => ({\n        url: `/team/byAccount/withMembers`,\n        params: data\n      })\n    }),\n\n    deleteTeam: builder.mutation<any, string>({\n      query: (id) => ({\n        url: `/team/${id}`,\n        method: 'DELETE'\n      })\n    }),\n\n    updateTeam: builder.mutation<UpdateTeamResponse, { id: string, body: UpdateTeam }>({\n      query: ({ id, body }) => ({\n        url: `/team/${id}`,\n        method: 'PATCH',\n        body: body\n      })\n    })\n  }),\n})\n\n\nexport const { useCreateTeamMutation, useLazyGetTeamsQuery, useLazyGetTeamsWithMembersQuery ,useGetTeamsWithMembersQuery, useDeleteTeamMutation, useUpdateTeamMutation } = teamAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utils/const'\nimport { GetBalanceResponse, SendCelo, SendCeloResponse, SendStableToken, SendStableTokenResponse, SendMultipleTransaction, SendAltcoin, SendAltcoinResponse, GetCurrencies } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const transactionAPI = createApi({\n    reducerPath: 'transactionAPI',\n    keepUnusedDataFor: 0,\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        getBalance: builder.query<GetBalanceResponse, void>({\n            query: () => ({\n                url: '/transaction/balance',\n            })\n        }),\n        getCurrencies: builder.query<GetCurrencies, void>({\n            query: () => ({\n                url: '/transaction/currency',\n            })\n        }),\n        sendCelo: builder.mutation<SendCeloResponse, SendCelo>({\n            query: (data) => ({\n                url: '/transaction/sendCelo',\n                method: 'POST',\n                body: data,\n            })\n        }),\n\n        sendStableToken: builder.mutation<SendStableTokenResponse, SendStableToken>({\n            query: (data) => ({\n                url: '/transaction/sendStableCoin',\n                method: 'POST',\n                body: data,\n            })\n        }),\n        sendAltToken: builder.mutation<SendAltcoinResponse, SendAltcoin>({\n            query: (data) => ({\n                url: '/transaction/sendAltCoin',\n                method: 'POST',\n                body: data,\n            })\n        }),\n        sendMultipleTransactions: builder.mutation<void, SendMultipleTransaction>({\n            query: (data) => ({\n                url: '/transaction/multipleTran',\n                method: 'POST',\n                body: data,\n            })\n        })\n    }),\n})\n\n\nexport const { useGetBalanceQuery, useLazyGetBalanceQuery, useLazyGetCurrenciesQuery ,useGetCurrenciesQuery,  useSendCeloMutation, useSendStableTokenMutation, useSendAltTokenMutation, useSendMultipleTransactionsMutation } = transactionAPI\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utils/const'\nimport { AddMember, AddMemberResponse, GetTeams, GetTeamsResponse, Member, UpdateMember, UpdateMemberResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const teamMemberAPI = createApi({\n    reducerPath: 'teamMemberAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        addMember: builder.mutation<AddMemberResponse, AddMember>({\n            query: (data) => ({\n                url: `/team-member/add`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        getMembers: builder.query<GetTeamsResponse, { id: string, params: GetTeams }>({\n            query: ({ id, params }) => ({\n                url: `/team-member/byTeam/${id}`,\n                params: params\n            })\n        }),\n\n        getMember: builder.query<{member: Member}, string>({\n            query: (id) => ({\n                url: `/team-member/${id}`\n            })\n        }),\n\n        deleteMember: builder.mutation<void, string>({\n            query: (id) => ({\n                url: `/team-member/${id}`,\n                method: 'DELETE',\n            })\n        }),\n\n        updateMember: builder.mutation<UpdateMemberResponse, UpdateMember>({\n            query: (data) => ({\n                url: `/team-member`,\n                method: 'PUT',\n                body: data\n            })\n        })\n    }),\n})\n\n\nexport const { useAddMemberMutation, useLazyGetMemberQuery, useGetMembersQuery, useLazyGetMembersQuery, useDeleteMemberMutation, useUpdateMemberMutation } = teamMemberAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { GetTransactions } from '../../types/sdk';\n\n\nexport const BlockScoutApi = createApi({\n\tbaseQuery: fetchBaseQuery({\n\t\tbaseUrl: 'https://explorer.celo.org/api'\n\t}),\n\tendpoints: (builder) => ({\n\t\tgetTransactions: builder.query<GetTransactions, string>({\n\t\t\tquery: (data) => ({\n\t\t\t\turl: `?module=account&action=tokentx&address=`+data\n\t\t\t})\n\t\t}),\n\t\tgetTransactionBuHash: builder.query<GetTransactions, string>({\n\t\t\tquery: (data) => ({\n\t\t\t\turl: `?module=transaction&action=gettxinfo&txhash=`+data\n\t\t\t})\n\t\t})\n\t})\n});\n\nexport const { useGetTransactionsQuery, useLazyGetTransactionsQuery, useLazyGetTransactionBuHashQuery, useGetTransactionBuHashQuery } = BlockScoutApi;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { GetMinimumAmount, GetMinimumAmountResponse, GetSwap, GetSwapResponse } from '../../types/sdk';\nimport { BaseUrl } from '../../utils/const'\nimport { RootState } from '../store';\n\nexport const swapAPI = createApi({\n    keepUnusedDataFor: 0,\n    reducerPath: 'swapApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        getConvertableTokenAmount: builder.mutation<GetMinimumAmountResponse, GetMinimumAmount>({\n            query: (data) => ({\n                url: '/transaction/minimumAmountOut',\n                method: 'POST',\n                body: data\n            }),\n        }),\n        swapCoins: builder.mutation<GetSwapResponse, GetSwap>({\n            query: (data) =>({\n                url: '/transaction/swap',\n                method: 'POST',\n                body: data\n            })\n        })    \n    }),\n})\n\nexport const {useGetConvertableTokenAmountMutation, useSwapCoinsMutation} = swapAPI\n\n\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utils/const'\nimport { AddOwner, AddOwnerResponse, ChangeRequiremnt, ChangeRequiremntResponse, CustomerCreate, CustomerCreateResponse, GetCustomer, GetRequiredSignatures, GetRequiredSignaturesResponse, MultisigBalance, MultisigBalanceResponse, NonExecTransaction, NonExecTransactionItem, NonExecTransactionResponse, RecTransaction, RecTransactionResponse, ReplaceOwner, SubmitTrasaction, SubmitTrasactionResponse } from '../../types/sdk'\nimport { RootState } from '../store';\nimport { method } from 'lodash';\n\nexport const multisigAPI = createApi({\n    reducerPath: 'multisigAPI',\n    keepUnusedDataFor: 0,\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n        mode: 'cors',\n    }),\n    endpoints: (builder) => ({\n\n        getMultisigBalance: builder.query<MultisigBalanceResponse, MultisigBalance>({\n            query: (data) => ({\n                url: '/multisig/balance/' + data.address,\n            })\n        }),\n\n        //MULTISIG\n        importAddress: builder.mutation<{ result: { address: string } }, { multisigAddress: string }>({\n            query: (data) => ({\n                url: '/multisig/importAddress',\n                method: 'POST',\n                body: data\n            }),\n        }),\n        createAddress: builder.mutation<{ multiSigAddress: { address: string } }, { phrase: string, owners: string[], required: number, internalRequired: number }>({\n            query: (data) => ({\n                url: '/multisig/createMultisig',\n                method: 'POST',\n                body: data\n            })\n        }),\n        getMultisigAddresses: builder.query<{ addresses: Array<{ address: string }> }, void>({\n            query: () => ({\n                url: '/multisig/addresses',\n            })\n        }),\n        removeMultisigAddress: builder.mutation<{ message: string }, { address: string }>({\n            query: (data) => ({\n                url: '/multisig/removeAddress/' + data.address,\n                method: 'DELETE',\n            })\n        }),\n\n\n        //OWNERS\n        getOwners: builder.query<string[], { address: string }>({\n            query: (data) => ({\n                url: '/multisig/owners/' + data.address,\n            })\n        }),\n        addOwner: builder.mutation<AddOwnerResponse, AddOwner>({\n            query: (data) => ({\n                url: '/multisig/addOwner',\n                method: 'POST',\n                body: data\n            })\n        }),\n        removeOwner: builder.mutation<AddOwnerResponse, AddOwner>({\n            query: (data) => ({\n                url: '/multisig/removeOwner',\n                method: 'DELETE',\n                body: data\n            })\n        }),\n        replaceOwner: builder.mutation<AddOwnerResponse, ReplaceOwner>({\n            query: (data) => ({\n                url: '/multisig/replaceOwner',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n\n\n\n        // Settings\n        getRequiredSignatures: builder.query<GetRequiredSignaturesResponse, GetRequiredSignatures>({\n            query: (data) => ({\n                url: '/multisig/required/' + data.address,\n            })\n        }),\n        changeRequiredSignatures: builder.mutation<ChangeRequiremntResponse, ChangeRequiremnt>({\n            query: (data) => ({\n                url: '/multisig/changeRequirement',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        chnageInternalRequiredSignatures: builder.mutation<ChangeRequiremntResponse, ChangeRequiremnt>({\n            query: (data) => ({\n                url: '/multisig/changeInternalRequirement',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n\n\n        //Transactions\n        submitTransactions: builder.mutation<SubmitTrasactionResponse, SubmitTrasaction>({\n            query: (data) => ({\n                url: '/multisig/submitTransaction',\n                method: 'POST',\n                body: data\n            })\n        }),\n        revokeTransactions: builder.mutation<RecTransactionResponse, RecTransaction>({\n            query: (data) => ({\n                url: '/multisig/revokeTransaction',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        confirmTransactions: builder.mutation<RecTransactionResponse, RecTransaction>({\n            query: (data) => ({\n                url: '/multisig/confirmTransaction',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        executeTransactions: builder.mutation<RecTransactionResponse, RecTransaction>({\n            query: (data) => ({\n                url: '/multisig/executeTransaction',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        getMultisigTransaction: builder.query<{ txResult: NonExecTransactionItem }, NonExecTransaction & { id: string }>({\n            query: (data) => ({\n                url: '/multisig/transaction/' + data.address + `/${data.id}`,\n            })\n        }),\n        getNotExecutedTransactions: builder.query<NonExecTransactionResponse, NonExecTransaction>({\n            query: (data) => ({\n                url: '/multisig/transactions/' + data.address,\n            })\n        }),\n        getTransactionsByPagination: builder.query<NonExecTransactionResponse, NonExecTransaction & { skip: number, take: number }>({\n            query: (data) => ({\n                url: '/multisig/transactions/' + data.address + `/${data.skip}/${data.take}`,\n            })\n        }),\n        getAllTransactions: builder.query<{ transactions: NonExecTransactionItem[] }, NonExecTransaction>({\n            query: (data) => ({\n                url: '/multisig/allTransactions/' + data.address,\n                transformResponse: (response: { data: { transactions: NonExecTransactionItem[] } }) => {\n                    response.data.transactions.forEach((item, index) => {\n                        item.id = index;\n                    })\n\n                    return response;\n                }\n            })\n        })\n    }),\n})\n\n\nexport const {\n    useGetTransactionsByPaginationQuery, useLazyGetTransactionsByPaginationQuery,\n    useGetAllTransactionsQuery, useLazyGetAllTransactionsQuery,\n    useCreateAddressMutation, useGetMultisigTransactionQuery, useLazyGetMultisigTransactionQuery,\n    useGetMultisigBalanceQuery, useLazyGetMultisigBalanceQuery,\n    useImportAddressMutation, useAddOwnerMutation, useChangeRequiredSignaturesMutation,\n    useChnageInternalRequiredSignaturesMutation, useConfirmTransactionsMutation,\n    useExecuteTransactionsMutation, useGetMultisigAddressesQuery,\n    useGetNotExecutedTransactionsQuery, useGetOwnersQuery, useGetRequiredSignaturesQuery,\n    useLazyGetMultisigAddressesQuery, useLazyGetNotExecutedTransactionsQuery, useLazyGetOwnersQuery,\n    useLazyGetRequiredSignaturesQuery, useRemoveMultisigAddressMutation, useRemoveOwnerMutation,\n    useReplaceOwnerMutation, useRevokeTransactionsMutation, useSubmitTransactionsMutation } = multisigAPI","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector ","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface IStorage {\n    accountAddress: string,\n    token: string,\n    uid: string,\n    encryptedMessageToken: string,\n    contractAddress?: string,\n    name?: string;\n    surname?: string,\n    companyName?: string,\n}\n\ninterface IContainer {\n    user: IStorage | null, \n}\n\nconst initialState = (): IContainer => {\n    const val = localStorage.getItem(\"remoxUser\")\n\n    if (val) {\n        const data: IStorage = JSON.parse(val)\n        return { user: data }\n    }\n    return { user: null };\n}\n\n\nexport const storageSlice = createSlice({\n    name: \"storage\",\n    initialState: initialState(),\n    reducers: {\n        setStorage: (state, action: {payload: IStorage}) => {\n            localStorage.setItem(\"remoxUser\", JSON.stringify(action.payload))\n            const data: IStorage = action.payload\n            state.user = data\n        },\n        removeStorage: (state) => {\n            localStorage.removeItem(\"remoxUser\")\n            state.user = null;\n        }\n    }\n})\n\nexport const { setStorage, removeStorage } = storageSlice.actions\n\nexport const selectStorage = (state: RootState) => state.storage.user\n\nexport default storageSlice.reducer","import React, { useEffect } from 'react'\nimport { usePopperTooltip } from 'react-popper-tooltip';\nimport 'react-popper-tooltip/dist/styles.css';\n\n\nexport default function Copied({ tooltip, triggerRef }: { tooltip: boolean, triggerRef: React.SetStateAction<HTMLElement | null> }) {\n\n    const {\n        getArrowProps,\n        getTooltipProps,\n        setTooltipRef,\n        setTriggerRef,\n        visible\n    } = usePopperTooltip();\n\n    useEffect(() => {\n        setTriggerRef(triggerRef)\n    }, [triggerRef])\n\n    return (\n        <>\n            {tooltip && (\n                <div\n                    ref={setTooltipRef}\n                    {...getTooltipProps({ className: '!rounded-sm tooltip-container' })}\n                >\n                    <div {...getArrowProps({ className: 'tooltip-arrow ' })} />\n                    <div className=\"text-sm -m-2 px-2 py-1 rounded-xl\">\n                        Copied!\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n","import { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { StableToken } from \"@celo/contractkit\";\r\nimport { stringToSolidityBytes } from \"@celo/contractkit/lib/wrappers/BaseWrapper\";\r\nimport { GoldTokenWrapper } from \"@celo/contractkit/lib/wrappers/GoldTokenWrapper\";\r\nimport { toTransactionBatch } from \"@celo/contractkit/lib/wrappers/MetaTransactionWallet\";\r\nimport { StableTokenWrapper } from \"@celo/contractkit/lib/wrappers/StableTokenWrapper\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectStorage } from \"redux/reducers/storage\";\r\nimport { AltCoins, Coins } from \"types\";\r\nimport _ from 'lodash'\r\n\r\nconst Ether = import(\"ethers\");\r\nconst nomAbi = import(\"API/ABI/nom.json\")\r\n\r\nexport interface PaymentInput {\r\n    coin: AltCoins,\r\n    amount: string,\r\n    recipient: string,\r\n    comment?: string\r\n}\r\n\r\nexport default function usePay() {\r\n    const { kit, address, performActions } = useContractKit()\r\n    const storage = useSelector(selectStorage)\r\n\r\n    const BatchPay = async (inputArr: PaymentInput[]) => {\r\n        const arr = []\r\n        const approveArr: { coin: AltCoins, amount: number }[] = []\r\n\r\n        for (let index = 0; index < inputArr.length; index++) {\r\n            const element = inputArr[index];\r\n            if (!approveArr.some(e => e.coin.name === element.coin.name)) {\r\n                approveArr.push({ coin: element.coin, amount: parseFloat(element.amount) })\r\n            } else {\r\n                approveArr.find(e => e.coin.name === element.coin.name)!.amount += parseFloat(element.amount)\r\n            }\r\n        }\r\n\r\n        for (let index = 0; index < approveArr.length; index++) {\r\n            const token = await kit.contracts.getErc20(approveArr[index].coin.contractAddress);\r\n            const approve = token.approve(storage!.contractAddress!, kit.web3.utils.toWei(approveArr[index].amount.toString(), 'ether'))\r\n            await approve.sendAndWaitForReceipt({ from: address!, gas: 300000, gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei') })\r\n        }\r\n        \r\n\r\n        for (let i = 0; i < inputArr.length; i++) {\r\n            const tx = await GenerateTx(inputArr[i])\r\n            arr.push(tx.txo)\r\n        }\r\n\r\n        const input = toTransactionBatch(arr)\r\n\r\n        const router = new kit.connection.web3.eth.Contract(\r\n            [\r\n                {\r\n                    \"inputs\": [],\r\n                    \"payable\": false,\r\n                    \"stateMutability\": \"nonpayable\",\r\n                    \"type\": \"constructor\"\r\n                },\r\n                {\r\n                    \"anonymous\": false,\r\n                    \"inputs\": [{\r\n                        \"indexed\": true,\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"destination\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"indexed\": false,\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"value\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"indexed\": false,\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"data\",\r\n                        \"type\": \"bytes\"\r\n                    },\r\n                    {\r\n                        \"indexed\": false,\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"returnData\",\r\n                        \"type\": \"bytes\"\r\n                    }\r\n                    ],\r\n                    \"name\": \"TransactionExecution\",\r\n                    \"type\": \"event\"\r\n                },\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [{\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"destination\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"value\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"data\",\r\n                        \"type\": \"bytes\"\r\n                    }\r\n                    ],\r\n                    \"name\": \"executeTransaction\",\r\n                    \"outputs\": [{\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"bytes\"\r\n                    }],\r\n                    \"payable\": false,\r\n                    \"stateMutability\": \"nonpayable\",\r\n                    \"type\": \"function\"\r\n                },\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [{\r\n                        \"internalType\": \"address[]\",\r\n                        \"name\": \"destinations\",\r\n                        \"type\": \"address[]\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256[]\",\r\n                        \"name\": \"values\",\r\n                        \"type\": \"uint256[]\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"data\",\r\n                        \"type\": \"bytes\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256[]\",\r\n                        \"name\": \"dataLengths\",\r\n                        \"type\": \"uint256[]\"\r\n                    }\r\n                    ],\r\n                    \"name\": \"executeTransactions\",\r\n                    \"outputs\": [{\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"bytes\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256[]\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"uint256[]\"\r\n                    }\r\n                    ],\r\n                    \"payable\": false,\r\n                    \"stateMutability\": \"nonpayable\",\r\n                    \"type\": \"function\"\r\n                }], storage!.contractAddress!)\r\n\r\n\r\n\r\n        const sender = await router.methods.executeTransactions(input.destinations, input.values, input.callData, input.callDataLengths).send({ from: address!, gas: 210000, gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei') })\r\n        console.log(sender.transactionHash)\r\n    }\r\n\r\n    const Pay = async ({ coin, amount, recipient, comment }: PaymentInput) => {\r\n        try {\r\n            return await performActions(async (kit) => {\r\n                let nomContract = new kit.web3.eth.Contract(\r\n                    (await nomAbi).abi as AbiItem[],\r\n                    \"0xABf8faBbC071F320F222A526A2e1fBE26429344d\"\r\n                )\r\n\r\n                const isAddressExist = kit.web3.utils.isAddress(recipient);\r\n                if (!isAddressExist) {\r\n                    if (recipient.slice(0, 2) != \"0x\") {\r\n                        recipient = recipient.slice(recipient.length - 4) == \".nom\" ? recipient.slice(0, recipient.length - 4) : recipient\r\n                        const bytes = (await Ether).utils.formatBytes32String(recipient);\r\n                        recipient = await nomContract.methods.resolve(bytes).call();\r\n\r\n                        if (recipient.slice(0, 7) == \"0x00000\") throw new Error('There is not any wallet belong this address');\r\n                    }\r\n                    else throw new Error('There is not any wallet belong this address');\r\n                }\r\n\r\n\r\n                let celotx = await GenerateTx({ coin, amount, recipient, comment });\r\n                console.log(celotx.txo.encodeABI())\r\n                let txSend = await celotx.send({ from: address!, gasPrice: kit.web3.utils.toWei(\"0.5\", 'Gwei') })\r\n                let celoReceipt = await txSend.waitReceipt();\r\n\r\n                return {\r\n                    from: address!,\r\n                    to: recipient,\r\n                    value: amount,\r\n                    transactionHash: celoReceipt.transactionHash\r\n                };\r\n            })\r\n\r\n        } catch (error: any) {\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    const GenerateTx = async ({ coin, amount, recipient, comment }: PaymentInput) => {\r\n        const amountWei = kit.web3.utils.toWei(amount.toString(), 'ether');\r\n\r\n        let token = await (\r\n            async () => {\r\n                if (coin === Coins.CELO) {\r\n                    return await kit.contracts.getGoldToken()\r\n                } else if (coin === Coins.cUSD || coin === Coins.cEUR || coin === Coins.cREAL) {\r\n                    return await kit.contracts.getStableToken((coin.name as unknown) as StableToken)\r\n                } else {\r\n                    if (!comment) {\r\n                        return await kit.contracts.getErc20(coin.contractAddress)\r\n                    }\r\n                    throw Error(\"If you want to send an altToken, you must not specify a comment\")\r\n                }\r\n            }\r\n        )();\r\n        let currentBalance = await token.balanceOf(address!);\r\n        let bnBalance = kit.web3.utils.toBN(currentBalance.toString());\r\n        let celoBalance = kit.web3.utils.fromWei(bnBalance.toString(), 'ether');\r\n\r\n        if (amount.toString() >= celoBalance)\r\n            throw new Error('Amount exceeds balance');\r\n\r\n        return comment\r\n            ? await (token as unknown as GoldTokenWrapper | StableTokenWrapper)\r\n                .transferWithComment(recipient, amountWei, comment)\r\n            : await token.transferFrom(address!, recipient, amountWei);\r\n    }\r\n\r\n    return { Pay, BatchPay };\r\n}\r\n\r\n\r\nexport type AbiType = 'function' | 'constructor' | 'event' | 'fallback';\r\nexport type StateMutabilityType = 'pure' | 'view' | 'nonpayable' | 'payable';\r\n\r\nexport interface AbiItem {\r\n    anonymous?: boolean;\r\n    constant?: boolean;\r\n    inputs?: AbiInput[];\r\n    name?: string;\r\n    outputs?: AbiOutput[];\r\n    payable?: boolean;\r\n    stateMutability?: StateMutabilityType;\r\n    type: AbiType;\r\n    gas?: number;\r\n}\r\n\r\nexport interface AbiInput {\r\n    name: string;\r\n    type: string;\r\n    indexed?: boolean;\r\n    components?: AbiInput[];\r\n    internalType?: string;\r\n}\r\n\r\nexport interface AbiOutput {\r\n    name: string;\r\n    type: string;\r\n    components?: AbiOutput[];\r\n    internalType?: string;\r\n}","import { initializeApp } from 'firebase/app';\r\nimport { getAnalytics } from 'firebase/analytics';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: 'AIzaSyDyxdkVNfCQyGf_P9_YUXZLT74QHHahhCU',\r\n\tauthDomain: 'remox-dao.firebaseapp.com',\r\n\tprojectId: 'remox-dao',\r\n\tstorageBucket: 'remox-dao.appspot.com',\r\n\tmessagingSenderId: '206826931700',\r\n\tappId: '1:206826931700:web:e2f9e6bd053772b80ba5a1',\r\n\tmeasurementId: 'G-7BMKHB905F'\r\n};\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);\r\nexport const auth = getAuth();\r\nexport const analytics = getAnalytics(app);\r\n","import { ClipLoader } from 'react-spinners';\n\nexport default function Button({ children, version = \"main\", type = \"button\", onClick, className, isLoading = false }: { children: JSX.Element | JSX.Element[] | string, version?: \"main\" | \"second\", type?: \"button\" | \"submit\", onClick?: () => void, className?: string, isLoading?: boolean}) {\n    return <button type={type} onClick={onClick} className={`${className} ${version === \"main\" ? \" bg-primary text-white hover:bg-white hover:text-primary\" : 'bg-white text-primary hover:bg-primary hover:text-white'} transition-colors border-2 border-primary shadow-xl px-8 py-3 rounded-xl`} disabled={isLoading}>{isLoading ? <ClipLoader size=\"18px\"/> : children} </button>\n}\n","import { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport { onSnapshot, doc, setDoc, getDoc, collection, query, where, getDocs, WhereFilterOp, runTransaction, deleteDoc } from 'firebase/firestore';\r\n\r\n\r\nexport async function FirestoreRead<DataType>(collection: string, document: string) {\r\n    const docRef = doc(db, collection, document);\r\n    const docSnap = await getDoc(docRef);\r\n\r\n    if (docSnap.exists()) {\r\n        return docSnap.data() as DataType;\r\n    } else {\r\n        console.error(\"No such document!\");\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport function FirestoreWrite<DataType>() {\r\n\r\n    const createDoc = async (collection: string, document: string, data: DataType) => {\r\n        await setDoc(doc(db, collection, document), data);\r\n    }\r\n\r\n    const mergeDoc = async (collection: string, document: string, data: DataType) => {\r\n        await setDoc(doc(db, collection, document), data, { merge: true });\r\n    }\r\n\r\n    const deleteDocument = async (collection: string, document: string) => {\r\n        await deleteDoc(doc(db, collection, document));\r\n    }\r\n\r\n    const updateDoc = async (collection: string, document: string, data: DataType) => {\r\n        try {\r\n            const ref = doc(db, collection, document)\r\n            await runTransaction(db, async (transaction) => {\r\n                const sfDoc = await transaction.get(ref);\r\n                if (!sfDoc.exists()) {\r\n                    throw \"Document does not exist!\";\r\n                }\r\n                transaction.update(ref, data);\r\n            });\r\n        } catch (e) {\r\n            console.error(\"Transaction failed: \", e);\r\n            throw new Error(\"Transaction failed: \" + e)\r\n        }\r\n    }\r\n\r\n    return { createDoc, mergeDoc, updateDoc, deleteDocument }\r\n}\r\n\r\n\r\n\r\n\r\nexport function useFirestoreRead<DataType>(collection: string, document: string) {\r\n    const [data, setData] = useState<DataType>();\r\n\r\n    const readDoc = (collection: string, document: string) => {\r\n        return onSnapshot(doc(db, collection, document), (doc) => {\r\n            setData(doc.data() as DataType | undefined)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsub = readDoc(collection, document);\r\n        return () => unsub();\r\n    }, [])\r\n\r\n    return { data };\r\n}\r\n\r\nexport function useFirestoreReadMultiple<DataType>(collectionName: string, firstQuery: string, condition: WhereFilterOp, secondQuery: any) {\r\n    const [data, setData] = useState<DataType[]>();\r\n\r\n    const read = (collectionName: string, firstQuery: string, secondQuery: any, condition: WhereFilterOp) => {\r\n        const q = query(collection(db, collectionName), where(firstQuery, condition, secondQuery));\r\n        return onSnapshot(q, (querySnapshot) => {\r\n            const data: DataType[] = [];\r\n            querySnapshot.forEach((doc) => {\r\n                data.push(doc.data() as DataType);\r\n            });\r\n            setData(data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsub = read(collectionName, firstQuery, secondQuery, condition);\r\n        return () => unsub();\r\n    }, [])\r\n\r\n    return { data };\r\n}\r\n\r\n\r\n\r\nexport function useFirestoreSearchField<DataType>() {\r\n    const [isLoading, setLoading] = useState(false)\r\n\r\n    const search = async (collectionName: string, field: string, searching: string) => {\r\n        setLoading(true)\r\n        const ref = collection(db, collectionName);\r\n        const q = query(ref, where(field, \"==\", searching));\r\n        const docSnap = await getDocs(q);\r\n        setLoading(false)\r\n        if (docSnap.docs.length > 0) {\r\n            return docSnap.docs.map(e => e.data()) as DataType[];\r\n        } else {\r\n            console.error(\"No such user!\");\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    return { search, isLoading };\r\n}\r\n\r\n\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\n\ninterface NotificatinoState {\n    onSuccess: boolean;\n    onSuccessText: string | JSX.Element;\n    onError: boolean;\n    onErrorText: string;\n    notificationSeen: number;\n}\n\nconst initialState: NotificatinoState = {\n    onSuccess: false,\n    onSuccessText: 'Successfully!',\n    onError: false,\n    onErrorText: '',\n    notificationSeen: 0\n}\n\nexport const notificationSlice = createSlice({\n    name: 'notification',\n    initialState,\n    reducers: {\n        changeError: (state, action: PayloadAction<{ activate: boolean; text?: string }>) => {\n            state.onErrorText = action.payload.text || \"Something went wrong\";\n            state.onError = action.payload.activate;\n        },\n        changeSuccess: (state, action: PayloadAction<{ activate: boolean; text?: string | JSX.Element }>) => {\n            state.onSuccess = action.payload.activate;\n            state.onSuccessText = action.payload.text || \"Successfully!\"\n        },\n        changeNotificationSeen: (state, action: PayloadAction<number>) => {\n            state.notificationSeen = action.payload;\n        }\n    },\n})\n\nexport const { changeError, changeSuccess, changeNotificationSeen } = notificationSlice.actions\n\nexport const selectError = (state: RootState) => state.notification.onError\nexport const selectErrorText = (state: RootState) => state.notification.onErrorText\nexport const selectSuccessText = (state: RootState) => state.notification.onSuccessText\nexport const selectSuccess = (state: RootState) => state.notification.onSuccess\n\nexport default notificationSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\nimport { IStorage } from './storage'\n\n\ninterface IContainer {\n    address: string, \n}\n\nconst init = (): IContainer => {\n    const val = localStorage.getItem(\"remoxUser\")\n\n    if (val) {\n        const data: IStorage = JSON.parse(val)\n        return { address: data.accountAddress }\n    }\n    return { address: '' };\n}\n\nexport const SelectedAccountSlice = createSlice({\n    name: 'selectedAccount',\n    initialState: init(),\n    reducers: {\n        changeAccount: (state: IContainer, action: PayloadAction<string>) => {\n            state.address = action.payload\n        },\n \n    },\n})\n\nexport const { changeAccount } = SelectedAccountSlice.actions\n\nexport const SelectSelectedAccount = (state: RootState) => state.selectedAccount.address\n\nexport default SelectedAccountSlice.reducer","import { AES, enc } from 'crypto-js';\r\nconst Hash = require('ipfs-only-hash');\r\n\r\nexport const hashing = async (...rest: string[]) => {\r\n\treturn await Hash.of(rest.reduce((acc, cur) => acc + cur));\r\n};\r\n\r\nexport const compareHashes = async (hash1: string, ...rest: string[]) => {\r\n\tconst hash2 = await Hash.of(rest.reduce((acc, cur) => acc + cur));\r\n\treturn hash2 === hash1;\r\n};\r\n\r\nexport const encryptMessage = function(messageToencrypt = '', secretkey = '') {\r\n\tvar encryptedMessage = AES.encrypt(messageToencrypt, secretkey);\r\n\treturn encryptedMessage.toString();\r\n};\r\n\r\nexport const decryptMessage = function(encryptedMessage = '', secretkey = '') {\r\n\tvar decryptedBytes = AES.decrypt(encryptedMessage, secretkey);\r\n\tvar decryptedMessage = decryptedBytes.toString(enc.Latin1);\r\n\r\n\treturn decryptedMessage;\r\n};\r\n"],"sourceRoot":""}