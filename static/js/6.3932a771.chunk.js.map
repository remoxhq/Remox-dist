{"version":3,"sources":["../../src.ts/index.ts","../../lib/jsbi.ts","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/decimal.js-light/decimal.js","../node_modules/@ubeswap/sdk/node_modules/big.js/big.js","../node_modules/toformat/toFormat.js","../../src.ts/utils.ts","../../../../src/lib/transactions.ts","../../../../src/lib/CeloProvider.ts","../../../../src/lib/CeloWallet.ts","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../../src/constants.ts","../../src/utils.ts","../../src/entities/fractions/fraction.ts","../../src/entities/fractions/percent.ts","../../src/entities/token.ts","../../src/entities/fractions/tokenAmount.ts","../../src/entities/fractions/price.ts","../../src/errors.ts","../../src/entities/pair.ts","../../src/entities/route.ts","../../src/entities/trade.ts","../../node_modules/regenerator-runtime/runtime.js","../../src/fetcher.ts","../../src/router.ts"],"names":["Math","imul","clz32","abs","max","constructor","length","sign","JSBI","toDebugString","result","digit","toString","radix","__copy","i","__trim","newLength","last","__initializeDigits","__clzmsd","__inplaceMultiplyAdd","mLow","mHigh","multiplier","carry","high","summand","d","dLow","dHigh","pLow","pMid1","pMid2","pHigh","__inplaceAdd","sum","startIndex","__inplaceSub","borrow","current","r0","halfDigits","sub","subtrahend","r15","__inplaceRightShift","shift","__digit","__unsignedDigit","__setDigit","__setDigitGrow","__halfDigitLength","len","__halfDigit","__setHalfDigit","digitIndex","previous","updated","value","BigInt","Number","isFinite","arg","primitive","toNumber","xLength","x","xMsd","msdLeadingZeros","xBitLength","exponent","currentDigit","mantissaHigh","mantissaHighBitsUnset","mantissaLow","mantissaLowBitsUnset","rounding","signBit","unaryMinus","bitwiseNot","exponentiate","y","expValue","neededDigits","msd","runningSquare","multiply","resultLength","divide","resultSign","divisor","quotient","remainder","remainderDigit","add","subtract","leftShift","signedRightShift","unsignedRightShift","lessThan","lessThanOrEqual","greaterThan","greaterThanOrEqual","equal","notEqual","bitwiseAnd","y1","bitwiseXor","bitwiseOr","asIntN","n","neededLength","topDigit","compareDigit","asUintN","bitsInTopDigit","ADD","LT","LE","GT","GE","EQ","NE","__zero","__oneDigit","__decideRounding","topUnconsumedBit","mask","__fromDouble","digits","kMantissaHighTopBit","msdTopBit","remainingMantissaBits","__isWhitespace","c","__fromString","string","cursor","chars","bitsPerChar","roundup","__kBitsPerCharTableShift","limDigit","limAlpha","parts","partsBits","done","part","bits","charsSoFar","m","digitsSoFar","__fillFromParts","bitsInDigit","partBits","__toStringBasePowerOfTwo","charMask","charsRequired","Array","pos","availableBits","newDigit","consumedBits","__toStringGeneric","secondHalf","bitLength","minBitsPerChar","secondHalfChars","conqueror","input","divisionResult","firstHalf","__unequalSign","leftNegative","__absoluteGreater","bothNegative","__absoluteLess","__compareToBigInt","xSign","__compareToNumber","ySign","yAbs","xDigit","__compareToDouble","rawExponent","yBitLength","compareMantissa","__equalToNumber","__comparisonResultToBool","op","__compare","__absoluteAdd","r","__absoluteSub","__absoluteAddOne","inputLength","__absoluteSubOne","__absoluteAnd","yLength","numPairs","tmp","tmpLength","__absoluteAndNot","__absoluteOr","__absoluteXor","__absoluteCompare","diff","__multiplyAccumulate","m2Low","m2High","multiplicand","accumulatorIndex","acc","accumulator","m1","m1Low","m1High","rLow","rMid1","rMid2","rHigh","__internalMultiplyAdd","source","rx","ry","__absoluteDivSmall","upperHalf","lowerHalf","__absoluteModSmall","__absoluteDivLarge","n2","dividend","q","wantQuotient","qhatv","u","vn1","halfDigitBuffer","j","qhat","ujn","rhat","vn2","ujn2","__clz15","__specialLeftShift","addDigit","__leftShiftByAbsolute","digitShift","bitsShift","grow","__rightShiftByAbsolute","mustRoundDown","__rightShiftByMaximum","__toShiftAmount","__kMaxLengthBits","__toPrimitive","hint","obj","Symbol","exoticToPrim","valueOf","__toNumeric","__isBigInt","__truncateToNBits","drop","__truncateAndSubFromPowerOfTwo","min","limit","msdBitsConsumed","resultMsd","minuendMsd","__digitPow","base","__isOneDigitInt","LN2","log","a","b","getPrototypeOf","setPrototypeOf","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","Map","undefined","module","exports","TypeError","has","get","set","Wrapper","arguments","this","prototype","Object","create","enumerable","writable","configurable","__esModule","fn","Function","call","indexOf","globalScope","ONE","MAX_DIGITS","Decimal","precision","toExpNeg","toExpPos","LN10","external","decimalError","invalidArgument","exponentOutOfRange","mathfloor","floor","mathpow","pow","isDecimal","BASE","MAX_SAFE_INTEGER","MAX_E","P","e","k","xd","yd","Ctor","pr","s","round","slice","ceil","reverse","push","unshift","pop","checkInt32","Error","digitsToString","ws","indexOfLastWord","str","w","getZeroString","absoluteValue","comparedTo","cmp","xdL","ydL","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","idiv","equals","eq","getBase10Exponent","gt","greaterThanOrEqualTo","gte","isInteger","isint","isNegative","isneg","isPositive","ispos","isZero","lt","lessThanOrEqualTo","lte","logarithm","wpr","ln","minus","modulo","mod","times","naturalExponential","exp","naturalLogarithm","negated","neg","plus","sd","z","squareRoot","sqrt","t","toExponential","mul","rL","toDecimalPlaces","todp","rm","toFixed","toInteger","toint","toPower","yIsInt","yn","truncate","toPrecision","toSignificantDigits","tosd","val","toJSON","multiplyInteger","temp","compare","aL","bL","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","denominator","getLn10","zs","c0","numerator","x2","charAt","parseDecimal","replace","search","substring","charCodeAt","rd","doRound","xdi","xe","xLTy","isExp","arr","config","p","v","ps","clone","test","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","hasOwnProperty","define","GLOBAL","Big","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","UNDEFINED","NUMERIC","more","xc","RM","stringify","doExponential","isNonzero","join","yc","l","DP","bl","bt","ri","bz","ai","al","rl","qc","qi","xlty","ye","ygtx","one","prec","half","PE","strict","_Big_","String","nl","parse","roundDown","roundHalfUp","roundHalfEven","roundUp","toFormat","fmt","g1","g2","nd","intd","intp","fracp","dsep","gsep","gsize","sgsize","fgsep","fgsize","tfmt","format","cfmt","split","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","substr","fractionGroupSeparator","fractionGroupSize","RegExp","raw","prefix","invariant","condition","message","ChainId","TradeType","Rounding","MINIMUM_LIQUIDITY","ZERO","TWO","THREE","FIVE","TEN","_100","_997","_1000","SolidityType","SOLIDITY_TYPE_MAXIMA","name","fornoURL","blockscoutURL","validateSolidityTypeInstance","solidityType","validateAndParseAddress","address","getAddress","error","parseBigintIsh","bigintIsh","sortedInsert","items","maxSize","comparator","isFull","lo","hi","mid","toSignificantRounding","toFixedRounding","Fraction","invert","otherParsed","other","equalTo","toSignificant","significantDigits","_100_PERCENT","Percent","Token","chainId","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","CELO","TokenAmount","token","CurrencyAmount","parsedAmount","currency","decimals","toExact","Price","baseCurrency","quoteCurrency","prices","route","pair","fraction","quote","currencyAmount","adjusted","CAN_SET_PROTOTYPE","InsufficientReservesError","isInsufficientReservesError","InsufficientInputAmountError","isInsufficientInputAmountError","PAIR_ADDRESS_CACHE","Pair","tokenAmounts","tokenAmountA","tokenAmountB","tokens","tokenA","tokenB","getCreate2Address","keccak256","pack","involvesToken","priceOf","reserveOf","getOutputAmount","inputAmount","reserve0","reserve1","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLastParsed","totalSupplyAdjusted","rootK","rootKLast","feeLiquidity","token0","Route","pairs","output","path","currentInput","tradeComparator","ioComp","inputOutputComparator","Trade","amounts","nextPairs","tradeType","amount","nextPair","midPrice","exactQuote","slippage","computePriceImpact","amountIn","amountOut","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","maxNumResults","maxHops","currentPairs","originalAmountIn","currencyAmountIn","bestTrades","currencyOut","tokenOut","pairsExcludingThisPair","originalAmountOut","currencyAmountOut","currencyIn","tokenIn","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","key","defineProperty","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","async","Promise","iter","keys","object","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","TOKEN_DECIMALS_CACHE","Fetcher","provider","getDefaultProvider","getNetwork","parsedDecimals","IUniswapV2Pair","reserves0","reserves1","balances","toHex","Router","options","to","trade","deadline","Date","getTime","useFeeOnTransfer","Boolean","methodName","args"],"mappings":"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","file":"static/js/6.3932a771.chunk.js","sourcesContent":["\"use strict\";\nimport { id } from \"./id\";\nimport { isValidName, namehash } from \"./namehash\";\nimport { hashMessage, messagePrefix } from \"./message\";\nimport { TypedDataEncoder as _TypedDataEncoder } from \"./typed-data\";\nexport { id, namehash, isValidName, messagePrefix, hashMessage, _TypedDataEncoder, };\n//# sourceMappingURL=index.js.map","(function(i,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_():\"function\"==typeof define&&define.amd?define(_):(i=i||self,i.JSBI=_())})(this,function(){'use strict';var i=Math.imul,_=Math.clz32,t=Math.abs,e=Math.max,g=Math.floor;class o extends Array{constructor(i,_){if(super(i),this.sign=_,i>o.__kMaxLength)throw new RangeError(\"Maximum BigInt size exceeded\")}static BigInt(i){var _=Number.isFinite;if(\"number\"==typeof i){if(0===i)return o.__zero();if(o.__isOneDigitInt(i))return 0>i?o.__oneDigit(-i,!0):o.__oneDigit(i,!1);if(!_(i)||g(i)!==i)throw new RangeError(\"The number \"+i+\" cannot be converted to BigInt because it is not an integer\");return o.__fromDouble(i)}if(\"string\"==typeof i){const _=o.__fromString(i);if(null===_)throw new SyntaxError(\"Cannot convert \"+i+\" to a BigInt\");return _}if(\"boolean\"==typeof i)return!0===i?o.__oneDigit(1,!1):o.__zero();if(\"object\"==typeof i){if(i.constructor===o)return i;const _=o.__toPrimitive(i);return o.BigInt(_)}throw new TypeError(\"Cannot convert \"+i+\" to a BigInt\")}toDebugString(){const i=[\"BigInt[\"];for(const _ of this)i.push((_?(_>>>0).toString(16):_)+\", \");return i.push(\"]\"),i.join(\"\")}toString(i=10){if(2>i||36<i)throw new RangeError(\"toString() radix argument must be between 2 and 36\");return 0===this.length?\"0\":0==(i&i-1)?o.__toStringBasePowerOfTwo(this,i):o.__toStringGeneric(this,i,!1)}static toNumber(i){const _=i.length;if(0===_)return 0;if(1===_){const _=i.__unsignedDigit(0);return i.sign?-_:_}const t=i.__digit(_-1),e=o.__clz30(t),n=30*_-e;if(1024<n)return i.sign?-Infinity:1/0;let g=n-1,s=t,l=_-1;const r=e+3;let a=32===r?0:s<<r;a>>>=12;const u=r-12;let d=12<=r?0:s<<20+r,h=20+r;for(0<u&&0<l&&(l--,s=i.__digit(l),a|=s>>>30-u,d=s<<u+2,h=u+2);0<h&&0<l;)l--,s=i.__digit(l),d|=30<=h?s<<h-30:s>>>30-h,h-=30;const m=o.__decideRounding(i,h,l,s);if((1===m||0===m&&1==(1&d))&&(d=d+1>>>0,0===d&&(a++,0!=a>>>20&&(a=0,g++,1023<g))))return i.sign?-Infinity:1/0;const b=i.sign?-2147483648:0;return g=g+1023<<20,o.__kBitConversionInts[1]=b|g|a,o.__kBitConversionInts[0]=d,o.__kBitConversionDouble[0]}static unaryMinus(i){if(0===i.length)return i;const _=i.__copy();return _.sign=!i.sign,_}static bitwiseNot(i){return i.sign?o.__absoluteSubOne(i).__trim():o.__absoluteAddOne(i,!0)}static exponentiate(i,_){if(_.sign)throw new RangeError(\"Exponent must be positive\");if(0===_.length)return o.__oneDigit(1,!1);if(0===i.length)return i;if(1===i.length&&1===i.__digit(0))return i.sign&&0==(1&_.__digit(0))?o.unaryMinus(i):i;if(1<_.length)throw new RangeError(\"BigInt too big\");let t=_.__unsignedDigit(0);if(1===t)return i;if(t>=o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");if(1===i.length&&2===i.__digit(0)){const _=1+(0|t/30),e=i.sign&&0!=(1&t),n=new o(_,e);n.__initializeDigits();const g=1<<t%30;return n.__setDigit(_-1,g),n}let e=null,n=i;for(0!=(1&t)&&(e=i),t>>=1;0!==t;t>>=1)n=o.multiply(n,n),0!=(1&t)&&(null===e?e=n:e=o.multiply(e,n));return e}static multiply(_,t){if(0===_.length)return _;if(0===t.length)return t;let i=_.length+t.length;30<=_.__clzmsd()+t.__clzmsd()&&i--;const e=new o(i,_.sign!==t.sign);e.__initializeDigits();for(let n=0;n<_.length;n++)o.__multiplyAccumulate(t,_.__digit(n),e,n);return e.__trim()}static divide(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return o.__zero();const t=i.sign!==_.sign,e=_.__unsignedDigit(0);let n;if(1===_.length&&32767>=e){if(1===e)return t===i.sign?i:o.unaryMinus(i);n=o.__absoluteDivSmall(i,e,null)}else n=o.__absoluteDivLarge(i,_,!0,!1);return n.sign=t,n.__trim()}static remainder(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return i;const t=_.__unsignedDigit(0);if(1===_.length&&32767>=t){if(1===t)return o.__zero();const _=o.__absoluteModSmall(i,t);return 0===_?o.__zero():o.__oneDigit(_,i.sign)}const e=o.__absoluteDivLarge(i,_,!1,!0);return e.sign=i.sign,e.__trim()}static add(i,_){const t=i.sign;return t===_.sign?o.__absoluteAdd(i,_,t):0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t)}static subtract(i,_){const t=i.sign;return t===_.sign?0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t):o.__absoluteAdd(i,_,t)}static leftShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__rightShiftByAbsolute(i,_):o.__leftShiftByAbsolute(i,_)}static signedRightShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__leftShiftByAbsolute(i,_):o.__rightShiftByAbsolute(i,_)}static unsignedRightShift(){throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\")}static lessThan(i,_){return 0>o.__compareToBigInt(i,_)}static lessThanOrEqual(i,_){return 0>=o.__compareToBigInt(i,_)}static greaterThan(i,_){return 0<o.__compareToBigInt(i,_)}static greaterThanOrEqual(i,_){return 0<=o.__compareToBigInt(i,_)}static equal(_,t){if(_.sign!==t.sign)return!1;if(_.length!==t.length)return!1;for(let e=0;e<_.length;e++)if(_.__digit(e)!==t.__digit(e))return!1;return!0}static notEqual(i,_){return!o.equal(i,_)}static bitwiseAnd(i,_){if(!i.sign&&!_.sign)return o.__absoluteAnd(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length)+1;let n=o.__absoluteSubOne(i,t);const g=o.__absoluteSubOne(_);return n=o.__absoluteOr(n,g,n),o.__absoluteAddOne(n,!0,n).__trim()}return i.sign&&([i,_]=[_,i]),o.__absoluteAndNot(i,o.__absoluteSubOne(_)).__trim()}static bitwiseXor(i,_){if(!i.sign&&!_.sign)return o.__absoluteXor(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length),n=o.__absoluteSubOne(i,t),g=o.__absoluteSubOne(_);return o.__absoluteXor(n,g,n).__trim()}const t=e(i.length,_.length)+1;i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteXor(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static bitwiseOr(i,_){const t=e(i.length,_.length);if(!i.sign&&!_.sign)return o.__absoluteOr(i,_).__trim();if(i.sign&&_.sign){let e=o.__absoluteSubOne(i,t);const n=o.__absoluteSubOne(_);return e=o.__absoluteAnd(e,n,e),o.__absoluteAddOne(e,!0,e).__trim()}i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteAndNot(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static asIntN(_,t){if(0===t.length)return t;if(_=g(_),0>_)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===_)return o.__zero();if(_>=o.__kMaxLengthBits)return t;const e=0|(_+29)/30;if(t.length<e)return t;const s=t.__unsignedDigit(e-1),l=1<<(_-1)%30;if(t.length===e&&s<l)return t;if(!((s&l)===l))return o.__truncateToNBits(_,t);if(!t.sign)return o.__truncateAndSubFromPowerOfTwo(_,t,!0);if(0==(s&l-1)){for(let n=e-2;0<=n;n--)if(0!==t.__digit(n))return o.__truncateAndSubFromPowerOfTwo(_,t,!1);return t.length===e&&s===l?t:o.__truncateToNBits(_,t)}return o.__truncateAndSubFromPowerOfTwo(_,t,!1)}static asUintN(i,_){if(0===_.length)return _;if(i=g(i),0>i)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===i)return o.__zero();if(_.sign){if(i>o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");return o.__truncateAndSubFromPowerOfTwo(i,_,!1)}if(i>=o.__kMaxLengthBits)return _;const t=0|(i+29)/30;if(_.length<t)return _;const e=i%30;if(_.length==t){if(0===e)return _;const i=_.__digit(t-1);if(0==i>>>e)return _}return o.__truncateToNBits(i,_)}static ADD(i,_){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i)return\"string\"!=typeof _&&(_=_.toString()),i+_;if(\"string\"==typeof _)return i.toString()+_;if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)&&o.__isBigInt(_))return o.add(i,_);if(\"number\"==typeof i&&\"number\"==typeof _)return i+_;throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\")}static LT(i,_){return o.__compare(i,_,0)}static LE(i,_){return o.__compare(i,_,1)}static GT(i,_){return o.__compare(i,_,2)}static GE(i,_){return o.__compare(i,_,3)}static EQ(i,_){for(;;){if(o.__isBigInt(i))return o.__isBigInt(_)?o.equal(i,_):o.EQ(_,i);if(\"number\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"string\"==typeof i){if(o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.equal(i,_);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"boolean\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,+i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"symbol\"==typeof i){if(o.__isBigInt(_))return!1;if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"object\"==typeof i){if(\"object\"==typeof _&&_.constructor!==o)return i==_;i=o.__toPrimitive(i)}else return i==_}}static NE(i,_){return!o.EQ(i,_)}static __zero(){return new o(0,!1)}static __oneDigit(i,_){const t=new o(1,_);return t.__setDigit(0,i),t}__copy(){const _=new o(this.length,this.sign);for(let t=0;t<this.length;t++)_[t]=this[t];return _}__trim(){let i=this.length,_=this[i-1];for(;0===_;)i--,_=this[i-1],this.pop();return 0===i&&(this.sign=!1),this}__initializeDigits(){for(let _=0;_<this.length;_++)this[_]=0}static __decideRounding(i,_,t,e){if(0<_)return-1;let n;if(0>_)n=-_-1;else{if(0===t)return-1;t--,e=i.__digit(t),n=29}let g=1<<n;if(0==(e&g))return-1;if(g-=1,0!=(e&g))return 1;for(;0<t;)if(t--,0!==i.__digit(t))return 1;return 0}static __fromDouble(i){o.__kBitConversionDouble[0]=i;const _=2047&o.__kBitConversionInts[1]>>>20,t=_-1023,e=(0|t/30)+1,n=new o(e,0>i);let g=1048575&o.__kBitConversionInts[1]|1048576,s=o.__kBitConversionInts[0];const l=20,r=t%30;let a,u=0;if(20>r){const i=l-r;u=i+32,a=g>>>i,g=g<<32-i|s>>>i,s<<=32-i}else if(20===r)u=32,a=g,g=s,s=0;else{const i=r-l;u=32-i,a=g<<i|s>>>32-i,g=s<<i,s=0}n.__setDigit(e-1,a);for(let _=e-2;0<=_;_--)0<u?(u-=30,a=g>>>2,g=g<<30|s>>>2,s<<=30):a=0,n.__setDigit(_,a);return n.__trim()}static __isWhitespace(i){return!!(13>=i&&9<=i)||(159>=i?32==i:131071>=i?160==i||5760==i:196607>=i?(i&=131071,10>=i||40==i||41==i||47==i||95==i||4096==i):65279==i)}static __fromString(i,_=0){let t=0;const e=i.length;let n=0;if(n===e)return o.__zero();let g=i.charCodeAt(n);for(;o.__isWhitespace(g);){if(++n===e)return o.__zero();g=i.charCodeAt(n)}if(43===g){if(++n===e)return null;g=i.charCodeAt(n),t=1}else if(45===g){if(++n===e)return null;g=i.charCodeAt(n),t=-1}if(0===_){if(_=10,48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(_=16,++n===e)return null;g=i.charCodeAt(n)}else if(79===g||111===g){if(_=8,++n===e)return null;g=i.charCodeAt(n)}else if(66===g||98===g){if(_=2,++n===e)return null;g=i.charCodeAt(n)}}}else if(16===_&&48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(++n===e)return null;g=i.charCodeAt(n)}}if(0!=t&&10!==_)return null;for(;48===g;){if(++n===e)return o.__zero();g=i.charCodeAt(n)}const s=e-n;let l=o.__kMaxBitsPerChar[_],r=o.__kBitsPerCharTableMultiplier-1;if(s>1073741824/l)return null;const a=l*s+r>>>o.__kBitsPerCharTableShift,u=new o(0|(a+29)/30,!1),h=10>_?_:10,b=10<_?_-10:0;if(0==(_&_-1)){l>>=o.__kBitsPerCharTableShift;const _=[],t=[];let s=!1;do{let o=0,r=0;for(;;){let _;if(g-48>>>0<h)_=g-48;else if((32|g)-97>>>0<b)_=(32|g)-87;else{s=!0;break}if(r+=l,o=o<<l|_,++n===e){s=!0;break}if(g=i.charCodeAt(n),30<r+l)break}_.push(o),t.push(r)}while(!s);o.__fillFromParts(u,_,t)}else{u.__initializeDigits();let t=!1,s=0;do{let a=0,D=1;for(;;){let o;if(g-48>>>0<h)o=g-48;else if((32|g)-97>>>0<b)o=(32|g)-87;else{t=!0;break}const l=D*_;if(1073741823<l)break;if(D=l,a=a*_+o,s++,++n===e){t=!0;break}g=i.charCodeAt(n)}r=30*o.__kBitsPerCharTableMultiplier-1;const c=0|(l*s+r>>>o.__kBitsPerCharTableShift)/30;u.__inplaceMultiplyAdd(D,a,c)}while(!t)}if(n!==e){if(!o.__isWhitespace(g))return null;for(n++;n<e;n++)if(g=i.charCodeAt(n),!o.__isWhitespace(g))return null}return u.sign=-1==t,u.__trim()}static __fillFromParts(_,t,e){let n=0,g=0,o=0;for(let s=t.length-1;0<=s;s--){const i=t[s],l=e[s];g|=i<<o,o+=l,30===o?(_.__setDigit(n++,g),o=0,g=0):30<o&&(_.__setDigit(n++,1073741823&g),o-=30,g=i>>>l-o)}if(0!==g){if(n>=_.length)throw new Error(\"implementation bug\");_.__setDigit(n++,g)}for(;n<_.length;n++)_.__setDigit(n,0)}static __toStringBasePowerOfTwo(_,i){const t=_.length;let e=i-1;e=(85&e>>>1)+(85&e),e=(51&e>>>2)+(51&e),e=(15&e>>>4)+(15&e);const n=e,g=i-1,s=_.__digit(t-1),l=o.__clz30(s);let r=0|(30*t-l+n-1)/n;if(_.sign&&r++,268435456<r)throw new Error(\"string too long\");const a=Array(r);let u=r-1,d=0,h=0;for(let e=0;e<t-1;e++){const i=_.__digit(e),t=(d|i<<h)&g;a[u--]=o.__kConversionChars[t];const s=n-h;for(d=i>>>s,h=30-s;h>=n;)a[u--]=o.__kConversionChars[d&g],d>>>=n,h-=n}const m=(d|s<<h)&g;for(a[u--]=o.__kConversionChars[m],d=s>>>n-h;0!==d;)a[u--]=o.__kConversionChars[d&g],d>>>=n;if(_.sign&&(a[u--]=\"-\"),-1!=u)throw new Error(\"implementation bug\");return a.join(\"\")}static __toStringGeneric(_,i,t){const e=_.length;if(0===e)return\"\";if(1===e){let e=_.__unsignedDigit(0).toString(i);return!1===t&&_.sign&&(e=\"-\"+e),e}const n=30*e-o.__clz30(_.__digit(e-1)),g=o.__kMaxBitsPerChar[i],s=g-1;let l=n*o.__kBitsPerCharTableMultiplier;l+=s-1,l=0|l/s;const r=l+1>>1,a=o.exponentiate(o.__oneDigit(i,!1),o.__oneDigit(r,!1));let u,d;const h=a.__unsignedDigit(0);if(1===a.length&&32767>=h){u=new o(_.length,!1),u.__initializeDigits();let t=0;for(let e=2*_.length-1;0<=e;e--){const i=t<<15|_.__halfDigit(e);u.__setHalfDigit(e,0|i/h),t=0|i%h}d=t.toString(i)}else{const t=o.__absoluteDivLarge(_,a,!0,!0);u=t.quotient;const e=t.remainder.__trim();d=o.__toStringGeneric(e,i,!0)}u.__trim();let m=o.__toStringGeneric(u,i,!0);for(;d.length<r;)d=\"0\"+d;return!1===t&&_.sign&&(m=\"-\"+m),m+d}static __unequalSign(i){return i?-1:1}static __absoluteGreater(i){return i?-1:1}static __absoluteLess(i){return i?1:-1}static __compareToBigInt(i,_){const t=i.sign;if(t!==_.sign)return o.__unequalSign(t);const e=o.__absoluteCompare(i,_);return 0<e?o.__absoluteGreater(t):0>e?o.__absoluteLess(t):0}static __compareToNumber(i,_){if(o.__isOneDigitInt(_)){const e=i.sign,n=0>_;if(e!==n)return o.__unequalSign(e);if(0===i.length){if(n)throw new Error(\"implementation bug\");return 0===_?0:-1}if(1<i.length)return o.__absoluteGreater(e);const g=t(_),s=i.__unsignedDigit(0);return s>g?o.__absoluteGreater(e):s<g?o.__absoluteLess(e):0}return o.__compareToDouble(i,_)}static __compareToDouble(i,_){if(_!==_)return _;if(_===1/0)return-1;if(_===-Infinity)return 1;const t=i.sign;if(t!==0>_)return o.__unequalSign(t);if(0===_)throw new Error(\"implementation bug: should be handled elsewhere\");if(0===i.length)return-1;o.__kBitConversionDouble[0]=_;const e=2047&o.__kBitConversionInts[1]>>>20;if(2047==e)throw new Error(\"implementation bug: handled elsewhere\");const n=e-1023;if(0>n)return o.__absoluteGreater(t);const g=i.length;let s=i.__digit(g-1);const l=o.__clz30(s),r=30*g-l,a=n+1;if(r<a)return o.__absoluteLess(t);if(r>a)return o.__absoluteGreater(t);let u=1048576|1048575&o.__kBitConversionInts[1],d=o.__kBitConversionInts[0];const h=20,m=29-l;if(m!==(0|(r-1)%30))throw new Error(\"implementation bug\");let b,D=0;if(20>m){const i=h-m;D=i+32,b=u>>>i,u=u<<32-i|d>>>i,d<<=32-i}else if(20===m)D=32,b=u,u=d,d=0;else{const i=m-h;D=32-i,b=u<<i|d>>>32-i,u=d<<i,d=0}if(s>>>=0,b>>>=0,s>b)return o.__absoluteGreater(t);if(s<b)return o.__absoluteLess(t);for(let e=g-2;0<=e;e--){0<D?(D-=30,b=u>>>2,u=u<<30|d>>>2,d<<=30):b=0;const _=i.__unsignedDigit(e);if(_>b)return o.__absoluteGreater(t);if(_<b)return o.__absoluteLess(t)}if(0!==u||0!==d){if(0===D)throw new Error(\"implementation bug\");return o.__absoluteLess(t)}return 0}static __equalToNumber(i,_){return o.__isOneDigitInt(_)?0===_?0===i.length:1===i.length&&i.sign===0>_&&i.__unsignedDigit(0)===t(_):0===o.__compareToDouble(i,_)}static __comparisonResultToBool(i,_){return 0===_?0>i:1===_?0>=i:2===_?0<i:3===_?0<=i:void 0}static __compare(i,_,t){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i&&\"string\"==typeof _)switch(t){case 0:return i<_;case 1:return i<=_;case 2:return i>_;case 3:return i>=_;}if(o.__isBigInt(i)&&\"string\"==typeof _)return _=o.__fromString(_),null!==_&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"string\"==typeof i&&o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)){if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return o.__comparisonResultToBool(o.__compareToNumber(i,_),t)}if(\"number\"!=typeof i)throw new Error(\"implementation bug\");if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToNumber(_,i),2^t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return 0===t?i<_:1===t?i<=_:2===t?i>_:3===t?i>=_:void 0}__clzmsd(){return o.__clz30(this.__digit(this.length-1))}static __absoluteAdd(_,t,e){if(_.length<t.length)return o.__absoluteAdd(t,_,e);if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);let n=_.length;(0===_.__clzmsd()||t.length===_.length&&0===t.__clzmsd())&&n++;const g=new o(n,e);let s=0,l=0;for(;l<t.length;l++){const i=_.__digit(l)+t.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}for(;l<_.length;l++){const i=_.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}return l<g.length&&g.__setDigit(l,s),g.__trim()}static __absoluteSub(_,t,e){if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);const n=new o(_.length,e);let g=0,s=0;for(;s<t.length;s++){const i=_.__digit(s)-t.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}for(;s<_.length;s++){const i=_.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}return n.__trim()}static __absoluteAddOne(_,i,t=null){const e=_.length;null===t?t=new o(e,i):t.sign=i;let n=1;for(let g=0;g<e;g++){const i=_.__digit(g)+n;n=i>>>30,t.__setDigit(g,1073741823&i)}return 0!=n&&t.__setDigitGrow(e,1),t}static __absoluteSubOne(_,t){const e=_.length;t=t||e;const n=new o(t,!1);let g=1;for(let o=0;o<e;o++){const i=_.__digit(o)-g;g=1&i>>>30,n.__setDigit(o,1073741823&i)}if(0!=g)throw new Error(\"implementation bug\");for(let g=e;g<t;g++)n.__setDigit(g,0);return n}static __absoluteAnd(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=s;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&t.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteAndNot(_,t,e=null){const n=_.length,g=t.length;let s=g;n<g&&(s=n);let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&~t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteOr(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)|t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteXor(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)^t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteCompare(_,t){const e=_.length-t.length;if(0!=e)return e;let n=_.length-1;for(;0<=n&&_.__digit(n)===t.__digit(n);)n--;return 0>n?0:_.__unsignedDigit(n)>t.__unsignedDigit(n)?1:-1}static __multiplyAccumulate(_,t,e,n){if(0===t)return;const g=32767&t,s=t>>>15;let l=0,r=0;for(let a,u=0;u<_.length;u++,n++){a=e.__digit(n);const i=_.__digit(u),t=32767&i,d=i>>>15,h=o.__imul(t,g),m=o.__imul(t,s),b=o.__imul(d,g),D=o.__imul(d,s);a+=r+h+l,l=a>>>30,a&=1073741823,a+=((32767&m)<<15)+((32767&b)<<15),l+=a>>>30,r=D+(m>>>15)+(b>>>15),e.__setDigit(n,1073741823&a)}for(;0!=l||0!==r;n++){let i=e.__digit(n);i+=l+r,r=0,l=i>>>30,e.__setDigit(n,1073741823&i)}}static __internalMultiplyAdd(_,t,e,g,s){let l=e,a=0;for(let n=0;n<g;n++){const i=_.__digit(n),e=o.__imul(32767&i,t),g=o.__imul(i>>>15,t),u=e+((32767&g)<<15)+a+l;l=u>>>30,a=g>>>15,s.__setDigit(n,1073741823&u)}if(s.length>g)for(s.__setDigit(g++,l+a);g<s.length;)s.__setDigit(g++,0);else if(0!==l+a)throw new Error(\"implementation bug\")}__inplaceMultiplyAdd(i,_,t){t>this.length&&(t=this.length);const e=32767&i,n=i>>>15;let g=0,s=_;for(let l=0;l<t;l++){const i=this.__digit(l),_=32767&i,t=i>>>15,r=o.__imul(_,e),a=o.__imul(_,n),u=o.__imul(t,e),d=o.__imul(t,n);let h=s+r+g;g=h>>>30,h&=1073741823,h+=((32767&a)<<15)+((32767&u)<<15),g+=h>>>30,s=d+(a>>>15)+(u>>>15),this.__setDigit(l,1073741823&h)}if(0!=g||0!==s)throw new Error(\"implementation bug\")}static __absoluteDivSmall(_,t,e=null){null===e&&(e=new o(_.length,!1));let n=0;for(let g,o=2*_.length-1;0<=o;o-=2){g=(n<<15|_.__halfDigit(o))>>>0;const i=0|g/t;n=0|g%t,g=(n<<15|_.__halfDigit(o-1))>>>0;const s=0|g/t;n=0|g%t,e.__setDigit(o>>>1,i<<15|s)}return e}static __absoluteModSmall(_,t){let e=0;for(let n=2*_.length-1;0<=n;n--){const i=(e<<15|_.__halfDigit(n))>>>0;e=0|i%t}return e}static __absoluteDivLarge(i,_,t,e){const g=_.__halfDigitLength(),n=_.length,s=i.__halfDigitLength()-g;let l=null;t&&(l=new o(s+2>>>1,!1),l.__initializeDigits());const r=new o(g+2>>>1,!1);r.__initializeDigits();const a=o.__clz15(_.__halfDigit(g-1));0<a&&(_=o.__specialLeftShift(_,a,0));const d=o.__specialLeftShift(i,a,1),u=_.__halfDigit(g-1);let h=0;for(let a,m=s;0<=m;m--){a=32767;const i=d.__halfDigit(m+g);if(i!==u){const t=(i<<15|d.__halfDigit(m+g-1))>>>0;a=0|t/u;let e=0|t%u;const n=_.__halfDigit(g-2),s=d.__halfDigit(m+g-2);for(;o.__imul(a,n)>>>0>(e<<16|s)>>>0&&(a--,e+=u,!(32767<e)););}o.__internalMultiplyAdd(_,a,0,n,r);let e=d.__inplaceSub(r,m,g+1);0!==e&&(e=d.__inplaceAdd(_,m,g),d.__setHalfDigit(m+g,32767&d.__halfDigit(m+g)+e),a--),t&&(1&m?h=a<<15:l.__setDigit(m>>>1,h|a))}if(e)return d.__inplaceRightShift(a),t?{quotient:l,remainder:d}:d;if(t)return l;throw new Error(\"unreachable\")}static __clz15(i){return o.__clz30(i)-15}__inplaceAdd(_,t,e){let n=0;for(let g=0;g<e;g++){const i=this.__halfDigit(t+g)+_.__halfDigit(g)+n;n=i>>>15,this.__setHalfDigit(t+g,32767&i)}return n}__inplaceSub(_,t,e){let n=0;if(1&t){t>>=1;let g=this.__digit(t),o=32767&g,s=0;for(;s<e-1>>>1;s++){const i=_.__digit(s),e=(g>>>15)-(32767&i)-n;n=1&e>>>15,this.__setDigit(t+s,(32767&e)<<15|32767&o),g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15}const i=_.__digit(s),l=(g>>>15)-(32767&i)-n;n=1&l>>>15,this.__setDigit(t+s,(32767&l)<<15|32767&o);if(t+s+1>=this.length)throw new RangeError(\"out of bounds\");0==(1&e)&&(g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15,this.__setDigit(t+_.length,1073709056&g|32767&o))}else{t>>=1;let g=0;for(;g<_.length-1;g++){const i=this.__digit(t+g),e=_.__digit(g),o=(32767&i)-(32767&e)-n;n=1&o>>>15;const s=(i>>>15)-(e>>>15)-n;n=1&s>>>15,this.__setDigit(t+g,(32767&s)<<15|32767&o)}const i=this.__digit(t+g),o=_.__digit(g),s=(32767&i)-(32767&o)-n;n=1&s>>>15;let l=0;0==(1&e)&&(l=(i>>>15)-(o>>>15)-n,n=1&l>>>15),this.__setDigit(t+g,(32767&l)<<15|32767&s)}return n}__inplaceRightShift(_){if(0===_)return;let t=this.__digit(0)>>>_;const e=this.length-1;for(let n=0;n<e;n++){const i=this.__digit(n+1);this.__setDigit(n,1073741823&i<<30-_|t),t=i>>>_}this.__setDigit(e,t)}static __specialLeftShift(_,t,e){const g=_.length,n=new o(g+e,!1);if(0===t){for(let t=0;t<g;t++)n.__setDigit(t,_.__digit(t));return 0<e&&n.__setDigit(g,0),n}let s=0;for(let o=0;o<g;o++){const i=_.__digit(o);n.__setDigit(o,1073741823&i<<t|s),s=i>>>30-t}return 0<e&&n.__setDigit(g,s),n}static __leftShiftByAbsolute(_,i){const t=o.__toShiftAmount(i);if(0>t)throw new RangeError(\"BigInt too big\");const e=0|t/30,n=t%30,g=_.length,s=0!==n&&0!=_.__digit(g-1)>>>30-n,l=g+e+(s?1:0),r=new o(l,_.sign);if(0===n){let t=0;for(;t<e;t++)r.__setDigit(t,0);for(;t<l;t++)r.__setDigit(t,_.__digit(t-e))}else{let t=0;for(let _=0;_<e;_++)r.__setDigit(_,0);for(let o=0;o<g;o++){const i=_.__digit(o);r.__setDigit(o+e,1073741823&i<<n|t),t=i>>>30-n}if(s)r.__setDigit(g+e,t);else if(0!==t)throw new Error(\"implementation bug\")}return r.__trim()}static __rightShiftByAbsolute(_,i){const t=_.length,e=_.sign,n=o.__toShiftAmount(i);if(0>n)return o.__rightShiftByMaximum(e);const g=0|n/30,s=n%30;let l=t-g;if(0>=l)return o.__rightShiftByMaximum(e);let r=!1;if(e){if(0!=(_.__digit(g)&(1<<s)-1))r=!0;else for(let t=0;t<g;t++)if(0!==_.__digit(t)){r=!0;break}}if(r&&0===s){const i=_.__digit(t-1);0==~i&&l++}let a=new o(l,e);if(0===s){a.__setDigit(l-1,0);for(let e=g;e<t;e++)a.__setDigit(e-g,_.__digit(e))}else{let e=_.__digit(g)>>>s;const n=t-g-1;for(let t=0;t<n;t++){const i=_.__digit(t+g+1);a.__setDigit(t,1073741823&i<<30-s|e),e=i>>>s}a.__setDigit(n,e)}return r&&(a=o.__absoluteAddOne(a,!0,a)),a.__trim()}static __rightShiftByMaximum(i){return i?o.__oneDigit(1,!0):o.__zero()}static __toShiftAmount(i){if(1<i.length)return-1;const _=i.__unsignedDigit(0);return _>o.__kMaxLengthBits?-1:_}static __toPrimitive(i,_=\"default\"){if(\"object\"!=typeof i)return i;if(i.constructor===o)return i;if(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol.toPrimitive){const t=i[Symbol.toPrimitive];if(t){const i=t(_);if(\"object\"!=typeof i)return i;throw new TypeError(\"Cannot convert object to primitive value\")}}const t=i.valueOf;if(t){const _=t.call(i);if(\"object\"!=typeof _)return _}const e=i.toString;if(e){const _=e.call(i);if(\"object\"!=typeof _)return _}throw new TypeError(\"Cannot convert object to primitive value\")}static __toNumeric(i){return o.__isBigInt(i)?i:+i}static __isBigInt(i){return\"object\"==typeof i&&null!==i&&i.constructor===o}static __truncateToNBits(i,_){const t=0|(i+29)/30,e=new o(t,_.sign),n=t-1;for(let t=0;t<n;t++)e.__setDigit(t,_.__digit(t));let g=_.__digit(n);if(0!=i%30){const _=32-i%30;g=g<<_>>>_}return e.__setDigit(n,g),e.__trim()}static __truncateAndSubFromPowerOfTwo(_,t,e){var n=Math.min;const g=0|(_+29)/30,s=new o(g,e);let l=0;const r=g-1;let a=0;for(const i=n(r,t.length);l<i;l++){const i=0-t.__digit(l)-a;a=1&i>>>30,s.__setDigit(l,1073741823&i)}for(;l<r;l++)s.__setDigit(l,0|1073741823&-a);let u=r<t.length?t.__digit(r):0;const d=_%30;let h;if(0==d)h=0-u-a,h&=1073741823;else{const i=32-d;u=u<<i>>>i;const _=1<<32-i;h=_-u-a,h&=_-1}return s.__setDigit(r,h),s.__trim()}__digit(_){return this[_]}__unsignedDigit(_){return this[_]>>>0}__setDigit(_,i){this[_]=0|i}__setDigitGrow(_,i){this[_]=0|i}__halfDigitLength(){const i=this.length;return 32767>=this.__unsignedDigit(i-1)?2*i-1:2*i}__halfDigit(_){return 32767&this[_>>>1]>>>15*(1&_)}__setHalfDigit(_,i){const t=_>>>1,e=this.__digit(t),n=1&_?32767&e|i<<15:1073709056&e|32767&i;this.__setDigit(t,n)}static __digitPow(i,_){let t=1;for(;0<_;)1&_&&(t*=i),_>>>=1,i*=i;return t}static __isOneDigitInt(i){return(1073741823&i)===i}}return o.__kMaxLength=33554432,o.__kMaxLengthBits=o.__kMaxLength<<5,o.__kMaxBitsPerChar=[0,0,32,51,64,75,83,90,96,102,107,111,115,119,122,126,128,131,134,136,139,141,143,145,147,149,151,153,154,156,158,159,160,162,163,165,166],o.__kBitsPerCharTableShift=5,o.__kBitsPerCharTableMultiplier=1<<o.__kBitsPerCharTableShift,o.__kConversionChars=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],o.__kBitConversionBuffer=new ArrayBuffer(8),o.__kBitConversionDouble=new Float64Array(o.__kBitConversionBuffer),o.__kBitConversionInts=new Int32Array(o.__kBitConversionBuffer),o.__clz30=_?function(i){return _(i)-2}:function(i){var _=Math.LN2,t=Math.log;return 0===i?30:0|29-(0|t(i>>>0)/_)},o.__imul=i||function(i,_){return 0|i*_},o});\n//# sourceMappingURL=jsbi-umd.js.map\n","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeFunction = require(\"./isNativeFunction.js\");\n\nvar construct = require(\"./construct.js\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/*! decimal.js-light v2.5.1 https://github.com/MikeMcl/decimal.js-light/LICENCE */\r\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js-light v2.5.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js-light\r\n   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Expat Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  var MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    Decimal = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n      // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to MAX_E\r\n\r\n      // The natural logarithm of 10.\r\n      // 115 digits\r\n      LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    ONE,\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n    MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n    // Decimal.prototype object\r\n    P = {};\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue                       abs\r\n   *  comparedTo                          cmp\r\n   *  decimalPlaces                       dp\r\n   *  dividedBy                           div\r\n   *  dividedToIntegerBy                  idiv\r\n   *  equals                              eq\r\n   *  exponent\r\n   *  greaterThan                         gt\r\n   *  greaterThanOrEqualTo                gte\r\n   *  isInteger                           isint\r\n   *  isNegative                          isneg\r\n   *  isPositive                          ispos\r\n   *  isZero\r\n   *  lessThan                            lt\r\n   *  lessThanOrEqualTo                   lte\r\n   *  logarithm                           log\r\n   *  minus                               sub\r\n   *  modulo                              mod\r\n   *  naturalExponential                  exp\r\n   *  naturalLogarithm                    ln\r\n   *  negated                             neg\r\n   *  plus                                add\r\n   *  precision                           sd\r\n   *  squareRoot                          sqrt\r\n   *  times                               mul\r\n   *  toDecimalPlaces                     todp\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toInteger                           toint\r\n   *  toNumber\r\n   *  toPower                             pow\r\n   *  toPrecision\r\n   *  toSignificantDigits                 tosd\r\n   *  toString\r\n   *  valueOf                             val\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this;\r\n\r\n    y = new x.constructor(y);\r\n\r\n    // Signs differ?\r\n    if (x.s !== y.s) return x.s || -y.s;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n    xdL = x.d.length;\r\n    ydL = y.d.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var x = this,\r\n      w = x.d.length - 1,\r\n      dp = (w - x.e) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = x.d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n    return dp < 0 ? 0 : dp;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n   *\r\n   */\r\n  P.exponent = function () {\r\n    return getBase10Exponent(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    return this.cmp(y) >= 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isint = function () {\r\n    return this.e > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isneg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.ispos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return this.s === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   * If no base is specified, return log[10](x).\r\n   *\r\n   * log[base](x) = ln(x) / ln(base)\r\n   *\r\n   * The maximum error of the result is 1 ulp (unit in the last place).\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var r,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      wpr = pr + 5;\r\n\r\n    // Default base is 10.\r\n    if (base === void 0) {\r\n      base = new Ctor(10);\r\n    } else {\r\n      base = new Ctor(base);\r\n\r\n      // log[-b](x) = NaN\r\n      // log[0](x)  = NaN\r\n      // log[1](x)  = NaN\r\n      if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    // log[b](-x) = NaN\r\n    // log[b](0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // log[b](1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    external = false;\r\n    r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // x % 0 = NaN\r\n    if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n    // Return x if x is 0.\r\n    if (!x.s) return round(new Ctor(x), pr);\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n    q = divide(x, y, 0, 1).times(y);\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return exp(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return ln(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s || 0;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var e, sd, w,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    e = getBase10Exponent(x) + 1;\r\n    w = x.d.length - 1;\r\n    sd = w * LOG_BASE + 1;\r\n    w = x.d[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n    }\r\n\r\n    return z && e > sd ? e : sd;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var e, n, pr, r, s, t, wpr,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative or zero?\r\n    if (x.s < 1) {\r\n      if (!x.s) return new Ctor(0);\r\n\r\n      // sqrt(-x) = NaN\r\n      throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    pr = Ctor.precision;\r\n    s = wpr = pr + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n        n = n.slice(wpr - 3, wpr + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (s == wpr && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          round(t, pr + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        } else if (n != '9999') {\r\n          break;\r\n        }\r\n\r\n        wpr += 4;\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    // Return 0 if either is 0.\r\n    if (!x.s || !y.s) return new Ctor(0);\r\n\r\n    y.s *= x.s;\r\n    e = x.e + y.e;\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = e;\r\n\r\n    return external ? round(y, Ctor.precision) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.todp = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = toString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), dp + 1, rm);\r\n      str = toString(x, true, dp + 1);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) return toString(x);\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n    str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isneg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.toInteger = P.toint = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * The maximum error is 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, sign, yIsInt,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      guard = 12,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // pow(x, 0) = 1\r\n    if (!y.s) return new Ctor(ONE);\r\n\r\n    x = new Ctor(x);\r\n\r\n    // pow(0, y > 0) = 0\r\n    // pow(0, y < 0) = Infinity\r\n    if (!x.s) {\r\n      if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n      return x;\r\n    }\r\n\r\n    // pow(1, y) = 1\r\n    if (x.eq(ONE)) return x;\r\n\r\n    pr = Ctor.precision;\r\n\r\n    // pow(x, 1) = x\r\n    if (y.eq(ONE)) return round(x, pr);\r\n\r\n    e = y.e;\r\n    k = y.d.length - 1;\r\n    yIsInt = e >= k;\r\n    sign = x.s;\r\n\r\n    if (!yIsInt) {\r\n\r\n      // pow(x < 0, y non-integer) = NaN\r\n      if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = new Ctor(ONE);\r\n\r\n      // Max k of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n      external = false;\r\n\r\n      for (;;) {\r\n        if (k % 2) {\r\n          r = r.times(x);\r\n          truncate(r.d, e);\r\n        }\r\n\r\n        k = mathfloor(k / 2);\r\n        if (k === 0) break;\r\n\r\n        x = x.times(x);\r\n        truncate(x.d, e);\r\n      }\r\n\r\n      external = true;\r\n\r\n      return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n    }\r\n\r\n    // Result is negative if x is negative and the last digit of integer y is odd.\r\n    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n    x.s = 1;\r\n    external = false;\r\n    r = y.times(ln(x, pr + guard));\r\n    external = true;\r\n    r = exp(r);\r\n    r.s = sign;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var e, str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), sd, rm);\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.tosd = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return round(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = P.valueOf = P.val = P.toJSON = function () {\r\n    var x = this,\r\n      e = getBase10Exponent(x),\r\n      Ctor = x.constructor;\r\n\r\n    return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  add                 P.minus, P.plus\r\n   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n   *  exp                 P.exp, P.pow\r\n   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n   *                      P.toString, divide, round, toString, exp, ln\r\n   *  getLn10             P.log, ln\r\n   *  getZeroString       digitsToString, toString\r\n   *  ln                  P.log, P.ln, P.pow, exp\r\n   *  parseDecimal        Decimal\r\n   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n   *                      divide, getLn10, exp, ln\r\n   *  subtract            P.minus, P.plus\r\n   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n   *  truncate            P.pow\r\n   *\r\n   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n   *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n   */\r\n\r\n\r\n  function add(x, y) {\r\n    var carry, d, e, i, k, len, xd, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // If either is zero...\r\n    if (!x.s || !y.s) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!y.s) y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    k = x.e;\r\n    e = y.e;\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % BASE | 0;\r\n        carry = temp / BASE | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * BASE + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, dp) {\r\n      var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either 0?\r\n      if (!x.s) return new Ctor(x);\r\n      if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n      e = x.e - y.e;\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n      if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n      } else if (dp) {\r\n        sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) return new Ctor(0);\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / LOG_BASE + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * BASE + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n        k = BASE / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k);\r\n          xd = multiplyInteger(xd, k);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= BASE) k = BASE - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n\r\n      q.e = e;\r\n\r\n      return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n   * significant digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   */\r\n  function exp(x, sd) {\r\n    var denominator, guard, pow, sum, t, wpr,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n    // exp(0) = 1\r\n    if (!x.s) return new Ctor(ONE);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    while (x.abs().gte(0.1)) {\r\n      x = x.times(t);    // x = x / 2^5\r\n      k += 5;\r\n    }\r\n\r\n    // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(ONE);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = round(pow.times(x), wpr);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        while (k--) sum = round(sum.times(sum), wpr);\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(x) {\r\n    var e = x.e * LOG_BASE,\r\n      w = x.d[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for (; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n\r\n    if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(decimalError + 'LN10 precision limit exceeded');\r\n    }\r\n\r\n    return round(new Ctor(Ctor.LN10), sd);\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(n) is non-terminating (n != 1)\r\n   *\r\n   */\r\n  function ln(y, sd) {\r\n    var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // ln(-x) = NaN\r\n    // ln(0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // ln(1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    if (x.eq(10)) {\r\n      if (sd == null) external = true;\r\n      return getLn10(Ctor, wpr);\r\n    }\r\n\r\n    wpr += guard;\r\n    Ctor.precision = wpr;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n    e = getBase10Exponent(x);\r\n\r\n    if (Math.abs(e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = getBase10Exponent(x);\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(x, pr)) : x;\r\n    }\r\n\r\n    // x is reduced to a value near 1.\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n    x2 = round(x.times(x), wpr);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = round(numerator.times(x2), wpr);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr);\r\n\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      e = e - i - 1;\r\n      x.e = mathfloor(e / LOG_BASE);\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n    } else {\r\n\r\n      // Zero.\r\n      x.s = 0;\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n   */\r\n   function round(x, sd, rm) {\r\n    var i, j, k, n, rd, doRound, w, xdi,\r\n      xd = x.d;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // n: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n    i = sd - n;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) return x;\r\n      w = k = xd[xdi];\r\n\r\n      // Get the number of digits of w.\r\n      for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n      // Get the index of rd within w.\r\n      i %= LOG_BASE;\r\n\r\n      // Get the index of rd within w, adjusted for leading zeros.\r\n      // The number of leading zeros of w is given by LOG_BASE - n.\r\n      j = i - LOG_BASE + n;\r\n    }\r\n\r\n    if (rm !== void 0) {\r\n      k = mathpow(10, n - j - 1);\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / k % 10 | 0;\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n      // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n      // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n      // 714.\r\n\r\n      doRound = rm < 4\r\n        ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n    }\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      if (doRound) {\r\n        k = getBase10Exponent(x);\r\n        xd.length = 1;\r\n\r\n        // Convert sd to decimal places.\r\n        sd = sd - k - 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n      } else {\r\n        xd.length = 1;\r\n\r\n        // Zero.\r\n        xd[0] = x.e = x.s = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (doRound) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n          if ((xd[0] += k) == BASE) {\r\n            xd[0] = 1;\r\n            ++x.e;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n      throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function subtract(x, y) {\r\n    var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // Return y negated if x is zero.\r\n    // Return x if y is zero and x is non-zero.\r\n    if (!x.s || !y.s) {\r\n      if (y.s) y.s = -y.s;\r\n      else y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are non-zero numbers with the same sign.\r\n\r\n    e = y.e;\r\n    xe = x.e;\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of zeros\r\n      // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n      // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to xd if shorter.\r\n    // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(0);\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function toString(x, isExp, sd) {\r\n    var k,\r\n      e = getBase10Exponent(x),\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (e < 0 ? 'e' : 'e+') + e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  clone\r\n   *  config/set\r\n   */\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * value {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(value) {\r\n      var x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (value instanceof Decimal) {\r\n        x.s = value.s;\r\n        x.e = value.e;\r\n        x.d = (value = value.d) ? value.slice() : value;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'number') {\r\n\r\n        // Reject Infinity/NaN.\r\n        if (value * 0 !== 0) {\r\n          throw Error(invalidArgument + value);\r\n        }\r\n\r\n        if (value > 0) {\r\n          x.s = 1;\r\n        } else if (value < 0) {\r\n          value = -value;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 0;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (value === ~~value && value < 1e7) {\r\n          x.e = 0;\r\n          x.d = [value];\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, value.toString());\r\n      } else if (typeof value !== 'string') {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      // Minus sign?\r\n      if (value.charCodeAt(0) === 45) {\r\n        value = value.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      if (isDecimal.test(value)) parseDecimal(x, value);\r\n      else throw Error(invalidArgument + value);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n    Decimal.clone = clone;\r\n    Decimal.config = Decimal.set = config;\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw Error(decimalError + 'Object expected');\r\n    }\r\n    var i, p, v,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -1 / 0, 0,\r\n        'toExpPos', 0, 1 / 0\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if ((v = obj[p = ps[i]]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if ((v = obj[p = 'LN10']) !== void 0) {\r\n        if (v == Math.LN10) this[p] = new this(v);\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(Decimal);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Internal constant.\r\n  ONE = new Decimal(1);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Decimal;\r\n\r\n    // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self\r\n        ? self : Function('return this')();\r\n    }\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","/*\r\n *  big.js v6.1.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2021 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true) {\r\n            throw TypeError(INVALID + 'number');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd--;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (!sd--) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","/*\r\n *  toFormat v2.0.0\r\n *  Adds a toFormat instance method to big.js or decimal.js\r\n *  Copyright (c) 2017 Michael Mclaughlin\r\n *  MIT Licence\r\n */\r\n\r\n /*\r\n * Adds a `toFormat` method to `Ctor.prototype` and a `format` object to `Ctor`, where `Ctor` is\r\n * a big number constructor such as `Decimal` (decimal.js) or `Big` (big.js).\r\n */\r\nfunction toFormat(Ctor) {\r\n  'use strict';\r\n\r\n  /*\r\n   *  Returns a string representing the value of this big number in fixed-point notation to `dp`\r\n   *  decimal places using rounding mode `rm`, and formatted according to the properties of the\r\n   * `fmt`, `this.format` and `this.constructor.format` objects, in that order of precedence.\r\n   *\r\n   *  Example:\r\n   *\r\n   *  x = new Decimal('123456789.987654321')\r\n   *\r\n   *  // Add a format object to the constructor...\r\n   *  Decimal.format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ',',\r\n   *    groupSize: 3,\r\n   *    secondaryGroupSize: 0,\r\n   *    fractionGroupSeparator: '',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 0\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123,456,789.987654321\r\n   *  x.toFormat(2, 1);            // 123,456,789.98\r\n   *\r\n   *  // And/or add a format object to the big number itself...\r\n   *  x.format = {\r\n   *    decimalSeparator: ',',\r\n   *    groupSeparator: '',\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123456789,987654321\r\n   *\r\n   *  format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ' ',\r\n   *    groupSize: 3,\r\n   *    fractionGroupSeparator: ' ',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 5\r\n   *  }\r\n\r\n   *  // And/or pass a format object to the method call.\r\n   *  x.toFormat(format);          // 123 456 789.98765 4321\r\n   *  x.toFormat(4, format);       // 123 456 789.9877\r\n   *  x.toFormat(2, 1, format);    // 123 456 789.98\r\n   *\r\n   *  [dp] {number} Decimal places. Integer.\r\n   *  [rm] {number} Rounding mode. Integer, 0 to 8. (Ignored if using big.js.)\r\n   *  [fmt] {Object} A format object.\r\n   *\r\n   */\r\n  Ctor.prototype.toFormat = function toFormat(dp, rm, fmt) {\r\n\r\n    if (!this.e && this.e !== 0) return this.toString();   // Infinity/NaN\r\n\r\n    var arr, g1, g2, i,\r\n      u,                             // undefined\r\n      nd,                            // number of integer digits\r\n      intd,                          // integer digits\r\n      intp,                          // integer part\r\n      fracp,                         // fraction part\r\n      dsep,                          // decimalSeparator\r\n      gsep,                          // groupSeparator\r\n      gsize,                         // groupSize\r\n      sgsize,                        // secondaryGroupSize\r\n      fgsep,                         // fractionGroupSeparator\r\n      fgsize,                        // fractionGroupSize\r\n      tfmt = this.format || {},\r\n      cfmt = this.constructor.format || {};\r\n\r\n    if (dp != u) {\r\n      if (typeof dp == 'object') {\r\n        fmt = dp;\r\n        dp = u;\r\n      } else if (rm != u) {\r\n        if (typeof rm == 'object') {\r\n          fmt = rm;\r\n          rm = u;\r\n        } else if (typeof fmt != 'object') {\r\n          fmt = {};\r\n        }\r\n      } else {\r\n        fmt = {};\r\n      }\r\n    } else {\r\n      fmt = {};\r\n    }\r\n\r\n    arr = this.toFixed(dp, rm).split('.');\r\n    intp = arr[0];\r\n    fracp = arr[1];\r\n    intd = this.s < 0 ? intp.slice(1) : intp;\r\n    nd = intd.length;\r\n\r\n    dsep = fmt.decimalSeparator;\r\n    if (dsep == u) {\r\n      dsep = tfmt.decimalSeparator;\r\n      if (dsep == u) {\r\n        dsep = cfmt.decimalSeparator;\r\n        if (dsep == u) dsep = '.';\r\n      }\r\n    }\r\n\r\n    gsep = fmt.groupSeparator;\r\n    if (gsep == u) {\r\n      gsep = tfmt.groupSeparator;\r\n      if (gsep == u) gsep = cfmt.groupSeparator;\r\n    }\r\n\r\n    if (gsep) {\r\n      gsize = fmt.groupSize;\r\n      if (gsize == u) {\r\n        gsize = tfmt.groupSize;\r\n        if (gsize == u) {\r\n          gsize = cfmt.groupSize;\r\n          if (gsize == u) gsize = 0;\r\n        }\r\n      }\r\n\r\n      sgsize = fmt.secondaryGroupSize;\r\n      if (sgsize == u) {\r\n        sgsize = tfmt.secondaryGroupSize;\r\n        if (sgsize == u) {\r\n          sgsize = cfmt.secondaryGroupSize;\r\n          if (sgsize == u) sgsize = 0;\r\n        }\r\n      }\r\n\r\n      if (sgsize) {\r\n        g1 = +sgsize;\r\n        g2 = +gsize;\r\n        nd -= g2;\r\n      } else {\r\n        g1 = +gsize;\r\n        g2 = +sgsize;\r\n      }\r\n\r\n      if (g1 > 0 && nd > 0) {\r\n        i = nd % g1 || g1;\r\n        intp = intd.substr(0, i);\r\n        for (; i < nd; i += g1) intp += gsep + intd.substr(i, g1);\r\n        if (g2 > 0) intp += gsep + intd.slice(i);\r\n        if (this.s < 0) intp = '-' + intp;\r\n      }\r\n    }\r\n\r\n    if (fracp) {\r\n      fgsep = fmt.fractionGroupSeparator;\r\n      if (fgsep == u) {\r\n        fgsep = tfmt.fractionGroupSeparator;\r\n        if (fgsep == u) fgsep = cfmt.fractionGroupSeparator;\r\n      }\r\n\r\n      if (fgsep) {\r\n        fgsize = fmt.fractionGroupSize;\r\n        if (fgsize == u) {\r\n          fgsize = tfmt.fractionGroupSize;\r\n          if (fgsize == u) {\r\n            fgsize = cfmt.fractionGroupSize;\r\n            if (fgsize == u) fgsize = 0;\r\n          }\r\n        }\r\n\r\n        fgsize = +fgsize;\r\n\r\n        if (fgsize) {\r\n          fracp = fracp.replace(new RegExp('\\\\d{' + fgsize + '}\\\\B', 'g'), '$&' + fgsep);\r\n        }\r\n      }\r\n\r\n      return intp + dsep + fracp;\r\n    } else {\r\n\r\n      return intp;\r\n    }\r\n  };\r\n\r\n  Ctor.format = {\r\n    decimalSeparator: '.',\r\n    groupSeparator: ',',\r\n    groupSize: 3,\r\n    secondaryGroupSize: 0,\r\n    fractionGroupSeparator: '',\r\n    fractionGroupSize: 0\r\n  };\r\n\r\n  return Ctor;\r\n}\r\n\r\nif (typeof module !== 'undefined' && module.exports) module.exports = toFormat;\r\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatBytes32String = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports._toEscapedUtf8String = exports.nameprep = exports.hexDataSlice = exports.hexDataLength = exports.hexZeroPad = exports.hexValue = exports.hexStripZeros = exports.hexConcat = exports.isHexString = exports.hexlify = exports.base64 = exports.base58 = exports.TransactionDescription = exports.LogDescription = exports.Interface = exports.SigningKey = exports.HDNode = exports.defaultPath = exports.isBytesLike = exports.isBytes = exports.zeroPad = exports.stripZeros = exports.concat = exports.arrayify = exports.shallowCopy = exports.resolveProperties = exports.getStatic = exports.defineReadOnly = exports.deepCopy = exports.checkProperties = exports.poll = exports.fetchJson = exports._fetchData = exports.RLP = exports.Logger = exports.checkResultErrors = exports.FormatTypes = exports.ParamType = exports.FunctionFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.Fragment = exports.defaultAbiCoder = exports.AbiCoder = void 0;\nexports.Indexed = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = exports.SupportedAlgorithm = exports.mnemonicToSeed = exports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.getAccountPath = exports.verifyTypedData = exports.verifyMessage = exports.recoverPublicKey = exports.computePublicKey = exports.recoverAddress = exports.computeAddress = exports.getJsonWalletAddress = exports.TransactionTypes = exports.serializeTransaction = exports.parseTransaction = exports.accessListify = exports.joinSignature = exports.splitSignature = exports.soliditySha256 = exports.solidityKeccak256 = exports.solidityPack = exports.shuffled = exports.randomBytes = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.computeHmac = exports.commify = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.isAddress = exports.getCreate2Address = exports.getContractAddress = exports.getIcapAddress = exports.getAddress = exports._TypedDataEncoder = exports.id = exports.isValidName = exports.namehash = exports.hashMessage = exports.parseBytes32String = void 0;\nvar abi_1 = require(\"@ethersproject/abi\");\nObject.defineProperty(exports, \"AbiCoder\", { enumerable: true, get: function () { return abi_1.AbiCoder; } });\nObject.defineProperty(exports, \"checkResultErrors\", { enumerable: true, get: function () { return abi_1.checkResultErrors; } });\nObject.defineProperty(exports, \"ConstructorFragment\", { enumerable: true, get: function () { return abi_1.ConstructorFragment; } });\nObject.defineProperty(exports, \"defaultAbiCoder\", { enumerable: true, get: function () { return abi_1.defaultAbiCoder; } });\nObject.defineProperty(exports, \"ErrorFragment\", { enumerable: true, get: function () { return abi_1.ErrorFragment; } });\nObject.defineProperty(exports, \"EventFragment\", { enumerable: true, get: function () { return abi_1.EventFragment; } });\nObject.defineProperty(exports, \"FormatTypes\", { enumerable: true, get: function () { return abi_1.FormatTypes; } });\nObject.defineProperty(exports, \"Fragment\", { enumerable: true, get: function () { return abi_1.Fragment; } });\nObject.defineProperty(exports, \"FunctionFragment\", { enumerable: true, get: function () { return abi_1.FunctionFragment; } });\nObject.defineProperty(exports, \"Indexed\", { enumerable: true, get: function () { return abi_1.Indexed; } });\nObject.defineProperty(exports, \"Interface\", { enumerable: true, get: function () { return abi_1.Interface; } });\nObject.defineProperty(exports, \"LogDescription\", { enumerable: true, get: function () { return abi_1.LogDescription; } });\nObject.defineProperty(exports, \"ParamType\", { enumerable: true, get: function () { return abi_1.ParamType; } });\nObject.defineProperty(exports, \"TransactionDescription\", { enumerable: true, get: function () { return abi_1.TransactionDescription; } });\nvar address_1 = require(\"@ethersproject/address\");\nObject.defineProperty(exports, \"getAddress\", { enumerable: true, get: function () { return address_1.getAddress; } });\nObject.defineProperty(exports, \"getCreate2Address\", { enumerable: true, get: function () { return address_1.getCreate2Address; } });\nObject.defineProperty(exports, \"getContractAddress\", { enumerable: true, get: function () { return address_1.getContractAddress; } });\nObject.defineProperty(exports, \"getIcapAddress\", { enumerable: true, get: function () { return address_1.getIcapAddress; } });\nObject.defineProperty(exports, \"isAddress\", { enumerable: true, get: function () { return address_1.isAddress; } });\nvar base64 = __importStar(require(\"@ethersproject/base64\"));\nexports.base64 = base64;\nvar basex_1 = require(\"@ethersproject/basex\");\nObject.defineProperty(exports, \"base58\", { enumerable: true, get: function () { return basex_1.Base58; } });\nvar bytes_1 = require(\"@ethersproject/bytes\");\nObject.defineProperty(exports, \"arrayify\", { enumerable: true, get: function () { return bytes_1.arrayify; } });\nObject.defineProperty(exports, \"concat\", { enumerable: true, get: function () { return bytes_1.concat; } });\nObject.defineProperty(exports, \"hexConcat\", { enumerable: true, get: function () { return bytes_1.hexConcat; } });\nObject.defineProperty(exports, \"hexDataSlice\", { enumerable: true, get: function () { return bytes_1.hexDataSlice; } });\nObject.defineProperty(exports, \"hexDataLength\", { enumerable: true, get: function () { return bytes_1.hexDataLength; } });\nObject.defineProperty(exports, \"hexlify\", { enumerable: true, get: function () { return bytes_1.hexlify; } });\nObject.defineProperty(exports, \"hexStripZeros\", { enumerable: true, get: function () { return bytes_1.hexStripZeros; } });\nObject.defineProperty(exports, \"hexValue\", { enumerable: true, get: function () { return bytes_1.hexValue; } });\nObject.defineProperty(exports, \"hexZeroPad\", { enumerable: true, get: function () { return bytes_1.hexZeroPad; } });\nObject.defineProperty(exports, \"isBytes\", { enumerable: true, get: function () { return bytes_1.isBytes; } });\nObject.defineProperty(exports, \"isBytesLike\", { enumerable: true, get: function () { return bytes_1.isBytesLike; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return bytes_1.isHexString; } });\nObject.defineProperty(exports, \"joinSignature\", { enumerable: true, get: function () { return bytes_1.joinSignature; } });\nObject.defineProperty(exports, \"zeroPad\", { enumerable: true, get: function () { return bytes_1.zeroPad; } });\nObject.defineProperty(exports, \"splitSignature\", { enumerable: true, get: function () { return bytes_1.splitSignature; } });\nObject.defineProperty(exports, \"stripZeros\", { enumerable: true, get: function () { return bytes_1.stripZeros; } });\nvar hash_1 = require(\"@ethersproject/hash\");\nObject.defineProperty(exports, \"_TypedDataEncoder\", { enumerable: true, get: function () { return hash_1._TypedDataEncoder; } });\nObject.defineProperty(exports, \"hashMessage\", { enumerable: true, get: function () { return hash_1.hashMessage; } });\nObject.defineProperty(exports, \"id\", { enumerable: true, get: function () { return hash_1.id; } });\nObject.defineProperty(exports, \"isValidName\", { enumerable: true, get: function () { return hash_1.isValidName; } });\nObject.defineProperty(exports, \"namehash\", { enumerable: true, get: function () { return hash_1.namehash; } });\nvar hdnode_1 = require(\"@ethersproject/hdnode\");\nObject.defineProperty(exports, \"defaultPath\", { enumerable: true, get: function () { return hdnode_1.defaultPath; } });\nObject.defineProperty(exports, \"entropyToMnemonic\", { enumerable: true, get: function () { return hdnode_1.entropyToMnemonic; } });\nObject.defineProperty(exports, \"getAccountPath\", { enumerable: true, get: function () { return hdnode_1.getAccountPath; } });\nObject.defineProperty(exports, \"HDNode\", { enumerable: true, get: function () { return hdnode_1.HDNode; } });\nObject.defineProperty(exports, \"isValidMnemonic\", { enumerable: true, get: function () { return hdnode_1.isValidMnemonic; } });\nObject.defineProperty(exports, \"mnemonicToEntropy\", { enumerable: true, get: function () { return hdnode_1.mnemonicToEntropy; } });\nObject.defineProperty(exports, \"mnemonicToSeed\", { enumerable: true, get: function () { return hdnode_1.mnemonicToSeed; } });\nvar json_wallets_1 = require(\"@ethersproject/json-wallets\");\nObject.defineProperty(exports, \"getJsonWalletAddress\", { enumerable: true, get: function () { return json_wallets_1.getJsonWalletAddress; } });\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return keccak256_1.keccak256; } });\nvar logger_1 = require(\"@ethersproject/logger\");\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return logger_1.Logger; } });\nvar sha2_1 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return sha2_1.computeHmac; } });\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return sha2_1.ripemd160; } });\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha2_1.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha2_1.sha512; } });\nvar solidity_1 = require(\"@ethersproject/solidity\");\nObject.defineProperty(exports, \"solidityKeccak256\", { enumerable: true, get: function () { return solidity_1.keccak256; } });\nObject.defineProperty(exports, \"solidityPack\", { enumerable: true, get: function () { return solidity_1.pack; } });\nObject.defineProperty(exports, \"soliditySha256\", { enumerable: true, get: function () { return solidity_1.sha256; } });\nvar random_1 = require(\"@ethersproject/random\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return random_1.randomBytes; } });\nObject.defineProperty(exports, \"shuffled\", { enumerable: true, get: function () { return random_1.shuffled; } });\nvar properties_1 = require(\"@ethersproject/properties\");\nObject.defineProperty(exports, \"checkProperties\", { enumerable: true, get: function () { return properties_1.checkProperties; } });\nObject.defineProperty(exports, \"deepCopy\", { enumerable: true, get: function () { return properties_1.deepCopy; } });\nObject.defineProperty(exports, \"defineReadOnly\", { enumerable: true, get: function () { return properties_1.defineReadOnly; } });\nObject.defineProperty(exports, \"getStatic\", { enumerable: true, get: function () { return properties_1.getStatic; } });\nObject.defineProperty(exports, \"resolveProperties\", { enumerable: true, get: function () { return properties_1.resolveProperties; } });\nObject.defineProperty(exports, \"shallowCopy\", { enumerable: true, get: function () { return properties_1.shallowCopy; } });\nvar RLP = __importStar(require(\"@ethersproject/rlp\"));\nexports.RLP = RLP;\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\nObject.defineProperty(exports, \"computePublicKey\", { enumerable: true, get: function () { return signing_key_1.computePublicKey; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return signing_key_1.recoverPublicKey; } });\nObject.defineProperty(exports, \"SigningKey\", { enumerable: true, get: function () { return signing_key_1.SigningKey; } });\nvar strings_1 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"formatBytes32String\", { enumerable: true, get: function () { return strings_1.formatBytes32String; } });\nObject.defineProperty(exports, \"nameprep\", { enumerable: true, get: function () { return strings_1.nameprep; } });\nObject.defineProperty(exports, \"parseBytes32String\", { enumerable: true, get: function () { return strings_1.parseBytes32String; } });\nObject.defineProperty(exports, \"_toEscapedUtf8String\", { enumerable: true, get: function () { return strings_1._toEscapedUtf8String; } });\nObject.defineProperty(exports, \"toUtf8Bytes\", { enumerable: true, get: function () { return strings_1.toUtf8Bytes; } });\nObject.defineProperty(exports, \"toUtf8CodePoints\", { enumerable: true, get: function () { return strings_1.toUtf8CodePoints; } });\nObject.defineProperty(exports, \"toUtf8String\", { enumerable: true, get: function () { return strings_1.toUtf8String; } });\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", { enumerable: true, get: function () { return strings_1.Utf8ErrorFuncs; } });\nvar transactions_1 = require(\"@ethersproject/transactions\");\nObject.defineProperty(exports, \"accessListify\", { enumerable: true, get: function () { return transactions_1.accessListify; } });\nObject.defineProperty(exports, \"computeAddress\", { enumerable: true, get: function () { return transactions_1.computeAddress; } });\nObject.defineProperty(exports, \"parseTransaction\", { enumerable: true, get: function () { return transactions_1.parse; } });\nObject.defineProperty(exports, \"recoverAddress\", { enumerable: true, get: function () { return transactions_1.recoverAddress; } });\nObject.defineProperty(exports, \"serializeTransaction\", { enumerable: true, get: function () { return transactions_1.serialize; } });\nObject.defineProperty(exports, \"TransactionTypes\", { enumerable: true, get: function () { return transactions_1.TransactionTypes; } });\nvar units_1 = require(\"@ethersproject/units\");\nObject.defineProperty(exports, \"commify\", { enumerable: true, get: function () { return units_1.commify; } });\nObject.defineProperty(exports, \"formatEther\", { enumerable: true, get: function () { return units_1.formatEther; } });\nObject.defineProperty(exports, \"parseEther\", { enumerable: true, get: function () { return units_1.parseEther; } });\nObject.defineProperty(exports, \"formatUnits\", { enumerable: true, get: function () { return units_1.formatUnits; } });\nObject.defineProperty(exports, \"parseUnits\", { enumerable: true, get: function () { return units_1.parseUnits; } });\nvar wallet_1 = require(\"@ethersproject/wallet\");\nObject.defineProperty(exports, \"verifyMessage\", { enumerable: true, get: function () { return wallet_1.verifyMessage; } });\nObject.defineProperty(exports, \"verifyTypedData\", { enumerable: true, get: function () { return wallet_1.verifyTypedData; } });\nvar web_1 = require(\"@ethersproject/web\");\nObject.defineProperty(exports, \"_fetchData\", { enumerable: true, get: function () { return web_1._fetchData; } });\nObject.defineProperty(exports, \"fetchJson\", { enumerable: true, get: function () { return web_1.fetchJson; } });\nObject.defineProperty(exports, \"poll\", { enumerable: true, get: function () { return web_1.poll; } });\n////////////////////////\n// Enums\nvar sha2_2 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"SupportedAlgorithm\", { enumerable: true, get: function () { return sha2_2.SupportedAlgorithm; } });\nvar strings_2 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"UnicodeNormalizationForm\", { enumerable: true, get: function () { return strings_2.UnicodeNormalizationForm; } });\nObject.defineProperty(exports, \"Utf8ErrorReason\", { enumerable: true, get: function () { return strings_2.Utf8ErrorReason; } });\n//# sourceMappingURL=utils.js.map","import { BigNumber, constants, utils, } from \"ethers\";\nconst logger = new utils.Logger(\"celo/transactions\");\nexport const celoTransactionFields = [\n    { name: \"nonce\", maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"feeCurrency\", length: 20 },\n    { name: \"gatewayFeeRecipient\", length: 20 },\n    { name: \"gatewayFee\", maxLength: 32, numeric: true },\n    { name: \"to\", length: 20 },\n    { name: \"value\", maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\nexport const celoAllowedTransactionKeys = {\n    chainId: true,\n    data: true,\n    gasLimit: true,\n    gasPrice: true,\n    nonce: true,\n    to: true,\n    value: true,\n    feeCurrency: true,\n    gatewayFeeRecipient: true,\n    gatewayFee: true,\n};\n// Almost identical to https://github.com/ethers-io/ethers.js/blob/master/packages/transactions/src.ts/index.ts#L85\n// Need to override to use the celo tx prop whitelists above\nexport function serializeCeloTransaction(transaction, signature) {\n    utils.checkProperties(transaction, celoAllowedTransactionKeys);\n    const raw = [];\n    celoTransactionFields.forEach(function (fieldInfo) {\n        let value = transaction[fieldInfo.name] || [];\n        const options = {};\n        if (fieldInfo.numeric) {\n            options.hexPad = \"left\";\n        }\n        value = utils.arrayify(utils.hexlify(value, options));\n        // Fixed-width field\n        if (fieldInfo.length &&\n            value.length !== fieldInfo.length &&\n            value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n        }\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = utils.stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n            }\n        }\n        raw.push(utils.hexlify(value));\n    });\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n        if (typeof chainId !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n    }\n    else if (signature &&\n        !utils.isBytesLike(signature) &&\n        signature.v &&\n        signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(utils.hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n    // Requesting an unsigned transation\n    if (!signature) {\n        return utils.RLP.encode(raw);\n    }\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = utils.splitSignature(signature);\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam;\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n            logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    }\n    else if (sig.v !== v) {\n        logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n    raw.push(utils.hexlify(v));\n    raw.push(utils.stripZeros(utils.arrayify(sig.r)));\n    raw.push(utils.stripZeros(utils.arrayify(sig.s)));\n    return utils.RLP.encode(raw);\n}\n// Almost identical to https://github.com/ethers-io/ethers.js/blob/master/packages/transactions/src.ts/index.ts#L165\n// Need to override to use the celo tx prop whitelists above\nexport function parseCeloTransaction(rawTransaction) {\n    const transaction = utils.RLP.decode(rawTransaction);\n    if (transaction.length !== 12 && transaction.length !== 9) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n    const tx = {\n        nonce: handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        feeCurrency: handleAddress(transaction[3]),\n        gatewayFeeRecipient: handleAddress(transaction[4]),\n        gatewayFee: handleNumber(transaction[5]),\n        to: handleAddress(transaction[6]),\n        value: handleNumber(transaction[7]),\n        data: transaction[8],\n        chainId: 0,\n    };\n    // Legacy unsigned transaction\n    if (transaction.length === 9) {\n        return tx;\n    }\n    try {\n        tx.v = BigNumber.from(transaction[9]).toNumber();\n    }\n    catch (error) {\n        console.log(error);\n        return tx;\n    }\n    tx.r = utils.hexZeroPad(transaction[10], 32);\n    tx.s = utils.hexZeroPad(transaction[11], 32);\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n    }\n    else {\n        // Signed Tranasaction\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) {\n            tx.chainId = 0;\n        }\n        let recoveryParam = tx.v - 27;\n        const raw = transaction.slice(0, 6);\n        if (tx.chainId !== 0) {\n            raw.push(utils.hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n        const digest = utils.keccak256(utils.RLP.encode(raw));\n        try {\n            // TODO there may be an issue here with incorrect from address extraction\n            tx.from = utils.recoverAddress(digest, {\n                r: utils.hexlify(tx.r),\n                s: utils.hexlify(tx.s),\n                recoveryParam: recoveryParam,\n            });\n        }\n        catch (error) {\n            console.log(error);\n        }\n        tx.hash = utils.keccak256(rawTransaction);\n    }\n    return tx;\n}\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return undefined;\n    }\n    return utils.getAddress(value);\n}\nfunction handleNumber(value) {\n    if (value === \"0x\") {\n        return constants.Zero;\n    }\n    return BigNumber.from(value);\n}\n//# sourceMappingURL=data:application/json;base64,","import { BigNumber, providers, utils } from \"ethers\";\nimport { parseCeloTransaction } from \"./transactions\";\nexport class CeloProvider extends providers.JsonRpcProvider {\n    constructor(url, network) {\n        super(url, network);\n        // Override certain block formatting properties that don't exist on Celo blocks\n        // Reaches into https://github.com/ethers-io/ethers.js/blob/master/packages/providers/src.ts/formatter.ts\n        const blockFormat = this.formatter.formats.block;\n        blockFormat.gasLimit = () => BigNumber.from(0);\n        blockFormat.nonce = () => \"\";\n        blockFormat.difficulty = () => 0;\n    }\n    /**\n     * Override to parse transaction correctly\n     * https://github.com/ethers-io/ethers.js/blob/master/packages/providers/src.ts/base-provider.ts\n     */\n    async sendTransaction(signedTransaction) {\n        await this.getNetwork();\n        const signedTx = await Promise.resolve(signedTransaction);\n        const hexTx = utils.hexlify(signedTx);\n        const tx = parseCeloTransaction(signedTx);\n        try {\n            const hash = await this.perform(\"sendTransaction\", {\n                signedTransaction: hexTx,\n            });\n            return this._wrapTransaction(tx, hash);\n        }\n        catch (error) {\n            error.transaction = tx;\n            error.transactionHash = tx.hash;\n            throw error;\n        }\n    }\n    /**\n     * Override to handle alternative gas currencies\n     * getGasPrice in https://github.com/ethers-io/ethers.js/blob/master/packages/providers/src.ts/base-provider.ts\n     */\n    async getGasPrice(feeCurrencyAddress) {\n        await this.getNetwork();\n        const params = feeCurrencyAddress ? { feeCurrencyAddress } : {};\n        return BigNumber.from(await this.perform(\"getGasPrice\", params));\n    }\n    /**\n     * Override to handle alternative gas currencies\n     * prepareRequest in https://github.com/ethers-io/ethers.js/blob/master/packages/providers/src.ts/json-rpc-provider.ts\n     */\n    prepareRequest(method, params) {\n        if (method === \"getGasPrice\") {\n            const param = params.feeCurrencyAddress\n                ? [params.feeCurrencyAddress]\n                : [];\n            return [\"eth_gasPrice\", param];\n        }\n        return super.prepareRequest(method, params);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2Vsb1Byb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9DZWxvUHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXRELE1BQU0sT0FBTyxZQUFhLFNBQVEsU0FBUyxDQUFDLGVBQWU7SUFDekQsWUFDRSxHQUFtQyxFQUNuQyxPQUE4QjtRQUU5QixLQUFLLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRXBCLCtFQUErRTtRQUMvRSx5R0FBeUc7UUFDekcsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQ2pELFdBQVcsQ0FBQyxRQUFRLEdBQUcsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMvQyxXQUFXLENBQUMsS0FBSyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUM3QixXQUFXLENBQUMsVUFBVSxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLGVBQWUsQ0FDbkIsaUJBQTJDO1FBRTNDLE1BQU0sSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3hCLE1BQU0sUUFBUSxHQUFHLE1BQU0sT0FBTyxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQzFELE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEMsTUFBTSxFQUFFLEdBQUcsb0JBQW9CLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDMUMsSUFBSTtZQUNGLE1BQU0sSUFBSSxHQUFHLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRTtnQkFDakQsaUJBQWlCLEVBQUUsS0FBSzthQUN6QixDQUFDLENBQUM7WUFDSCxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDeEM7UUFBQyxPQUFPLEtBQVUsRUFBRTtZQUNuQixLQUFLLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztZQUN2QixLQUFLLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7WUFDaEMsTUFBTSxLQUFLLENBQUM7U0FDYjtJQUNILENBQUM7SUFFRDs7O09BR0c7SUFDSCxLQUFLLENBQUMsV0FBVyxDQUFDLGtCQUEyQjtRQUMzQyxNQUFNLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUN4QixNQUFNLE1BQU0sR0FBRyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsRUFBRSxrQkFBa0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDaEUsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNuRSxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsY0FBYyxDQUFDLE1BQVcsRUFBRSxNQUFXO1FBQ3JDLElBQUksTUFBTSxLQUFLLGFBQWEsRUFBRTtZQUM1QixNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsa0JBQWtCO2dCQUNyQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUM7Z0JBQzdCLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDUCxPQUFPLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQ2hDO1FBRUQsT0FBTyxLQUFLLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM5QyxDQUFDO0NBQ0YifQ==","import { utils, Wallet } from \"ethers\";\nimport { serializeCeloTransaction, } from \"./transactions\";\nconst logger = new utils.Logger(\"CeloWallet\");\nconst forwardErrors = [\n    utils.Logger.errors.INSUFFICIENT_FUNDS,\n    utils.Logger.errors.NONCE_EXPIRED,\n    utils.Logger.errors.REPLACEMENT_UNDERPRICED,\n];\nexport class CeloWallet extends Wallet {\n    /**\n     * Override to skip checkTransaction step which rejects Celo tx properties\n     * https://github.com/ethers-io/ethers.js/blob/master/packages/abstract-signer/src.ts/index.ts\n     */\n    async populateTransaction(transaction) {\n        const tx = await utils.resolveProperties(transaction);\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then((to) => this.resolveName(to));\n        }\n        if (tx.gasPrice == null) {\n            tx.gasPrice = this.getGasPrice();\n        }\n        if (tx.nonce == null) {\n            tx.nonce = this.getTransactionCount(\"pending\");\n        }\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", utils.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx,\n                });\n            });\n        }\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        }\n        else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId(),\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n        return utils.resolveProperties(tx);\n    }\n    /**\n     * Override to serialize transaction using custom serialize method\n     * https://github.com/ethers-io/ethers.js/blob/master/packages/wallet/src.ts/index.ts\n     */\n    async signTransaction(transaction) {\n        const tx = await this.populateTransaction(transaction);\n        if (tx.from != null) {\n            if (utils.getAddress(tx.from) !== this.address) {\n                logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n            }\n            delete tx.from;\n        }\n        const signature = this._signingKey().signDigest(utils.keccak256(serializeCeloTransaction(tx)));\n        const serialized = serializeCeloTransaction(tx, signature);\n        return serialized;\n    }\n    /**\n     * Override just for type fix\n     * https://github.com/ethers-io/ethers.js/blob/master/packages/wallet/src.ts/index.ts\n     */\n    sendTransaction(transaction) {\n        return super.sendTransaction(transaction);\n    }\n    /**\n     * Override to skip checkTransaction step which rejects Celo tx properties\n     * https://github.com/ethers-io/ethers.js/blob/master/packages/abstract-signer/src.ts/index.ts\n     */\n    async estimateGas(transaction) {\n        this._checkProvider(\"estimateGas\");\n        const tx = await utils.resolveProperties(transaction);\n        return await this.provider.estimateGas(tx);\n    }\n    /**\n     * Override to support alternative gas currencies\n     * https://github.com/celo-tools/ethers.js/blob/master/packages/abstract-signer/src.ts/index.ts\n     */\n    async getGasPrice(feeCurrencyAddress) {\n        this._checkProvider(\"getGasPrice\");\n        // @ts-ignore\n        return await this.provider.getGasPrice(feeCurrencyAddress);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2Vsb1dhbGxldC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvQ2Vsb1dhbGxldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXdCLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDN0QsT0FBTyxFQUVMLHdCQUF3QixHQUN6QixNQUFNLGdCQUFnQixDQUFDO0FBRXhCLE1BQU0sTUFBTSxHQUFHLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUU5QyxNQUFNLGFBQWEsR0FBRztJQUNwQixLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxrQkFBa0I7SUFDdEMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYTtJQUNqQyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyx1QkFBdUI7Q0FDNUMsQ0FBQztBQUVGLE1BQU0sT0FBTyxVQUFXLFNBQVEsTUFBTTtJQUNwQzs7O09BR0c7SUFDSCxLQUFLLENBQUMsbUJBQW1CLENBQ3ZCLFdBQXFEO1FBRXJELE1BQU0sRUFBRSxHQUFRLE1BQU0sS0FBSyxDQUFDLGlCQUFpQixDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRTNELElBQUksRUFBRSxDQUFDLEVBQUUsSUFBSSxJQUFJLEVBQUU7WUFDakIsRUFBRSxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUNuRTtRQUNELElBQUksRUFBRSxDQUFDLFFBQVEsSUFBSSxJQUFJLEVBQUU7WUFDdkIsRUFBRSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDbEM7UUFDRCxJQUFJLEVBQUUsQ0FBQyxLQUFLLElBQUksSUFB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","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? prefix + \": \" + provided : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | bigint | string\n\nexport enum ChainId {\n  MAINNET = 42220,\n  ALFAJORES = 44787,\n  BAKLAVA = 62320\n}\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\nexport const FACTORY_ADDRESS = '0x62d5b84bE28a183aBB507E125B384122D2C25fAE'\n\nexport const INIT_CODE_HASH = '0xb3b8ff62960acea3a88039ebcf80699f15786f1b17cebd82802f7375827a339c'\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const TWO = JSBI.BigInt(2)\nexport const THREE = JSBI.BigInt(3)\nexport const FIVE = JSBI.BigInt(5)\nexport const TEN = JSBI.BigInt(10)\nexport const _100 = JSBI.BigInt(100)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)\n\nexport enum SolidityType {\n  uint8 = 'uint8',\n  uint256 = 'uint256'\n}\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n}\n\ninterface ChainInfo {\n  name: string\n  fornoURL: string\n  blockscoutURL: string\n}\n\nexport const CHAIN_INFO: { [K in ChainId]: ChainInfo } = {\n  [ChainId.ALFAJORES]: {\n    name: 'Alfajores',\n    fornoURL: 'https://alfajores-forno.celo-testnet.org',\n    blockscoutURL: 'https://alfajores-blockscout.celo-testnet.org'\n  },\n  [ChainId.BAKLAVA]: {\n    name: 'Baklava',\n    fornoURL: 'https://baklava-forno.celo-testnet.org',\n    blockscoutURL: 'https://baklava-blockscout.celo-testnet.org'\n  },\n  [ChainId.MAINNET]: {\n    name: 'Mainnet',\n    fornoURL: 'https://forno.celo.org',\n    blockscoutURL: 'https://explorer.celo.org'\n  }\n}\n","import { getAddress } from '@ethersproject/address'\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport { BigintIsh, ChainId, CHAIN_INFO, ONE, SolidityType, SOLIDITY_TYPE_MAXIMA, THREE, TWO, ZERO } from './constants'\n\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\n}\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address)\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\n    return checksummedAddress\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`)\n  }\n}\n\nexport function parseBigintIsh(bigintIsh: BigintIsh): JSBI {\n  return bigintIsh instanceof JSBI\n    ? bigintIsh\n    : typeof bigintIsh === 'bigint'\n    ? JSBI.BigInt(bigintIsh.toString())\n    : JSBI.BigInt(bigintIsh)\n}\n\n// mock the on-chain sqrt function\nexport function sqrt(y: JSBI): JSBI {\n  validateSolidityTypeInstance(y, SolidityType.uint256)\n  let z: JSBI = ZERO\n  let x: JSBI\n  if (JSBI.greaterThan(y, THREE)) {\n    z = y\n    x = JSBI.add(JSBI.divide(y, TWO), ONE)\n    while (JSBI.lessThan(x, z)) {\n      z = x\n      x = JSBI.divide(JSBI.add(JSBI.divide(y, x), x), TWO)\n    }\n  } else if (JSBI.notEqual(y, ZERO)) {\n    z = ONE\n  }\n  return z\n}\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n\n/**\n * Parses a Celo chain ID number into a ChainId enum instance.\n * @param chainId The chain ID as a number.\n */\nexport const parseNetwork = (chainId: number): ChainId => {\n  if (!Object.values(ChainId).includes(chainId)) {\n    throw new Error(`Unknown Celo chain ID: ${chainId}`)\n  }\n  return chainId as ChainId\n}\n\nexport function getBlockscoutLink(\n  chainId: ChainId,\n  data: string,\n  type: 'transaction' | 'token' | 'address' | 'block'\n): string {\n  const prefix = CHAIN_INFO[chainId].blockscoutURL\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/tokens/${data}`\n    }\n    case 'block': {\n      return `${prefix}/blocks/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { ONE } from '../../constants'\nimport { parseBigintIsh } from '../../utils'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = ONE) {\n    this.numerator = parseBigintIsh(numerator)\n    this.denominator = parseBigintIsh(denominator)\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n}\n","import { Rounding, _100 } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst _100_PERCENT = new Fraction(_100)\n\nexport class Percent extends Fraction {\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { ChainId, SolidityType } from '../constants'\nimport { validateAndParseAddress, validateSolidityTypeInstance } from '../utils'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token {\n  public readonly decimals: number\n  public readonly symbol?: string\n  public readonly name?: string\n\n  public readonly chainId: ChainId\n  public readonly address: string\n\n  /**\n   * Constructs an instance of the base class `Currency`.\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  public constructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string) {\n    validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8)\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n\n    this.chainId = chainId\n    this.address = validateAndParseAddress(address)\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true\n    }\n    return this.chainId === other.chainId && this.address === other.address\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address !== other.address, 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Token, currencyB: Token): boolean {\n  return currencyA.equals(currencyB)\n}\n\nexport const CELO = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x471EcE3750Da237f93B8E339c536989b8978a438', 18, 'CELO', 'Celo'),\n  [ChainId.ALFAJORES]: new Token(ChainId.ALFAJORES, '0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9', 18, 'CELO', 'Celo'),\n  [ChainId.BAKLAVA]: new Token(ChainId.BAKLAVA, '0x765DE816845861e75A25fCA122bb6898B8B1282a', 18, 'CELO', 'Celo')\n}\n\nexport const cUSD = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x765DE816845861e75A25fCA122bb6898B8B1282a',\n    18,\n    'cUSD',\n    'Celo Dollar'\n  ),\n  [ChainId.ALFAJORES]: new Token(\n    ChainId.ALFAJORES,\n    '0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1',\n    18,\n    'cUSD',\n    'Celo Dollar'\n  ),\n  [ChainId.BAKLAVA]: new Token(\n    ChainId.ALFAJORES,\n    '0x765DE816845861e75A25fCA122bb6898B8B1282a',\n    18,\n    'cUSD',\n    'Celo Dollar'\n  )\n}\n\nexport const cEUR = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xD8763CBa276a3738E6DE85b4b3bF5FDed6D6cA73', 18, 'cEUR', 'Celo Euro'),\n  [ChainId.ALFAJORES]: new Token(\n    ChainId.ALFAJORES,\n    '0x10c892A6EC43a53E45D0B916B4b7D383B1b78C0F',\n    18,\n    'cEUR',\n    'Celo Euro'\n  ),\n  [ChainId.BAKLAVA]: new Token(ChainId.BAKLAVA, '0xf9ecE301247aD2CE21894941830A2470f4E774ca', 18, 'cEUR', 'Celo Euro')\n}\n","import _Big from 'big.js'\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\nimport { BigintIsh, Rounding, SolidityType, TEN } from '../../constants'\nimport { parseBigintIsh, validateSolidityTypeInstance } from '../../utils'\nimport { Token } from '../token'\nimport { Fraction } from './fraction'\n\nconst Big = toFormat(_Big)\n\nclass CurrencyAmount extends Fraction {\n  public readonly currency: Token\n\n  // amount _must_ be raw, i.e. in the native representation\n  protected constructor(currency: Token, amount: BigintIsh) {\n    const parsedAmount = parseBigintIsh(amount)\n    validateSolidityTypeInstance(parsedAmount, SolidityType.uint256)\n\n    super(parsedAmount, JSBI.exponentiate(TEN, JSBI.BigInt(currency.decimals)))\n    this.currency = currency\n  }\n\n  public get raw(): JSBI {\n    return this.numerator\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(format)\n  }\n}\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token\n\n  // amount _must_ be raw, i.e. in the native representation\n  public constructor(token: Token, amount: BigintIsh) {\n    super(token, amount)\n    this.token = token\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.subtract(this.raw, other.raw))\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { BigintIsh, Rounding, TEN } from '../../constants'\nimport { Route } from '../route'\nimport { currencyEquals, Token } from '../token'\nimport { Fraction } from './fraction'\nimport { TokenAmount } from './tokenAmount'\n\nexport class Price extends Fraction {\n  public readonly baseCurrency: Token // input i.e. denominator\n  public readonly quoteCurrency: Token // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  public static fromRoute(route: Route): Price {\n    const prices: Price[] = []\n    for (const [i, pair] of route.pairs.entries()) {\n      prices.push(\n        route.path[i].equals(pair.token0)\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.raw, pair.reserve1.raw)\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.raw, pair.reserve0.raw)\n      )\n    }\n    return prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\n  }\n\n  // denominator and numerator _must_ be raw, i.e. in the native representation\n  public constructor(baseCurrency: Token, quoteCurrency: Token, denominator: BigintIsh, numerator: BigintIsh) {\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(TEN, JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(TEN, JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  public get raw(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n\n  public get adjusted(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public invert(): Price {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  public multiply(other: Price): Price {\n    invariant(currencyEquals(this.quoteCurrency, other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  // performs floor division on overflow\n  public quote(currencyAmount: TokenAmount): TokenAmount {\n    invariant(currencyEquals(currencyAmount.currency, this.baseCurrency), 'TOKEN')\n    return new TokenAmount(this.quoteCurrency, super.multiply(currencyAmount.raw).quotient)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import { Price } from './fractions/price'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { pack, keccak256 } from '@ethersproject/solidity'\nimport { getCreate2Address } from '@ethersproject/address'\n\nimport {\n  BigintIsh,\n  FACTORY_ADDRESS,\n  INIT_CODE_HASH,\n  MINIMUM_LIQUIDITY,\n  ZERO,\n  ONE,\n  FIVE,\n  _997,\n  _1000,\n  ChainId\n} from '../constants'\nimport { sqrt, parseBigintIsh } from '../utils'\nimport { InsufficientReservesError, InsufficientInputAmountError } from '../errors'\nimport { Token } from './token'\n\nlet PAIR_ADDRESS_CACHE: { [token0Address: string]: { [token1Address: string]: string } } = {}\n\nexport class Pair {\n  public readonly liquidityToken: Token\n  private readonly tokenAmounts: [TokenAmount, TokenAmount]\n\n  public static getAddress(tokenA: Token, tokenB: Token): string {\n    const tokens = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n\n    if (PAIR_ADDRESS_CACHE?.[tokens[0].address]?.[tokens[1].address] === undefined) {\n      PAIR_ADDRESS_CACHE = {\n        ...PAIR_ADDRESS_CACHE,\n        [tokens[0].address]: {\n          ...PAIR_ADDRESS_CACHE?.[tokens[0].address],\n          [tokens[1].address]: getCreate2Address(\n            FACTORY_ADDRESS,\n            keccak256(['bytes'], [pack(['address', 'address'], [tokens[0].address, tokens[1].address])]),\n            INIT_CODE_HASH\n          )\n        }\n      }\n    }\n\n    return PAIR_ADDRESS_CACHE[tokens[0].address][tokens[1].address]\n  }\n\n  public constructor(tokenAmountA: TokenAmount, tokenAmountB: TokenAmount) {\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    this.liquidityToken = new Token(\n      tokenAmounts[0].token.chainId,\n      Pair.getAddress(tokenAmounts[0].token, tokenAmounts[1].token),\n      18,\n      'UBE-V2',\n      'Ubeswap V2'\n    )\n    this.tokenAmounts = tokenAmounts as [TokenAmount, TokenAmount]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price {\n    return new Price(this.token0, this.token1, this.tokenAmounts[0].raw, this.tokenAmounts[1].raw)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price {\n    return new Price(this.token1, this.token0, this.tokenAmounts[1].raw, this.tokenAmounts[0].raw)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): ChainId {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].token\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].token\n  }\n\n  public get reserve0(): TokenAmount {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): TokenAmount {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: TokenAmount): [TokenAmount, Pair] {\n    invariant(this.involvesToken(inputAmount.token), 'TOKEN')\n    if (JSBI.equal(this.reserve0.raw, ZERO) || JSBI.equal(this.reserve1.raw, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.token)\n    const outputReserve = this.reserveOf(inputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.raw, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.raw)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.raw, _1000), inputAmountWithFee)\n    const outputAmount = new TokenAmount(\n      inputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.raw, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getInputAmount(outputAmount: TokenAmount): [TokenAmount, Pair] {\n    invariant(this.involvesToken(outputAmount.token), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.raw, ZERO) ||\n      JSBI.equal(this.reserve1.raw, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.raw, this.reserveOf(outputAmount.token).raw)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.token)\n    const inputReserve = this.reserveOf(outputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.raw, outputAmount.raw), _1000)\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.raw, outputAmount.raw), _997)\n    const inputAmount = new TokenAmount(\n      outputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: TokenAmount,\n    tokenAmountA: TokenAmount,\n    tokenAmountB: TokenAmount\n  ): TokenAmount {\n    invariant(totalSupply.token.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].token.equals(this.token0) && tokenAmounts[1].token.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.raw, ZERO)) {\n      liquidity = JSBI.subtract(sqrt(JSBI.multiply(tokenAmounts[0].raw, tokenAmounts[1].raw)), MINIMUM_LIQUIDITY)\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].raw, totalSupply.raw), this.reserve0.raw)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].raw, totalSupply.raw), this.reserve1.raw)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return new TokenAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: TokenAmount,\n    liquidity: TokenAmount,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.token.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.token.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.raw, totalSupply.raw), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: TokenAmount\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = parseBigintIsh(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.raw, this.reserve1.raw))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.raw, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(new TokenAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return new TokenAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.raw, this.reserveOf(token).raw), totalSupplyAdjusted.raw)\n    )\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { ChainId } from '../constants'\nimport { Price } from './fractions/price'\nimport { Pair } from './pair'\nimport { CELO, Token } from './token'\n\nexport class Route {\n  public readonly pairs: Pair[]\n  public readonly path: Token[]\n  public readonly input: Token\n  public readonly output: Token\n  public readonly midPrice: Price\n\n  public constructor(pairs: Pair[], input: Token, output?: Token) {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(\n      pairs.every(pair => pair.chainId === pairs[0].chainId),\n      'CHAIN_IDS'\n    )\n    invariant(input instanceof Token && pairs[0].involvesToken(input), 'INPUT')\n    invariant(\n      typeof output === 'undefined' || (output instanceof Token && pairs[pairs.length - 1].involvesToken(output)),\n      'OUTPUT'\n    )\n\n    const path: Token[] = [input instanceof Token ? input : CELO[pairs[0].chainId]]\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i]\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\n      path.push(output)\n    }\n\n    this.pairs = pairs\n    this.path = path\n    this.midPrice = Price.fromRoute(this)\n    this.input = input\n    this.output = output ?? path[path.length - 1]\n  }\n\n  public get chainId(): ChainId {\n    return this.pairs[0].chainId\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { ChainId, ONE, TradeType, ZERO } from '../constants'\nimport { sortedInsert } from '../utils'\nimport { Fraction } from './fractions/fraction'\nimport { Percent } from './fractions/percent'\nimport { Price } from './fractions/price'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport { Pair } from './pair'\nimport { Route } from './route'\nimport { currencyEquals, Token } from './token'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nfunction computePriceImpact(midPrice: Price, inputAmount: TokenAmount, outputAmount: TokenAmount): Percent {\n  const exactQuote = midPrice.raw.multiply(inputAmount.raw)\n  // calculate slippage := (exactQuote - outputAmount) / exactQuote\n  const slippage = exactQuote.subtract(outputAmount.raw).divide(exactQuote)\n  return new Percent(slippage.numerator, slippage.denominator)\n}\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput {\n  readonly inputAmount: TokenAmount\n  readonly outputAmount: TokenAmount\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator(a: InputOutput, b: InputOutput): number {\n  // must have same input and output token for comparison\n  invariant(currencyEquals(a.inputAmount.currency, b.inputAmount.currency), 'INPUT_CURRENCY')\n  invariant(currencyEquals(a.outputAmount.currency, b.outputAmount.currency), 'OUTPUT_CURRENCY')\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1\n    } else {\n      return 1\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1\n    } else {\n      return -1\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator(a: Trade, b: Trade) {\n  const ioComp = inputOutputComparator(a, b)\n  if (ioComp !== 0) {\n    return ioComp\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number\n  // the maximum number of hops a trade should contain\n  maxHops?: number\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through.\n   */\n  public readonly route: Route\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: TokenAmount\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: TokenAmount\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price\n  /**\n   * The mid price after the trade executes assuming no slippage.\n   */\n  public readonly nextMidPrice: Price\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn(route: Route, amountIn: TokenAmount): Trade {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut(route: Route, amountOut: TokenAmount): Trade {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\n  }\n\n  public constructor(route: Route, amount: TokenAmount, tradeType: TradeType) {\n    const amounts: TokenAmount[] = new Array(route.path.length)\n    const nextPairs: Pair[] = new Array(route.pairs.length)\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(currencyEquals(amount.currency, route.input), 'INPUT')\n      amounts[0] = amount\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i]\n        const [outputAmount, nextPair] = pair.getOutputAmount(amounts[i])\n        amounts[i + 1] = outputAmount\n        nextPairs[i] = nextPair\n      }\n    } else {\n      invariant(currencyEquals(amount.currency, route.output), 'OUTPUT')\n      amounts[amounts.length - 1] = amount\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1]\n        const [inputAmount, nextPair] = pair.getInputAmount(amounts[i])\n        amounts[i - 1] = inputAmount\n        nextPairs[i - 1] = nextPair\n      }\n    }\n\n    this.route = route\n    this.tradeType = tradeType\n    this.inputAmount = tradeType === TradeType.EXACT_INPUT ? amount : amounts[0]\n    this.outputAmount = tradeType === TradeType.EXACT_OUTPUT ? amount : amounts[amounts.length - 1]\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.raw,\n      this.outputAmount.raw\n    )\n    this.nextMidPrice = Price.fromRoute(new Route(nextPairs, route.input))\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): TokenAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.raw).quotient\n      return new TokenAmount(this.outputAmount.token, slippageAdjustedAmountOut)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): TokenAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.raw).quotient\n      return new TokenAmount(this.inputAmount.token, slippageAdjustedAmountIn)\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn(\n    pairs: Pair[],\n    currencyAmountIn: TokenAmount,\n    currencyOut: Token,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountIn: TokenAmount = currencyAmountIn,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountIn === currencyAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountIn instanceof TokenAmount\n        ? currencyAmountIn.token.chainId\n        : currencyOut instanceof Token\n        ? currencyOut.chainId\n        : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountIn = currencyAmountIn\n    const tokenOut = currencyOut\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountIn.token) && !pair.token1.equals(amountIn.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountOut: TokenAmount\n      try {\n        ;[amountOut] = pair.getOutputAmount(amountIn)\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.token.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([...currentPairs, pair], originalAmountIn.currency, currencyOut),\n            originalAmountIn,\n            TradeType.EXACT_INPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          amountOut,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [...currentPairs, pair],\n          originalAmountIn,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param currencyAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut(\n    pairs: Pair[],\n    currencyIn: Token,\n    currencyAmountOut: TokenAmount,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountOut: TokenAmount = currencyAmountOut,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountOut === currencyAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountOut instanceof TokenAmount\n        ? currencyAmountOut.token.chainId\n        : currencyIn instanceof Token\n        ? currencyIn.chainId\n        : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountOut = currencyAmountOut\n    const tokenIn = currencyIn\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountOut.token) && !pair.token1.equals(amountOut.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountIn: TokenAmount\n      try {\n        ;[amountIn] = pair.getInputAmount(amountOut)\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.token.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([pair, ...currentPairs], currencyIn, originalAmountOut.currency),\n            originalAmountOut,\n            TradeType.EXACT_OUTPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          amountIn,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [pair, ...currentPairs],\n          originalAmountOut,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getNetwork } from '@ethersproject/networks'\nimport { getDefaultProvider } from '@ethersproject/providers'\nimport { TokenAmount } from './entities/fractions/tokenAmount'\nimport { Pair } from './entities/pair'\nimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport invariant from 'tiny-invariant'\nimport ERC20 from './abis/ERC20.json'\nimport { ChainId } from './constants'\nimport { Token } from './entities/token'\n\nlet TOKEN_DECIMALS_CACHE: { [chainId: number]: { [address: string]: number } } = {\n  [ChainId.MAINNET]: {\n    '0xE0B7927c4aF23765Cb51314A0E0521A9645F0E2A': 9 // DGD\n  }\n}\n\n/**\n * Contains methods for constructing instances of pairs and tokens from on-chain data.\n */\nexport abstract class Fetcher {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n\n  /**\n   * Fetch information for a given token on the given chain, using the given ethers provider.\n   * @param chainId chain of the token\n   * @param address address of the token on the chain\n   * @param provider provider used to fetch the token\n   * @param symbol optional symbol of the token\n   * @param name optional name of the token\n   */\n  public static async fetchTokenData(\n    chainId: ChainId,\n    address: string,\n    provider = getDefaultProvider(getNetwork(chainId)),\n    symbol?: string,\n    name?: string\n  ): Promise<Token> {\n    const parsedDecimals =\n      typeof TOKEN_DECIMALS_CACHE?.[chainId]?.[address] === 'number'\n        ? TOKEN_DECIMALS_CACHE[chainId][address]\n        : await new Contract(address, ERC20, provider).decimals().then((decimals: number): number => {\n            TOKEN_DECIMALS_CACHE = {\n              ...TOKEN_DECIMALS_CACHE,\n              [chainId]: {\n                ...TOKEN_DECIMALS_CACHE?.[chainId],\n                [address]: decimals\n              }\n            }\n            return decimals\n          })\n    return new Token(chainId, address, parsedDecimals, symbol, name)\n  }\n\n  /**\n   * Fetches information about a pair and constructs a pair from the given two tokens.\n   * @param tokenA first token\n   * @param tokenB second token\n   * @param provider the provider to use to fetch the data\n   */\n  public static async fetchPairData(\n    tokenA: Token,\n    tokenB: Token,\n    provider = getDefaultProvider(getNetwork(tokenA.chainId))\n  ): Promise<Pair> {\n    invariant(tokenA.chainId === tokenB.chainId, 'CHAIN_ID')\n    const address = Pair.getAddress(tokenA, tokenB)\n    const [reserves0, reserves1] = await new Contract(address, IUniswapV2Pair.abi, provider).getReserves()\n    const balances = tokenA.sortsBefore(tokenB) ? [reserves0, reserves1] : [reserves1, reserves0]\n    return new Pair(new TokenAmount(tokenA, balances[0]), new TokenAmount(tokenB, balances[1]))\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { TradeType } from './constants'\nimport { Percent, TokenAmount, Trade } from './entities'\nimport { validateAndParseAddress } from './utils'\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean\n}\n\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\n  /**\n   * When the transaction expires.\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\n   */\n  deadline: number\n}\n\n/**\n * The parameters to use in the call to the Ubeswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Ubeswap V2 Router.\n   */\n  methodName: string\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[]\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string\n}\n\nfunction toHex(currencyAmount: TokenAmount) {\n  return `0x${currencyAmount.raw.toString(16)}`\n}\n\nconst ZERO_HEX = '0x0'\n\n/**\n * Represents the Ubeswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(trade: Trade, options: TradeOptions | TradeOptionsDeadline): SwapParameters {\n    // the router does not support both cgld in and out\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\n\n    const to: string = validateAndParseAddress(options.recipient)\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\n    const path: string[] = trade.route.path.map(token => token.address)\n    const deadline =\n      'ttl' in options\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\n        : `0x${options.deadline.toString(16)}`\n\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\n\n    let methodName: string\n    let args: (string | string[])[]\n    let value: string\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        methodName = useFeeOnTransfer\n          ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\n          : 'swapExactTokensForTokens'\n        // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        args = [amountIn, amountOut, path, to, deadline]\n        value = ZERO_HEX\n        break\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\n        methodName = 'swapTokensForExactTokens'\n        // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        args = [amountOut, amountIn, path, to, deadline]\n        value = ZERO_HEX\n        break\n    }\n    return {\n      methodName,\n      args,\n      value\n    }\n  }\n}\n"],"sourceRoot":""}