{"version":3,"sources":["utils/index.ts","components/transactionItem.tsx","components/accordion.tsx","subpages/dashboard/main/transactionHistory.tsx","subpages/dashboard/main/coinitem.tsx","subpages/dashboard/main/statistics.tsx","pages/dashboard/main/index.tsx"],"names":["AddressReducer","address","split","reduce","a","c","i","arr","length","TransactionItem","transaction","isMultiple","useState","detect","setDetect","divRef","useRef","selectedAccount","useSelector","SelectSelectedAccount","useEffect","current","window","outerWidth","clientWidth","swapData","TransferData","MultipleData","isSwap","id","ERC20MethodIds","swap","peer","rawData","from","toLowerCase","to","payments","ref","className","parseFloat","fromWei","amount","toFixed","Coins","tokenSymbol","src","coinUrl","name","map","payment","index","coinAddress","amountIn","coinIn","alt","amountOutMin","coinOutMin","hash","variants","close","height","open","Accordion","children","date","dataCount","status","direction","grid","method","isOpen","setOpen","onClick","style","transform","undefined","TransactionDirection","Swap","In","Out","dateFormat","Date","parseInt","TransactionStatus","Completed","Pending","div","initial","animate","TransactionHistory","transactions","useAppSelector","slice","transactionCount","batchRequest","timeStamp","CoinItem","title","coin","usd","img","percent","rate","width","Statistic","SelectTransactions","setPercent","balance","setBalance","lastIn","setIn","lastOut","setOut","allInOne","setAllInOne","currencies","SelectCurrencies","celo","CELO","cusd","cUSD","ceur","cEUR","ube","UBE","moo","MOO","mobi","MOBI","poof","POOF","creal","cREAL","balanceRedux","SelectBalances","celoBalance","cusdBalance","ceurBalance","ubeBalance","mooBalance","mobiBalance","poofBalance","crealBalance","all","useMemo","chart","celoDeg","Math","ceil","cusdDeg","ceurDeg","ubeDeg","mooDeg","mobiDeg","poofDeg","crealDeg","currencObj","Object","values","currencObj2","indexable","per","percent_24","result","tokenPrice","sort","b","toLocaleString","localeCompare","myin","myout","forEach","t","feeToken","entries","TransactionFeeTokenName","find","w","getMonth","calc","Web3","utils","value","price","color","background","item","coins","per_24","generate","Main","useTransactionProcess"],"mappings":"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","file":"static/js/8.32260077.chunk.js","sourcesContent":["\n\nexport const AddressReducer = (address: string)=>{\n    return address.split('').reduce((a, c, i, arr) => {\n        return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n    }, '')\n}","import { ERC20MethodIds, IBatchRequest, IFormattedTransaction, ISwap, ITransfer } from \"hooks/useTransactionProcess\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { SelectSelectedAccount } from \"redux/reducers/selectedAccount\";\nimport { Coins } from \"types\";\nimport { fromWei } from 'web3-utils'\nimport { AddressReducer } from \"../utils\";\n\nconst TransactionItem = ({ transaction, isMultiple }: { transaction: IFormattedTransaction, isMultiple?: boolean }) => {\n\n    const [detect, setDetect] = useState(true);\n    const divRef = useRef<HTMLDivElement>(null)\n    const selectedAccount = useSelector(SelectSelectedAccount)\n\n    useEffect(() => {\n        if (divRef.current && window.outerWidth / divRef.current.clientWidth > 3) {\n            setDetect(false)\n        }\n    }, [])\n\n\n    const isSwap = transaction.id === ERC20MethodIds.swap;\n    let peer = transaction.rawData.from.toLowerCase() === selectedAccount.toLowerCase() ? transaction.rawData.to : transaction.rawData.from;\n    let swapData;\n    let TransferData;\n    let MultipleData;\n    if (!isSwap && !isMultiple) {\n        TransferData = transaction as ITransfer\n    }\n    if (isSwap && !isMultiple) {\n        swapData = transaction as ISwap\n    }\n\n    if (isMultiple) {\n        MultipleData = transaction as IBatchRequest\n        peer = MultipleData.payments[0].to\n    }\n\n    return <div ref={divRef} className={`grid ${detect ? 'grid-cols-[25%,45%,30%] sm:grid-cols-[25%,35%,20%,20%] pl-5' : 'grid-cols-[35%,40%,25%]'} min-h-[75px] py-4 `}>\n        <div className=\"flex space-x-3\">\n            <div className={`hidden sm:flex ${detect ? \"items-center\" : \"items-start\"} pt-3 justify-center`}>\n                <div className={`bg-greylish bg-opacity-10 ${detect ? \"w-[45px] h-[45px] text-lg\" : \"w-[25px] h-[25px] text-xs\"} flex items-center justify-center rounded-full font-bold `}>\n                    {!isSwap ? <span> Un </span> : <span> S </span>}\n                </div>\n            </div>\n            <div className={`sm:flex flex-col ${detect ? \"justify-center\" : \"justify-start\"} items-start `}>\n                <div className=\"text-greylish\">\n                    {!isSwap ? <span> Unknown </span> : <span> Swap </span>}\n                </div>\n                {peer && !isSwap && <div className=\"text-sm text-greylish\">\n                    {AddressReducer(peer)}\n                </div>}\n            </div>\n        </div>\n        <div className=\"text-base\">\n            <div>\n                {!isSwap && TransferData && <div className={`flex ${detect ? \"grid-cols-[20%,80%]\" : \"grid-cols-[45%,55%]\"} items-center mx-7 space-x-4`}>\n                    <div className={`flex ${detect ? \"grid-cols-[15%,85%]\" : \"grid-cols-[25%,75%]\"} gap-x-2 items-center`}>\n                        <div className=\"w-[10px] h-[10px] rounded-full bg-primary self-center\">\n                        </div>\n                        <span>\n                            {parseFloat(fromWei(TransferData.amount, 'ether')).toFixed(2)}\n                        </span>\n                    </div>\n                    <div className={`flex ${detect ? \"grid-cols-[10%,90%]\" : \"grid-cols-[30%,70%]\"} gap-x-2 items-center`}>\n                        {Coins[TransferData.rawData.tokenSymbol as keyof Coins] ?\n                            <>\n                                <div>\n                                    <img src={Coins[TransferData.rawData.tokenSymbol as keyof Coins]?.coinUrl} className=\"rounded-full w-[18px] h-[18x]\" />\n                                </div>\n                                <div>\n                                    {Coins[TransferData.rawData.tokenSymbol as keyof Coins]?.name ?? \"Unknown Coin\"}\n                                </div>\n                            </>\n                            : <div>Unknown Coin</div>\n                        }\n\n                    </div>\n                </div>}\n                {!isSwap && MultipleData && MultipleData.payments.map((payment, index) => {\n\n                    return <div key={index} className={`flex ${detect ? \"grid-cols-[20%,80%]\" : \"grid-cols-[45%,55%]\"} items-center mx-7 space-x-4`}>\n                        <div className={`flex ${detect ? \"grid-cols-[15%,85%]\" : \"grid-cols-[25%,75%]\"} gap-x-2 items-center`}>\n                            <div className=\"w-[10px] h-[10px] rounded-full bg-primary self-center\">\n                            </div>\n                            <span>\n                                {parseFloat(fromWei(payment.amount, 'ether')).toFixed(2)}\n                            </span>\n                        </div>\n                        <div className={`flex ${detect ? \"grid-cols-[10%,90%]\" : \"grid-cols-[30%,70%]\"} gap-x-2 items-center`}>\n                            {payment.coinAddress ? <>\n                                <div>\n                                    <img src={payment.coinAddress.coinUrl} className=\"rounded-full w-[18px] h-[18x]\" />\n                                </div>\n                                <div>\n                                    {payment.coinAddress.name}\n                                </div>\n                            </> : <div>Unknown Token</div>}\n                        </div>\n                    </div>\n                })}\n                {isSwap && swapData && <div className=\"flex flex-col\">\n                    <div className={`flex ${detect ? \"grid-cols-[20%,80%]\" : \"grid-cols-[45%,55%]\"} items-center mx-7 space-x-4`}>\n                        <div className={`flex ${detect ? \"grid-cols-[15%,85%]\" : \"grid-cols-[25%,75%]\"} gap-x-2 items-center`}>\n                            <div className=\"w-[10px] h-[10px] rounded-full bg-primary self-center\">\n                            </div>\n                            <span>\n                                {parseFloat(fromWei(swapData.amountIn, 'ether'))}\n                            </span>\n                        </div>\n                        <div className={`flex ${detect ? \"grid-cols-[10%,90%]\" : \"grid-cols-[30%,70%]\"} gap-x-1 items-center`}>\n                            {swapData.coinIn ? <>\n                                <div>\n                                    <img src={swapData.coinIn.coinUrl} className=\"rounded-full w-[18px] h-[18x]\" />\n                                </div>\n                                <div>\n                                    {swapData.coinIn.name}\n                                </div>\n                            </> :\n                                <div>Unknown Coin</div>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"mx-7\">\n                        <div className=\"py-1 rounded-lg -translate-x-[4px]\">\n                            <img src=\"/icons/arrowdown.svg\" alt=\"\" className=\"w-[18px] h-[18px]\" />\n                        </div>\n                    </div>\n                    <div className={`flex ${detect ? \"grid-cols-[20%,80%]\" : \"grid-cols-[45%,55%]\"} items-center mx-7 space-x-4`}>\n                        <div className={`grid ${detect ? \"grid-cols-[15%,85%]\" : \"grid-cols-[25%,75%]\"} gap-x-2 items-center`}>\n                            <div className=\"w-[10px] h-[10px] rounded-full bg-primary self-center\">\n                            </div>\n                            <span>\n                                {parseFloat(fromWei(swapData.amountOutMin, 'ether')).toFixed(2)}\n                            </span>\n                        </div>\n                        <div className={`flex ${detect ? \"grid-cols-[10%,90%]\" : \"grid-cols-[30%,70%]\"} gap-x-1 items-center`}>\n                            {swapData.coinOutMin ? <>\n                                <div>\n                                    <img src={swapData.coinOutMin.coinUrl} className=\"rounded-full w-[18px] h-[18x]\" />\n                                </div>\n                                <div>\n                                    {swapData.coinOutMin.name}\n                                </div>\n\n                            </> : <div>Unknown Coin</div>}\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        </div>\n        {detect && <div></div>}\n        <div className=\"flex justify-end cursor-pointer items-start md:pr-0 \">\n            <Link to={`/dashboard/transactions/${transaction.rawData.hash}`}><div className={`text-primary  ${detect ? \"px-6 max-h-[80px] border-2 border-primary hover:bg-primary hover:text-white\" : \"text-sm\"} rounded-xl py-2`}>View Details</div></Link>\n        </div>\n    </div>\n}\n\nexport default TransactionItem;","import { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { TransactionDirection, TransactionStatus } from \"../types\";\nimport dateFormat from 'dateformat';\n\nconst variants = {\n    close: {\n        height: 0\n    },\n    open: {\n        height: \"auto\"\n    }\n}\n\nconst Accordion = ({ children, date, dataCount, status, direction, grid = \"grid-cols-[37%,33%,30%]\", method }: { method?: string, children: JSX.Element, date?: string, dataCount: number, status: TransactionStatus, direction?: TransactionDirection, grid?: string }) => {\n\n    const [isOpen, setOpen] = useState(false)\n\n    const click = () => {\n        setOpen(!isOpen)\n    }\n\n    return <div>\n        <div className=\"flex space-x-1 items-center bg-greylish bg-opacity-10 rounded-xl px-3 my-3\">\n            <div className=\"cursor-pointer\" onClick={click}>\n                <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n            </div>\n            <div className={`py-3 grid  px-2 ${grid} items-center w-full`}>\n                <div>\n                    {dataCount === 1 ? \"1 Payment\" : `${dataCount} Payments`}\n                </div>\n                <div className=\"text-sm text-greylish\">\n                    {method}\n                    {direction !== undefined && date && <>{TransactionDirection.Swap === direction ? \"Swapped\" : \"\"} {TransactionDirection.In === direction ? \"Received\" : \"\"} {TransactionDirection.Out === direction ? \"Executed\" : \"\"} on {dateFormat(new Date(parseInt(date) * 1e3), \"mediumDate\")}</>}\n                </div>\n                <div className={`grid grid-cols-[10%,90%] ${grid !== \"grid-cols-[37%,33%,30%]\" ? \"justify-start\" : \"justify-end\"} gap-x-2 items-center`}>\n                    {status === TransactionStatus.Completed && <div className=\"bg-green-400 w-2 h-2 rounded-full\"></div>}\n                    {status === TransactionStatus.Pending && <div className=\"bg-primary w-2 h-2 rounded-full\"></div>}\n                    <div>{status}</div>\n                </div>\n                <div></div>\n            </div>\n        </div>\n        <motion.div className=\"overflow-hidden\" variants={variants} initial={\"close\"} animate={isOpen ? \"open\" : \"close\"}>\n            {children}\n        </motion.div>\n    </div>\n}\n\nexport default Accordion;","import TransactionItem from \"../../../components/transactionItem\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n// import { TransactionHook, TransactionHookByDateInOut } from '../../../hooks/useTransactionProcess'\nimport { Fragment } from \"react\";\nimport Accordion from \"../../../components/accordion\";\nimport { TransactionDirection, TransactionStatus } from \"../../../types\";\nimport { ERC20MethodIds, IBatchRequest, IFormattedTransaction } from \"hooks/useTransactionProcess\";\nimport { useAppSelector } from \"redux/hooks\";\nimport { SelectSelectedAccount } from \"redux/reducers/selectedAccount\";\n\n\nconst TransactionHistory = ({ transactions }: { transactions: IFormattedTransaction[] }) => {\n\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n\n\n    return <div className=\"flex flex-col shadow-custom max-h-full px-5 pt-5 pb-4 rounded-xl\">\n        <div className=\"flex justify-between\">\n            <div className=\"font-semibold text-lg text-black tracking-wide\">Recent Transactions</div>\n            <div><Link to=\"/dashboard/transactions\" className=\"text-primary border border-primary px-10 py-2 rounded-xl\">View All</Link></div>\n        </div>\n        <div className=\"grid grid-cols-1 pt-5\">\n            {transactions && transactions.slice(0, 7).map((transaction, index) => {\n                const direction = transaction.rawData.from.toLowerCase() === selectedAccount.toLowerCase()\n                const isSwap = transaction.id === ERC20MethodIds.swap\n                const transactionCount = transaction.id === ERC20MethodIds.batchRequest ? (transaction as IBatchRequest).payments.length : 1\n                return <Fragment key={transaction.rawData.hash}>\n                    <Accordion grid={\"grid-cols-[25%,45%,30%] sm:grid-cols-[27%,33%,15%,15%]\"} direction={isSwap ? TransactionDirection.Swap : direction ? TransactionDirection.Out : TransactionDirection.In} date={transaction.rawData.timeStamp} dataCount={transactionCount} status={TransactionStatus.Completed}>\n                        <div>\n                            <TransactionItem transaction={transaction} isMultiple={transactionCount > 1} />\n                        </div>\n                    </Accordion>\n                </Fragment>\n            })}\n        </div>\n    </div>\n\n}\n\n\n\nexport default TransactionHistory;","\n\nconst CoinItem = ({ title, coin, usd, percent, rate, img }: { title: string, coin: string, usd: string, percent: string, rate?: number, img: string }) => {\n\n    return <div className=\"py-2 pl-2 gap-2 pr-5 flex bg-greylish bg-opacity-5 rounded-xl h-[60px]\">\n        <div className=\"w-[25px] flex items-center justify-center\">\n            <img width=\"25\" height=\"25\" src={img} alt=\"\" className=\"rounded-xl\" />\n        </div>\n        <div className=\"flex-grow grid grid-cols-2 gap\">\n            <div className=\"flex flex-col justify-between items-start\">\n                <div className=\"font-semibold text-black text-sm\">{title}</div>\n                <div className=\"text-greylish text-sm font-normal\">{`${coin}`}</div> \n                {/* <div className=\"text-greylish opacity-70 text-xs font-light\">{percent}%</div> */}\n            </div>\n            <div className=\"flex flex-col justify-center items-end\">\n                <div className=\"font-semibold text-black text-base\">${usd}</div>\n                {/* <div className=\"text-greylish opacity-70 text-xs font-light\">{`${title} ${coin}`}</div> */}\n            </div>\n            {/* <div className=\"flex flex-col justify-between items-end\">\n                <div className=\"font-semibold text-gray-500 text-sm\">{rate?.toFixed(2)}%</div>\n                <div className=\"text-greylish opacity-70 text-xs font-light\">24h</div>\n            </div> */}\n        </div>\n    </div>\n}\n\nexport default CoinItem;","import { useEffect, useMemo, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { IBalanceItem, ICurrencyInternal, SelectBalances, SelectCurrencies } from '../../../redux/reducers/currencies';\nimport { AltCoins, Coins, TransactionFeeTokenName } from '../../../types/coins';\nimport { generate } from 'shortid';\nimport Web3 from 'web3'\nimport { useAppSelector } from '../../../redux/hooks';\nimport { selectStorage } from \"../../../redux/reducers/storage\";\nimport { SelectTransactions } from \"../../../redux/reducers/transactions\";\nimport CoinItem from './coinitem';\nimport { SelectSelectedAccount } from \"../../../redux/reducers/selectedAccount\";\n\ninterface Balance {\n    amount: number,\n    per_24?: number,\n    percent: number,\n    coins: AltCoins,\n    tokenPrice: number | undefined\n}\n\nconst Statistic = () => {\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n\n    const transactions = useAppSelector(SelectTransactions)\n\n    const [percent, setPercent] = useState<number>()\n    const [balance, setBalance] = useState<string>()\n\n\n    const [lastIn, setIn] = useState<number>()\n    const [lastOut, setOut] = useState<number>();\n\n    const [allInOne, setAllInOne] = useState<Balance[]>()\n\n\n    const currencies = useAppSelector(SelectCurrencies)\n    const celo = (useAppSelector(SelectCurrencies)).CELO\n    const cusd = (useAppSelector(SelectCurrencies)).cUSD\n    const ceur = (useAppSelector(SelectCurrencies)).cEUR\n    const ube = (useAppSelector(SelectCurrencies)).UBE\n    const moo = (useAppSelector(SelectCurrencies)).MOO\n    const mobi = (useAppSelector(SelectCurrencies)).MOBI\n    const poof = (useAppSelector(SelectCurrencies)).POOF\n    const creal = (useAppSelector(SelectCurrencies)).cREAL\n\n    const balanceRedux = useAppSelector(SelectBalances)\n    const celoBalance = (useAppSelector(SelectBalances)).CELO\n    const cusdBalance = (useAppSelector(SelectBalances)).cUSD\n    const ceurBalance = (useAppSelector(SelectBalances)).cEUR\n    const ubeBalance = (useAppSelector(SelectBalances)).UBE\n    const mooBalance = (useAppSelector(SelectBalances)).MOO\n    const mobiBalance = (useAppSelector(SelectBalances)).MOBI\n    const poofBalance = (useAppSelector(SelectBalances)).POOF\n    const crealBalance = (useAppSelector(SelectBalances)).cREAL\n\n\n\n    const all = useMemo(() => {\n        if (celoBalance !== undefined && crealBalance !== undefined && cusdBalance !== undefined && ceurBalance !== undefined && ubeBalance !== undefined && mooBalance !== undefined && mobiBalance !== undefined && poofBalance !== undefined) {\n            return {\n                CELO: celoBalance,\n                cUSD: cusdBalance,\n                cEUR: ceurBalance,\n                UBE: ubeBalance,\n                MOO: mooBalance,\n                MOBI: mobiBalance,\n                POOF: poofBalance,\n                cREAL: crealBalance\n            }\n        }\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance])\n\n    const chart = useMemo(() => {\n        if (celoBalance !== undefined && crealBalance !== undefined && cusdBalance !== undefined && ceurBalance !== undefined && ubeBalance !== undefined && mooBalance !== undefined && mobiBalance !== undefined && poofBalance !== undefined) {\n            const celoDeg = Math.ceil(celoBalance.percent * 3.6)\n            const cusdDeg = Math.ceil(cusdBalance.percent * 3.6) + celoDeg;\n            const ceurDeg = Math.ceil(ceurBalance.percent * 3.6) + cusdDeg;\n            const ubeDeg = Math.ceil(ubeBalance.percent * 3.6) + ceurDeg;\n            const mooDeg = Math.ceil(mooBalance.percent * 3.6) + ubeDeg;\n            const mobiDeg = Math.ceil(mooBalance.percent * 3.6) + mooDeg;\n            const poofDeg = Math.ceil(poofBalance.percent * 3.6) + mobiDeg;\n            const crealDeg = Math.ceil(crealBalance.percent * 3.6) + poofDeg;\n\n            if (!celoDeg && !cusdDeg && !ceurDeg && !ubeDeg && !mooDeg && !mobiDeg && !poofDeg && !crealDeg) return `conic-gradient(#FF774E 0deg 360deg)`\n\n            return `conic-gradient(#fbce5c 0deg ${celoDeg}deg, #46cd85 ${celoDeg}deg ${cusdDeg}deg, #040404 ${cusdDeg}deg ${ceurDeg}deg, #6D619A ${ceurDeg}deg ${ubeDeg}deg, #3288ec ${ubeDeg}deg ${mooDeg}deg, #e984a0 ${mooDeg}deg ${mobiDeg}deg, #7D72FC ${mobiDeg}deg ${poofDeg}deg, #e904a3 ${poofDeg}deg ${crealDeg}deg)`\n        }\n        return `conic-gradient(#FF774E 0deg 360deg)`\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance, celo, cusd, ceur, ube, moo, mobi, poof, creal])\n\n\n\n\n    useEffect(() => {\n        if (celoBalance && cusdBalance && ceurBalance && ubeBalance && mooBalance && mobiBalance && poofBalance && crealBalance) {\n\n            //const total = celoBalance.amount + cusdBalance.amount + ceurBalance.amount + ubeBalance.amount + mooBalance.amount + poofBalance.amount + mobiBalance.amount;\n            const currencObj = Object.values(currencies)\n            const currencObj2: IBalanceItem[] = Object.values(balanceRedux)\n\n            let indexable = 0;\n            const per = currencObj.reduce((a, c: ICurrencyInternal, index) => {\n                if (currencObj2[index].amount > 0) {\n                    a += c.percent_24\n                    indexable++\n                }\n                return a;\n            }, 0)\n\n            const result: number =\n                (celoBalance.amount * celoBalance.tokenPrice) + (cusdBalance.amount * cusdBalance.tokenPrice) +\n                (ceurBalance.amount * ceurBalance.tokenPrice) + (ubeBalance.amount * ubeBalance.tokenPrice) +\n                (mooBalance.amount * mooBalance.tokenPrice) + (mobiBalance.amount * mobiBalance.tokenPrice) +\n                (poofBalance.amount * poofBalance.tokenPrice) + (crealBalance.amount * crealBalance.tokenPrice)\n\n            setBalance(result.toFixed(2))\n            setPercent(per / indexable)\n\n        } else if (celoBalance === undefined) {\n            setBalance(undefined)\n        }\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance, currencies])\n\n\n\n    useEffect(() => {\n        if (all) {\n            setAllInOne(Object.values(all).sort((a, b) => (b.amount * b.tokenPrice).toLocaleString().localeCompare((a.amount * a.tokenPrice).toLocaleString())).slice(0, 4))\n        }\n    }, [all])\n\n    useEffect(() => {\n        if (transactions) {\n            let myin = 0;\n            let myout = 0;\n            transactions.result.forEach(t => {\n                let feeToken = Object.entries(TransactionFeeTokenName).find(w => w[0] === t.tokenSymbol)?.[1]\n                const coin = feeToken ? Coins[feeToken] : Coins.cUSD;\n                const tTime = new Date(parseInt(t.timeStamp) * 1e3)\n                if (tTime.getMonth() === new Date().getMonth()) {\n                    const calc = (parseFloat((parseFloat(Web3.utils.fromWei(t.value, 'ether')).toFixed(6))) * (feeToken ? (currencies[coin.name]?.price ?? 0) : 0))\n                    if (t.from.toLowerCase() === selectedAccount.toLowerCase()) {\n                        myout += calc\n                    } else {\n                        myin += calc\n                    }\n                }\n            })\n            setIn(myin)\n            setOut(myout)\n        }\n    }, [transactions, currencies])\n\n    return <>\n        <div className=\"col-span-2 flex flex-col\">\n            <div className=\"flex justify-between pl-4 h-[30px]\">\n                <div className=\"text-base text-greylish\">Total Balance</div>\n                <div className=\"text-base text-greylish opacity-70\">24h</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-8\">\n                <div className=\"text-4xl\">\n                    {balance || (balance !== undefined && parseFloat(balance) === 0) ? `$${balance}` : <ClipLoader />}\n                </div>\n                <div className=\"flex items-center text-3xl text-greylish opacity-70\" style={\n                    balance !== undefined && parseFloat(balance) !== 0 ? percent && percent > 0 ? { color: 'green' } : { color: 'red' } : { color: 'black' }\n                }>\n                    {balance !== undefined && parseFloat(balance) !== 0 ? percent ? `${percent.toFixed(2)}%` : <ClipLoader /> : '0%'}\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div className=\"flex justify-between sm:pl-4\">\n                <div className=\"text-greylish text-sm sm:text-base\">Money in (c.m.)</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-4\">\n                <div className=\"text-xl sm:text-2xl opacity-80\">\n                    {lastIn !== undefined && transactions !== undefined && balance !== undefined ? `+ $${lastIn?.toFixed(2)}` : <ClipLoader />}\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div className=\"flex justify-between sm:pl-4\">\n                <div className=\"text-greylish text-sm sm:text-base\">Money out (c.m.)</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-4\">\n                <div className=\"text-greylish opacity-80 text-xl sm:text-2xl\">\n                    {lastOut !== undefined && transactions !== undefined && balance !== undefined ? `- $${lastOut?.toFixed(2)}` : <ClipLoader />}\n                </div>\n            </div>\n        </div>\n\n        <div className=\"sm:flex flex-col hidden\">\n            <div>Asset</div>\n            <div>\n                {celoBalance !== undefined && cusdBalance !== undefined ? <div className=\"w-[200px] h-[200px] rounded-full relative\" style={{\n                    background: chart\n                }}>\n                    <div className=\"w-[120px] h-[120px] bg-white left-1/2 top-1/2 absolute -translate-x-1/2 -translate-y-1/2 rounded-full\"></div>\n                </div> : null}\n            </div>\n        </div>\n        {\n            balance && allInOne !== undefined ?\n                <div className=\"flex flex-col gap-5 overflow-hidden col-span-2 sm:col-span-1\">\n                    {allInOne.map((item, index) => {\n                        return <CoinItem key={generate()} title={item.coins.name} coin={item.amount.toFixed(2)} usd={((item.tokenPrice ?? 0) * item.amount).toFixed(2)} percent={(item.percent || 0).toFixed(1)} rate={item.per_24} img={item.coins.coinUrl} />\n                    })}\n                </div> : <ClipLoader />\n        }</>\n\n}\n\n\nexport default Statistic;","import { ClipLoader } from 'react-spinners';\r\nimport TransactionHistory from '../../../subpages/dashboard/main/transactionHistory'\r\nimport Statistics from '../../../subpages/dashboard/main/statistics'\r\nimport useTransactionProcess from '../../../hooks/useTransactionProcess';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\n\r\nconst Main = () => {\r\n    const [transactions] = useTransactionProcess(true)\r\n\r\n    return <main className=\"flex gap-5\">\r\n        <div className=\"w-1/2\">\r\n            <div className=\"grid grid-cols-2 gap-8 max-h-full\">\r\n                <Statistics />\r\n            </div>\r\n        </div>\r\n        <div className=\" w-1/2\">\r\n            <div id=\"transaction\" className=\" pt-[30px]\">\r\n                {transactions ? <TransactionHistory transactions={transactions} /> : <div className=\"flex justify-center\"> <ClipLoader /></div>}\r\n            </div>\r\n        </div>\r\n    </main>\r\n}\r\n\r\nexport default Main;"],"sourceRoot":""}